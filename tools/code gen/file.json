{
  "meta": {
    "last_update": 1649792139677,
    "version": "0.237",
    "url": "https://library.sannybuilder.com/#/sa"
  },
  "extensions": [
    {
      "name": "default",
      "commands": [
        {
          "input": [
            {
              "name": "intensity",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0003",
          "member": "Shake",
          "name": "SHAKE_CAM",
          "num_params": 1,
          "short_desc": "Shakes the camera with the given intensity"
        },
        {
          "input": [
            {
              "name": "f1",
              "type": "float"
            },
            {
              "name": "f2",
              "type": "float"
            },
            {
              "name": "f3",
              "type": "float"
            },
            {
              "name": "f4",
              "type": "float"
            },
            {
              "name": "f5",
              "type": "float"
            },
            {
              "name": "f6",
              "type": "float"
            }
          ],
          "id": "0052",
          "name": "LINE",
          "num_params": 6,
          "short_desc": "Displays 6 floating-point values on the screen",
          "class": "Debugger",
          "member": "Line",
          "attrs": {
            "is_nop": true,
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Player",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Player",
          "id": "0053",
          "member": "Create",
          "name": "CREATE_PLAYER",
          "num_params": 5,
          "short_desc": "Creates a player at the specified location"
        },
        {
          "id": "0054",
          "name": "GET_PLAYER_COORDINATES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0055",
          "name": "SET_PLAYER_COORDINATES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0056",
          "name": "IS_PLAYER_IN_AREA_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0057",
          "name": "IS_PLAYER_IN_AREA_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "pedType",
              "type": "PedType"
            },
            {
              "name": "modelId",
              "type": "model_char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Char",
          "id": "009A",
          "member": "Create",
          "name": "CREATE_CHAR",
          "num_params": 6,
          "short_desc": "Creates a character at the specified location, with the specified model and pedtype"
        },
        {
          "attrs": {
            "is_destructor": true
          },
          "class": "Char",
          "id": "009B",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "member": "Delete",
          "name": "DELETE_CHAR",
          "num_params": 1,
          "short_desc": "Removes the character from the game and mission cleanup list, freeing game memory"
        },
        {
          "id": "009C",
          "name": "CHAR_WANDER_DIR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "009D",
          "name": "CHAR_WANDER_RANGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "009E",
          "name": "CHAR_FOLLOW_PATH",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "009F",
          "name": "CHAR_SET_IDLE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "00A0",
          "member": "GetCoordinates",
          "name": "GET_CHAR_COORDINATES",
          "num_params": 4,
          "short_desc": "Returns the character's coordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Char",
          "id": "00A1",
          "member": "SetCoordinates",
          "name": "SET_CHAR_COORDINATES",
          "num_params": 4,
          "short_desc": "Puts the character at the specified location"
        },
        {
          "id": "00A2",
          "name": "IS_CHAR_STILL_ALIVE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00A3",
          "member": "IsInArea2D",
          "name": "IS_CHAR_IN_AREA_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the specified 2D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00A4",
          "member": "IsInArea3D",
          "name": "IS_CHAR_IN_AREA_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character is within the specified 3D area"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_vehicle"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Car",
          "id": "00A5",
          "member": "Create",
          "name": "CREATE_CAR",
          "num_params": 5,
          "short_desc": "Creates a vehicle at the specified location, with the specified model"
        },
        {
          "attrs": {
            "is_destructor": true
          },
          "class": "Car",
          "id": "00A6",
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "member": "Delete",
          "name": "DELETE_CAR",
          "num_params": 1,
          "short_desc": "Removes the vehicle from the game"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "00A7",
          "member": "GotoCoordinates",
          "name": "CAR_GOTO_COORDINATES",
          "num_params": 4,
          "short_desc": "Makes the AI drive to the specified location by any means"
        },
        {
          "class": "Car",
          "id": "00A8",
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "member": "WanderRandomly",
          "name": "CAR_WANDER_RANDOMLY",
          "num_params": 1,
          "short_desc": "Clears any current tasks the vehicle has and makes it drive around aimlessly"
        },
        {
          "class": "Car",
          "id": "00A9",
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "member": "SetIdle",
          "name": "CAR_SET_IDLE",
          "num_params": 1,
          "short_desc": "Sets the car's mission to idle (MISSION_NONE), stopping any driving activity"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "00AA",
          "member": "GetCoordinates",
          "name": "GET_CAR_COORDINATES",
          "num_params": 4,
          "short_desc": "Returns the vehicle's coordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "00AB",
          "member": "SetCoordinates",
          "name": "SET_CAR_COORDINATES",
          "num_params": 4,
          "short_desc": "Puts the vehicle at the specified location"
        },
        {
          "id": "00AC",
          "name": "IS_CAR_STILL_ALIVE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "maxSpeed",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "00AD",
          "member": "SetCruiseSpeed",
          "name": "SET_CAR_CRUISE_SPEED",
          "num_params": 2,
          "short_desc": "Sets the vehicle's max speed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "drivingStyle",
              "type": "CarDrivingStyle"
            }
          ],
          "class": "Car",
          "id": "00AE",
          "member": "SetDrivingStyle",
          "name": "SET_CAR_DRIVING_STYLE",
          "num_params": 2,
          "short_desc": "Sets the behavior of the vehicle's AI driver"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "carMission",
              "type": "CarMission"
            }
          ],
          "class": "Car",
          "id": "00AF",
          "member": "SetMission",
          "name": "SET_CAR_MISSION",
          "num_params": 2,
          "short_desc": "Sets the mission of the vehicle's AI driver"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "00B0",
          "member": "IsInArea2D",
          "name": "IS_CAR_IN_AREA_2D",
          "num_params": 6,
          "short_desc": "Returns true if the vehicle is located within the specified 2D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "00B1",
          "member": "IsInArea3D",
          "name": "IS_CAR_IN_AREA_3D",
          "num_params": 8,
          "short_desc": "Returns true if the vehicle is located within the specified 3D area"
        },
        {
          "id": "00B2",
          "name": "SPECIAL_0",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00B3",
          "name": "SPECIAL_1",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00B4",
          "name": "SPECIAL_2",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00B5",
          "name": "SPECIAL_3",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00B6",
          "name": "SPECIAL_4",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00B7",
          "name": "SPECIAL_5",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00B8",
          "name": "SPECIAL_6",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00B9",
          "name": "SPECIAL_7",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "00BA",
          "member": "PrintBig",
          "name": "PRINT_BIG",
          "num_params": 3,
          "short_desc": "Displays a styled message for the specified time"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "flag",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "00BB",
          "member": "Print",
          "name": "PRINT",
          "num_params": 3,
          "short_desc": "Displays a message positioned on the bottom of the screen for the specified time"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "flag",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "00BC",
          "member": "PrintNow",
          "name": "PRINT_NOW",
          "num_params": 3,
          "short_desc": "Displays a message positioned on the bottom of the screen for the specified time"
        },
        {
          "id": "00BD",
          "name": "PRINT_SOON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "00BE",
          "member": "ClearPrints",
          "name": "CLEAR_PRINTS",
          "num_params": 0,
          "short_desc": "Clears all priority text and some styles of big texts"
        },
        {
          "output": [
            {
              "name": "hours",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "minutes",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Clock",
          "id": "00BF",
          "member": "GetTimeOfDay",
          "name": "GET_TIME_OF_DAY",
          "num_params": 2,
          "short_desc": "Returns the number of hours and minutes passed since midnight"
        },
        {
          "input": [
            {
              "name": "hours",
              "type": "int"
            },
            {
              "name": "minutes",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Clock",
          "id": "00C0",
          "member": "SetTimeOfDay",
          "name": "SET_TIME_OF_DAY",
          "num_params": 2,
          "short_desc": "Sets the current in-game time"
        },
        {
          "input": [
            {
              "name": "hours",
              "type": "int"
            },
            {
              "name": "minutes",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "minutesLeft",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Clock",
          "id": "00C1",
          "member": "GetMinutesToTimeOfDay",
          "name": "GET_MINUTES_TO_TIME_OF_DAY",
          "num_params": 3,
          "short_desc": "Returns the number of minutes left until the clock matches the time specified"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Camera",
          "id": "00C2",
          "member": "IsPointOnScreen",
          "name": "IS_POINT_ON_SCREEN",
          "num_params": 4,
          "short_desc": "Returns true if any part of the radius of the specified point is visible on screen"
        },
        {
          "input": [
            {
              "name": "",
              "type": "label"
            }
          ],
          "attrs": {
            "is_branch": true,
            "is_keyword": true
          },
          "id": "00D7",
          "name": "LAUNCH_MISSION",
          "num_params": 1,
          "short_desc": "Launches a submission script"
        },
        {
          "id": "00D8",
          "name": "MISSION_HAS_FINISHED",
          "num_params": 0,
          "short_desc": "Resets multiple settings that are usually set during missions and in some scripts",
          "class": "Mission",
          "member": "Finish",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "00D9",
          "member": "StoreCarIsIn",
          "name": "STORE_CAR_CHAR_IS_IN",
          "num_params": 2,
          "short_desc": "Returns the current vehicle of the character and adds it to the mission cleanup list"
        },
        {
          "id": "00DA",
          "name": "STORE_CAR_PLAYER_IS_IN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00DB",
          "member": "IsInCar",
          "name": "IS_CHAR_IN_CAR",
          "num_params": 2,
          "short_desc": "Returns true if the character is in the specified vehicle"
        },
        {
          "id": "00DC",
          "name": "IS_PLAYER_IN_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00DD",
          "member": "IsInModel",
          "name": "IS_CHAR_IN_MODEL",
          "num_params": 2,
          "short_desc": "Returns true if the character is driving a vehicle with the specified model"
        },
        {
          "id": "00DE",
          "name": "IS_PLAYER_IN_MODEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00DF",
          "member": "IsInAnyCar",
          "name": "IS_CHAR_IN_ANY_CAR",
          "num_params": 1,
          "short_desc": "Returns true if the character has a vehicle, even if they are not actually sat inside it (opening and closing the door)"
        },
        {
          "id": "00E0",
          "name": "IS_PLAYER_IN_ANY_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "pad",
              "type": "Pad"
            },
            {
              "name": "buttonId",
              "type": "Button"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Pad",
          "id": "00E1",
          "member": "IsButtonPressed",
          "name": "IS_BUTTON_PRESSED",
          "num_params": 2,
          "short_desc": "Returns true if the pad's button has been pressed"
        },
        {
          "input": [
            {
              "name": "pad",
              "type": "Pad"
            },
            {
              "name": "buttonId",
              "type": "Button"
            }
          ],
          "output": [
            {
              "name": "state",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "00E2",
          "name": "GET_PAD_STATE",
          "num_params": 3,
          "short_desc": "Stores the status of the specified key into a variable",
          "class": "Pad",
          "member": "GetState",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "00E3",
          "name": "LOCATE_PLAYER_ANY_MEANS_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00E4",
          "name": "LOCATE_PLAYER_ON_FOOT_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00E5",
          "name": "LOCATE_PLAYER_IN_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00E6",
          "name": "LOCATE_STOPPED_PLAYER_ANY_MEANS_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00E7",
          "name": "LOCATE_STOPPED_PLAYER_ON_FOOT_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00E8",
          "name": "LOCATE_STOPPED_PLAYER_IN_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00E9",
          "name": "LOCATE_PLAYER_ANY_MEANS_CHAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00EA",
          "name": "LOCATE_PLAYER_ON_FOOT_CHAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00EB",
          "name": "LOCATE_PLAYER_IN_CAR_CHAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "Sphere"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00EC",
          "member": "LocateAnyMeans2D",
          "name": "LOCATE_CHAR_ANY_MEANS_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 2D radius of the coordinates point"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00ED",
          "member": "LocateOnFoot2D",
          "name": "LOCATE_CHAR_ON_FOOT_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 2D radius of the coordinates point on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00EE",
          "member": "LocateInCar2D",
          "name": "LOCATE_CHAR_IN_CAR_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 2D radius of the coordinates point in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00EF",
          "member": "LocateStoppedAnyMeans2D",
          "name": "LOCATE_STOPPED_CHAR_ANY_MEANS_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character stopped within the 2D radius of the coordinates point"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00F0",
          "member": "LocateStoppedOnFoot2D",
          "name": "LOCATE_STOPPED_CHAR_ON_FOOT_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character stopped within the 2D radius of the coordinates point on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00F1",
          "member": "LocateStoppedInCar2D",
          "name": "LOCATE_STOPPED_CHAR_IN_CAR_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character stopped within the 2D radius of the coordinates point in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00F2",
          "member": "LocateAnyMeansChar2D",
          "name": "LOCATE_CHAR_ANY_MEANS_CHAR_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the other character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00F3",
          "member": "LocateOnFootChar2D",
          "name": "LOCATE_CHAR_ON_FOOT_CHAR_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the other character on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "otherChar",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00F4",
          "member": "LocateInCarChar2D",
          "name": "LOCATE_CHAR_IN_CAR_CHAR_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the other character in a vehicle"
        },
        {
          "id": "00F5",
          "name": "LOCATE_PLAYER_ANY_MEANS_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00F6",
          "name": "LOCATE_PLAYER_ON_FOOT_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00F7",
          "name": "LOCATE_PLAYER_IN_CAR_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00F8",
          "name": "LOCATE_STOPPED_PLAYER_ANY_MEANS_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00F9",
          "name": "LOCATE_STOPPED_PLAYER_ON_FOOT_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00FA",
          "name": "LOCATE_STOPPED_PLAYER_IN_CAR_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00FB",
          "name": "LOCATE_PLAYER_ANY_MEANS_CHAR_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00FC",
          "name": "LOCATE_PLAYER_ON_FOOT_CHAR_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00FD",
          "name": "LOCATE_PLAYER_IN_CAR_CHAR_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00FE",
          "member": "LocateAnyMeans3D",
          "name": "LOCATE_CHAR_ANY_MEANS_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character is within the 3D radius of the coordinates point"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00FF",
          "member": "LocateOnFoot3D",
          "name": "LOCATE_CHAR_ON_FOOT_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character is within the 3D radius of the coordinates point on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0100",
          "member": "LocateInCar3D",
          "name": "LOCATE_CHAR_IN_CAR_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character is within the 3D radius of the coordinates point in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0101",
          "member": "LocateStoppedAnyMeans3D",
          "name": "LOCATE_STOPPED_CHAR_ANY_MEANS_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character stopped within the 3D radius of the coordinates point"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0102",
          "member": "LocateStoppedOnFoot3D",
          "name": "LOCATE_STOPPED_CHAR_ON_FOOT_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character stopped within the 3D radius of the coordinates point on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0103",
          "member": "LocateStoppedInCar3D",
          "name": "LOCATE_STOPPED_CHAR_IN_CAR_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character stopped within the 3D radius of the coordinates point in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0104",
          "member": "LocateAnyMeansChar3D",
          "name": "LOCATE_CHAR_ANY_MEANS_CHAR_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the other character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0105",
          "member": "LocateOnFootChar3D",
          "name": "LOCATE_CHAR_ON_FOOT_CHAR_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the other character on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0106",
          "member": "LocateInCarChar3D",
          "name": "LOCATE_CHAR_IN_CAR_CHAR_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the other character in a vehicle"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Object",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Object",
          "id": "0107",
          "member": "Create",
          "name": "CREATE_OBJECT",
          "num_params": 5,
          "short_desc": "Creates an object at the specified location, with the specified model"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "attrs": {
            "is_destructor": true
          },
          "class": "Object",
          "id": "0108",
          "member": "Delete",
          "name": "DELETE_OBJECT",
          "num_params": 1,
          "short_desc": "Destroys the object, freeing game memory"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "money",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "0109",
          "member": "AddScore",
          "name": "ADD_SCORE",
          "num_params": 2,
          "short_desc": "Adds to the player's money"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "money",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "010A",
          "member": "IsScoreGreater",
          "name": "IS_SCORE_GREATER",
          "num_params": 2,
          "short_desc": "Returns true if the player's money is over the specified value"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "money",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "010B",
          "member": "StoreScore",
          "name": "STORE_SCORE",
          "num_params": 2,
          "short_desc": "Returns the player's money"
        },
        {
          "id": "010C",
          "name": "GIVE_REMOTE_CONTROLLED_CAR_TO_PLAYER",
          "num_params": 0,
          "short_desc": "Gives control of the remote-control vehicle to the player",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "wantedLevel",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "010D",
          "member": "AlterWantedLevel",
          "name": "ALTER_WANTED_LEVEL",
          "num_params": 2,
          "short_desc": "Sets the player's wanted level"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "wantedLevel",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "010E",
          "member": "AlterWantedLevelNoDrop",
          "name": "ALTER_WANTED_LEVEL_NO_DROP",
          "num_params": 2,
          "short_desc": "Sets the player's wanted level if the specified level is higher than the current one"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "wantedLevel",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "010F",
          "member": "IsWantedLevelGreater",
          "name": "IS_WANTED_LEVEL_GREATER",
          "num_params": 2,
          "short_desc": "Returns true if the player's wanted level is over the specified value"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "class": "Player",
          "id": "0110",
          "member": "ClearWantedLevel",
          "name": "CLEAR_WANTED_LEVEL",
          "num_params": 1,
          "short_desc": "Clears the player's wanted level"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "",
          "id": "0111",
          "member": "",
          "name": "SET_DEATHARREST_STATE",
          "num_params": 1,
          "short_desc": "Sets the detection of death and arrest during a mission (0112)",
          "attrs": {
            "is_keyword": true
          }
        },
        {
          "attrs": {
            "is_condition": true,
            "is_keyword": true
          },
          "class": "",
          "id": "0112",
          "member": "",
          "name": "HAS_DEATHARREST_BEEN_EXECUTED",
          "num_params": 0,
          "short_desc": "Returns true if the player is dead (wasted) or arrested (busted)"
        },
        {
          "id": "0113",
          "name": "ADD_AMMO_TO_PLAYER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            },
            {
              "name": "ammo",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "0114",
          "member": "AddAmmo",
          "name": "ADD_AMMO_TO_CHAR",
          "num_params": 3,
          "short_desc": "Adds the specified amount of ammo to the character's weapon, if the character has the weapon"
        },
        {
          "id": "0115",
          "name": "ADD_AMMO_TO_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0116",
          "name": "IS_PLAYER_STILL_ALIVE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Player",
          "id": "0117",
          "member": "IsDead",
          "name": "IS_PLAYER_DEAD",
          "num_params": 1,
          "short_desc": "Returns true if the handle is an invalid player handle or the player is dead (wasted)"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Char",
          "id": "0118",
          "member": "IsDead",
          "name": "IS_CHAR_DEAD",
          "num_params": 1,
          "short_desc": "Returns true if the handle is an invalid character handle or the character is dead (wasted)"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Car",
          "id": "0119",
          "member": "IsDead",
          "name": "IS_CAR_DEAD",
          "num_params": 1,
          "short_desc": "Returns true if the handle is an invalid vehicle handle or the vehicle has been destroyed (wrecked)"
        },
        {
          "id": "011A",
          "name": "SET_CHAR_THREAT_SEARCH",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "011B",
          "name": "SET_CHAR_THREAT_REACTION",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "011C",
          "name": "SET_CHAR_OBJ_NO_OBJ",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "011D",
          "name": "ORDER_DRIVER_OUT_OF_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "011E",
          "name": "ORDER_CHAR_TO_DRIVE_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "011F",
          "name": "ADD_PATROL_POINT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0120",
          "name": "IS_PLAYER_IN_GANGZONE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0121",
          "name": "IS_PLAYER_IN_ZONE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0122",
          "member": "IsPressingHorn",
          "name": "IS_PLAYER_PRESSING_HORN",
          "num_params": 1,
          "short_desc": "Returns true if the player is honking the horn in a car"
        },
        {
          "id": "0123",
          "name": "HAS_CHAR_SPOTTED_PLAYER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0124",
          "name": "ORDER_CHAR_TO_BACKDOOR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0125",
          "name": "ADD_CHAR_TO_GANG",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0126",
          "name": "IS_CHAR_OBJECTIVE_PASSED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0127",
          "name": "SET_CHAR_DRIVE_AGGRESSION",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0128",
          "name": "SET_CHAR_MAX_DRIVESPEED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "pedType",
              "type": "PedType"
            },
            {
              "name": "modelId",
              "type": "model_char"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Char",
          "id": "0129",
          "member": "CreateInsideCar",
          "name": "CREATE_CHAR_INSIDE_CAR",
          "num_params": 4,
          "short_desc": "Creates a character in the driver's seat of the vehicle"
        },
        {
          "id": "012A",
          "name": "WARP_PLAYER_FROM_CAR_TO_COORD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "012B",
          "name": "MAKE_CHAR_DO_NOTHING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "012C",
          "name": "SET_CHAR_INVINCIBLE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "012D",
          "name": "SET_PLAYER_INVINCIBLE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "012E",
          "name": "SET_CHAR_GRAPHIC_TYPE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "012F",
          "name": "SET_PLAYER_GRAPHIC_TYPE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0130",
          "name": "HAS_PLAYER_BEEN_ARRESTED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0131",
          "name": "STOP_CHAR_DRIVING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0132",
          "name": "KILL_CHAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0133",
          "name": "SET_FAVOURITE_CAR_MODEL_FOR_CHAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0134",
          "name": "SET_CHAR_OCCUPATION",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0135",
          "name": "CHANGE_CAR_LOCK",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0136",
          "name": "SHAKE_CAM_WITH_POINT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "0137",
          "member": "IsModel",
          "name": "IS_CAR_MODEL",
          "num_params": 2,
          "short_desc": "Returns true if the vehicle has the specified model"
        },
        {
          "id": "0138",
          "name": "IS_CAR_REMAP",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0139",
          "name": "HAS_CAR_JUST_SUNK",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "013A",
          "name": "SET_CAR_NO_COLLIDE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "013B",
          "name": "IS_CAR_DEAD_IN_AREA_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "013C",
          "name": "IS_CAR_DEAD_IN_AREA_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "013D",
          "name": "IS_TRAILER_ATTACHED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "013E",
          "name": "IS_CAR_ON_TRAILER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "013F",
          "name": "HAS_CAR_GOT_WEAPON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0140",
          "name": "PARK",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0141",
          "name": "HAS_PARK_FINISHED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0142",
          "name": "KILL_ALL_PASSENGERS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0143",
          "name": "SET_CAR_BULLETPROOF",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0144",
          "name": "SET_CAR_FLAMEPROOF",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0145",
          "name": "SET_CAR_ROCKETPROOF",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0146",
          "name": "IS_CARBOMB_ACTIVE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0147",
          "name": "GIVE_CAR_ALARM",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0148",
          "name": "PUT_CAR_ON_TRAILER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0149",
          "name": "IS_CAR_CRUSHED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "014A",
          "name": "CREATE_GANG_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            },
            {
              "name": "primaryColor",
              "type": "int"
            },
            {
              "name": "secondaryColor",
              "type": "int"
            },
            {
              "name": "forceSpawn",
              "type": "bool"
            },
            {
              "name": "alarmChance",
              "type": "int"
            },
            {
              "name": "doorLockChance",
              "type": "int"
            },
            {
              "name": "minDelay",
              "type": "int"
            },
            {
              "name": "maxDelay",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "CarGenerator",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "CarGenerator",
          "id": "014B",
          "member": "Create",
          "name": "CREATE_CAR_GENERATOR",
          "num_params": 13,
          "short_desc": "Initializes a parked car generator"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "CarGenerator"
            },
            {
              "name": "amount",
              "type": "int"
            }
          ],
          "class": "CarGenerator",
          "id": "014C",
          "member": "Switch",
          "name": "SWITCH_CAR_GENERATOR",
          "num_params": 2,
          "short_desc": "Specifies the number of times the car generator spawns a car (101 - infinite)"
        },
        {
          "id": "014D",
          "name": "ADD_PAGER_MESSAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "timer",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "direction",
              "type": "TimerDirection"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "014E",
          "member": "DisplayTimer",
          "name": "DISPLAY_ONSCREEN_TIMER",
          "num_params": 2,
          "short_desc": "Creates a countdown or countup onscreen timer"
        },
        {
          "input": [
            {
              "name": "timer",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "014F",
          "member": "ClearTimer",
          "name": "CLEAR_ONSCREEN_TIMER",
          "num_params": 1,
          "short_desc": "Removes the onscreen timer"
        },
        {
          "id": "0150",
          "name": "DISPLAY_ONSCREEN_COUNTER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "counter",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "0151",
          "member": "ClearCounter",
          "name": "CLEAR_ONSCREEN_COUNTER",
          "num_params": 1,
          "short_desc": "Removes the onscreen counter (0150 or 03C4)"
        },
        {
          "id": "0152",
          "name": "SET_ZONE_CAR_INFO",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0153",
          "name": "IS_CHAR_IN_GANG_ZONE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "zone",
              "type": "zone_key"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0154",
          "member": "IsInZone",
          "name": "IS_CHAR_IN_ZONE",
          "num_params": 2,
          "short_desc": "Returns true if the character is in the specified map zone"
        },
        {
          "id": "0155",
          "name": "SET_CAR_DENSITY",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0156",
          "name": "SET_PED_DENSITY",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0157",
          "name": "POINT_CAMERA_AT_PLAYER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "mode",
              "type": "CameraMode"
            },
            {
              "name": "switchStyle",
              "type": "SwitchType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0158",
          "member": "PointAtCar",
          "name": "POINT_CAMERA_AT_CAR",
          "num_params": 3,
          "short_desc": "Attaches the camera to the specified vehicle"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "mode",
              "type": "CameraMode"
            },
            {
              "name": "switchStyle",
              "type": "SwitchType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0159",
          "member": "PointAtChar",
          "name": "POINT_CAMERA_AT_CHAR",
          "num_params": 3,
          "short_desc": "Attaches the camera to the specified character"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "015A",
          "member": "Restore",
          "name": "RESTORE_CAMERA",
          "num_params": 0,
          "short_desc": "Restores the camera to its usual position"
        },
        {
          "input": [
            {
              "name": "pad",
              "type": "Pad"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "intensity",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Pad",
          "id": "015B",
          "member": "Shake",
          "name": "SHAKE_PAD",
          "num_params": 3,
          "short_desc": "Shakes the player's joypad at the specified intensity for the specified time"
        },
        {
          "id": "015C",
          "name": "SET_ZONE_PED_INFO",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "scale",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Clock",
          "id": "015D",
          "member": "SetTimeScale",
          "name": "SET_TIME_SCALE",
          "num_params": 1,
          "short_desc": "Sets the game to run at the specified speed"
        },
        {
          "id": "015E",
          "name": "IS_CAR_IN_AIR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRotation",
              "type": "float"
            },
            {
              "name": "yRotation",
              "type": "float"
            },
            {
              "name": "zRotation",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "015F",
          "member": "SetFixedPosition",
          "name": "SET_FIXED_CAMERA_POSITION",
          "num_params": 6,
          "short_desc": "Sets the camera's position and rotation"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "switchStyle",
              "type": "SwitchType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0160",
          "member": "PointAtPoint",
          "name": "POINT_CAMERA_AT_POINT",
          "num_params": 4,
          "short_desc": "Points the camera at the specified location and applies the position set by 0159"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "color",
              "type": "BlipColor"
            },
            {
              "name": "display",
              "type": "BlipDisplay"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "0161",
          "member": "AddForCarOld",
          "name": "ADD_BLIP_FOR_CAR_OLD",
          "num_params": 4,
          "short_desc": "Adds a blip with properties to the vehicle"
        },
        {
          "id": "0162",
          "name": "ADD_BLIP_FOR_CHAR_OLD",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0163",
          "name": "ADD_BLIP_FOR_OBJECT_OLD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Blip"
            }
          ],
          "class": "Blip",
          "id": "0164",
          "member": "Remove",
          "name": "REMOVE_BLIP",
          "num_params": 1,
          "short_desc": "Removes the blip",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Blip"
            },
            {
              "name": "color",
              "type": "BlipColor"
            }
          ],
          "class": "Blip",
          "id": "0165",
          "member": "ChangeColor",
          "name": "CHANGE_BLIP_COLOUR",
          "num_params": 2,
          "short_desc": "Sets the blip's color"
        },
        {
          "id": "0166",
          "name": "DIM_BLIP",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "colour",
              "type": "BlipColor"
            },
            {
              "name": "display",
              "type": "BlipDisplay"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "0167",
          "member": "AddForCoordOld",
          "name": "ADD_BLIP_FOR_COORD_OLD",
          "num_params": 6,
          "short_desc": "Adds a blip with properties at the location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Blip"
            },
            {
              "name": "size",
              "type": "int"
            }
          ],
          "class": "Blip",
          "id": "0168",
          "member": "ChangeScale",
          "name": "CHANGE_BLIP_SCALE",
          "num_params": 2,
          "short_desc": "Sets the blip's size"
        },
        {
          "input": [
            {
              "name": "r",
              "type": "int"
            },
            {
              "name": "g",
              "type": "int"
            },
            {
              "name": "b",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0169",
          "member": "SetFadingColor",
          "name": "SET_FADING_COLOUR",
          "num_params": 3,
          "short_desc": "Sets the RGB color of the fade command (016A)"
        },
        {
          "input": [
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "direction",
              "type": "Fade"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "016A",
          "member": "DoFade",
          "name": "DO_FADE",
          "num_params": 2,
          "short_desc": "Fades the screen for the specified time"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Camera",
          "id": "016B",
          "member": "GetFadingStatus",
          "name": "GET_FADING_STATUS",
          "num_params": 0,
          "short_desc": "Returns true if the screen is fading (016A)"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            },
            {
              "name": "townId",
              "type": "Town"
            }
          ],
          "id": "016C",
          "name": "ADD_HOSPITAL_RESTART",
          "num_params": 5,
          "short_desc": "Adds a hospital restart, which is where the player will spawn after death (wasted) if the point is closer than any other hospital restart",
          "class": "Restart",
          "member": "AddHospital",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            },
            {
              "name": "townId",
              "type": "Town"
            }
          ],
          "id": "016D",
          "name": "ADD_POLICE_RESTART",
          "num_params": 5,
          "short_desc": "Adds a police restart, which is where the player will spawn after being arrested (busted) if the point is closer than any other police restart",
          "class": "Restart",
          "member": "AddPolice",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Restart",
          "id": "016E",
          "member": "OverrideNext",
          "name": "OVERRIDE_NEXT_RESTART",
          "num_params": 4,
          "short_desc": "Forces this location to be the next respawn location"
        },
        {
          "input": [
            {
              "name": "textureType",
              "type": "ShadowTextureType"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "length",
              "type": "float"
            },
            {
              "name": "intensity",
              "type": "int"
            },
            {
              "name": "r",
              "type": "int"
            },
            {
              "name": "g",
              "type": "int"
            },
            {
              "name": "b",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Fx",
          "id": "016F",
          "member": "DrawShadow",
          "name": "DRAW_SHADOW",
          "num_params": 10,
          "short_desc": "Draws a shadow in the current frame"
        },
        {
          "id": "0170",
          "name": "GET_PLAYER_HEADING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0171",
          "name": "SET_PLAYER_HEADING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "heading",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "0172",
          "member": "GetHeading",
          "name": "GET_CHAR_HEADING",
          "num_params": 2,
          "short_desc": "Returns the character's heading (z-angle)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "class": "Char",
          "id": "0173",
          "member": "SetHeading",
          "name": "SET_CHAR_HEADING",
          "num_params": 2,
          "short_desc": "Sets the character's heading (z-angle)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "heading",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "0174",
          "member": "GetHeading",
          "name": "GET_CAR_HEADING",
          "num_params": 2,
          "short_desc": "Returns the vehicle's heading (z-angle)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "0175",
          "member": "SetHeading",
          "name": "SET_CAR_HEADING",
          "num_params": 2,
          "short_desc": "Sets the vehicle's heading (z-angle)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "output": [
            {
              "name": "heading",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Object",
          "id": "0176",
          "member": "GetHeading",
          "name": "GET_OBJECT_HEADING",
          "num_params": 2,
          "short_desc": "Returns the object's heading (z-angle)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "class": "Object",
          "id": "0177",
          "member": "SetHeading",
          "name": "SET_OBJECT_HEADING",
          "num_params": 2,
          "short_desc": "Sets the object's heading (z-angle)"
        },
        {
          "id": "0178",
          "name": "IS_PLAYER_TOUCHING_OBJECT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            }
          ],
          "id": "0179",
          "name": "IS_CHAR_TOUCHING_OBJECT",
          "num_params": 2,
          "short_desc": "Returns true if the character is colliding with the specified object",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsTouchingObject"
        },
        {
          "id": "017A",
          "name": "SET_PLAYER_AMMO",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            },
            {
              "name": "ammo",
              "type": "int"
            }
          ],
          "id": "017B",
          "name": "SET_CHAR_AMMO",
          "num_params": 3,
          "short_desc": "Sets the amount of ammo the character has in the specified weapon",
          "class": "Char",
          "member": "SetAmmo"
        },
        {
          "id": "017C",
          "name": "SET_CAR_AMMO",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "017D",
          "name": "LOAD_CAMERA_SPLINE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "017E",
          "name": "MOVE_CAMERA_ALONG_SPLINE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "017F",
          "name": "GET_CAMERA_POSITION_ALONG_SPLINE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "flag",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_keyword": true
          },
          "id": "0180",
          "name": "DECLARE_MISSION_FLAG",
          "num_params": 1,
          "short_desc": "Links the global variable to the specific hardcoded flag that defines is there an active mission or not"
        },
        {
          "id": "0181",
          "name": "DECLARE_MISSION_FLAG_FOR_CONTACT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0182",
          "name": "DECLARE_BASE_BRIEF_ID_FOR_CONTACT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0183",
          "name": "IS_PLAYER_HEALTH_GREATER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "health",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0184",
          "member": "IsHealthGreater",
          "name": "IS_CHAR_HEALTH_GREATER",
          "num_params": 2,
          "short_desc": "Returns true if the character's health is over the specified value"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "health",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "0185",
          "member": "IsHealthGreater",
          "name": "IS_CAR_HEALTH_GREATER",
          "num_params": 2,
          "short_desc": "Returns true if the car's health is over the specified value"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "0186",
          "member": "AddForCar",
          "name": "ADD_BLIP_FOR_CAR",
          "num_params": 2,
          "short_desc": "Adds a blip and a marker to the vehicle"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "0187",
          "member": "AddForChar",
          "name": "ADD_BLIP_FOR_CHAR",
          "num_params": 2,
          "short_desc": "Adds a blip and a marker to the character"
        },
        {
          "input": [
            {
              "name": "object",
              "type": "Object"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "0188",
          "member": "AddForObject",
          "name": "ADD_BLIP_FOR_OBJECT",
          "num_params": 2,
          "short_desc": "Adds a blip and a marker to the object"
        },
        {
          "id": "0189",
          "name": "ADD_BLIP_FOR_CONTACT_POINT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "018A",
          "member": "AddForCoord",
          "name": "ADD_BLIP_FOR_COORD",
          "num_params": 4,
          "short_desc": "Adds a blip to the location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Blip"
            },
            {
              "name": "display",
              "type": "BlipDisplay"
            }
          ],
          "class": "Blip",
          "id": "018B",
          "member": "ChangeDisplay",
          "name": "CHANGE_BLIP_DISPLAY",
          "num_params": 2,
          "short_desc": "Changes the display of the specified blip"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "soundId",
              "type": "ScriptSound"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Sound",
          "id": "018C",
          "member": "AddOneOffSound",
          "name": "ADD_ONE_OFF_SOUND",
          "num_params": 4,
          "short_desc": "Plays a sound with the specified ID at the location"
        },
        {
          "id": "018D",
          "name": "ADD_CONTINUOUS_SOUND",
          "num_params": 5,
          "short_desc": "Creates a continuous sound at the specified coordinates and stores the handle to a variable",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Sound"
            }
          ],
          "class": "Sound",
          "id": "018E",
          "member": "Remove",
          "name": "REMOVE_SOUND",
          "num_params": 1,
          "short_desc": "Stops the sound",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "018F",
          "member": "IsStuckOnRoof",
          "name": "IS_CAR_STUCK_ON_ROOF",
          "num_params": 1,
          "short_desc": "Returns true if the car has been upside down for more than 2 seconds (requires 0190)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "0190",
          "member": "AddUpsidedownCheck",
          "name": "ADD_UPSIDEDOWN_CAR_CHECK",
          "num_params": 1,
          "short_desc": "Activates upside-down car check for the car"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "0191",
          "member": "RemoveUpsidedownCheck",
          "name": "REMOVE_UPSIDEDOWN_CAR_CHECK",
          "num_params": 1,
          "short_desc": "Deactivates upside-down car check (0190) for the car"
        },
        {
          "id": "0192",
          "name": "SET_CHAR_OBJ_WAIT_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0193",
          "name": "SET_CHAR_OBJ_FLEE_ON_FOOT_TILL_SAFE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0194",
          "name": "SET_CHAR_OBJ_GUARD_SPOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0195",
          "name": "SET_CHAR_OBJ_GUARD_AREA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0196",
          "name": "SET_CHAR_OBJ_WAIT_IN_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0197",
          "name": "IS_PLAYER_IN_AREA_ON_FOOT_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0198",
          "name": "IS_PLAYER_IN_AREA_IN_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0199",
          "name": "IS_PLAYER_STOPPED_IN_AREA_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "019A",
          "name": "IS_PLAYER_STOPPED_IN_AREA_ON_FOOT_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "019B",
          "name": "IS_PLAYER_STOPPED_IN_AREA_IN_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "019C",
          "name": "IS_PLAYER_IN_AREA_ON_FOOT_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "019D",
          "name": "IS_PLAYER_IN_AREA_IN_CAR_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "019E",
          "name": "IS_PLAYER_STOPPED_IN_AREA_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "019F",
          "name": "IS_PLAYER_STOPPED_IN_AREA_ON_FOOT_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01A0",
          "name": "IS_PLAYER_STOPPED_IN_AREA_IN_CAR_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01A1",
          "member": "IsInAreaOnFoot2D",
          "name": "IS_CHAR_IN_AREA_ON_FOOT_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the specified 2D area on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01A2",
          "member": "IsInAreaInCar2D",
          "name": "IS_CHAR_IN_AREA_IN_CAR_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the specified 2D area in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01A3",
          "member": "IsStoppedInArea2D",
          "name": "IS_CHAR_STOPPED_IN_AREA_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character stopped within the specified 2D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01A4",
          "member": "IsStoppedInAreaOnFoot2D",
          "name": "IS_CHAR_STOPPED_IN_AREA_ON_FOOT_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character stopped within the specified 2D area on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01A5",
          "member": "IsStoppedInAreaInCar2D",
          "name": "IS_CHAR_STOPPED_IN_AREA_IN_CAR_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character stopped within the specified 2D area in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01A6",
          "member": "IsInAreaOnFoot3D",
          "name": "IS_CHAR_IN_AREA_ON_FOOT_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character is within the specified 3D area on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01A7",
          "member": "IsInAreaInCar3D",
          "name": "IS_CHAR_IN_AREA_IN_CAR_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character is within the specified 3D area in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01A8",
          "member": "IsStoppedInArea3D",
          "name": "IS_CHAR_STOPPED_IN_AREA_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character stopped within the specified 3D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01A9",
          "member": "IsStoppedInAreaOnFoot3D",
          "name": "IS_CHAR_STOPPED_IN_AREA_ON_FOOT_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character stopped within the specified 3D area on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01AA",
          "member": "IsStoppedInAreaInCar3D",
          "name": "IS_CHAR_STOPPED_IN_AREA_IN_CAR_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character stopped within the specified 3D area in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01AB",
          "member": "IsStoppedInArea2D",
          "name": "IS_CAR_STOPPED_IN_AREA_2D",
          "num_params": 6,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01AC",
          "member": "IsStoppedInArea3D",
          "name": "IS_CAR_STOPPED_IN_AREA_3D",
          "num_params": 8,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01AD",
          "member": "Locate2D",
          "name": "LOCATE_CAR_2D",
          "num_params": 6,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01AE",
          "member": "LocateStopped2D",
          "name": "LOCATE_STOPPED_CAR_2D",
          "num_params": 6,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01AF",
          "member": "Locate3D",
          "name": "LOCATE_CAR_3D",
          "num_params": 8,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01B0",
          "member": "LocateStopped3D",
          "name": "LOCATE_STOPPED_CAR_3D",
          "num_params": 8,
          "short_desc": "Returns true if the car is stopped in the radius of the specified point"
        },
        {
          "id": "01B1",
          "name": "GIVE_WEAPON_TO_PLAYER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            },
            {
              "name": "ammo",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "01B2",
          "member": "GiveWeapon",
          "name": "GIVE_WEAPON_TO_CHAR",
          "num_params": 3,
          "short_desc": "Gives the character the weapon with the specified amount of ammo"
        },
        {
          "id": "01B3",
          "name": "GIVE_WEAPON_TO_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "01B4",
          "member": "SetControl",
          "name": "SET_PLAYER_CONTROL",
          "num_params": 2,
          "short_desc": "Sets whether player's control is enabled"
        },
        {
          "input": [
            {
              "name": "type",
              "type": "WeatherType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Weather",
          "id": "01B5",
          "member": "Force",
          "name": "FORCE_WEATHER",
          "num_params": 1,
          "short_desc": "Forces the game weather to the specified type"
        },
        {
          "input": [
            {
              "name": "type",
              "type": "WeatherType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Weather",
          "id": "01B6",
          "member": "ForceNow",
          "name": "FORCE_WEATHER_NOW",
          "num_params": 1,
          "short_desc": "Forces the upcoming weather to the specified type"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Weather",
          "id": "01B7",
          "member": "Release",
          "name": "RELEASE_WEATHER",
          "num_params": 0,
          "short_desc": "Allows the game to continue its usual weather pattern after using 01B5"
        },
        {
          "id": "01B8",
          "name": "SET_CURRENT_PLAYER_WEAPON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "class": "Char",
          "id": "01B9",
          "member": "SetCurrentWeapon",
          "name": "SET_CURRENT_CHAR_WEAPON",
          "num_params": 2,
          "short_desc": "Sets the character's currently held weapon"
        },
        {
          "id": "01BA",
          "name": "SET_CURRENT_CAR_WEAPON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Object",
          "id": "01BB",
          "member": "GetCoordinates",
          "name": "GET_OBJECT_COORDINATES",
          "num_params": 4,
          "short_desc": "Returns the object's coordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Object",
          "id": "01BC",
          "member": "SetCoordinates",
          "name": "SET_OBJECT_COORDINATES",
          "num_params": 4,
          "short_desc": "Puts the object at the specified location"
        },
        {
          "output": [
            {
              "name": "time",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Clock",
          "id": "01BD",
          "member": "GetGameTimer",
          "name": "GET_GAME_TIMER",
          "num_params": 1,
          "short_desc": "Returns the time passed in milliseconds since the game started"
        },
        {
          "id": "01BE",
          "name": "TURN_CHAR_TO_FACE_COORD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01BF",
          "name": "TURN_PLAYER_TO_FACE_COORD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "wantedLevel",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "01C0",
          "member": "StoreWantedLevel",
          "name": "STORE_WANTED_LEVEL",
          "num_params": 2,
          "short_desc": "Returns the player's current wanted level"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01C1",
          "member": "IsStopped",
          "name": "IS_CAR_STOPPED",
          "num_params": 1,
          "short_desc": "Returns true if the vehicle is not moving"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "01C2",
          "member": "MarkAsNoLongerNeeded",
          "name": "MARK_CHAR_AS_NO_LONGER_NEEDED",
          "num_params": 1,
          "short_desc": "Allows the character to be deleted by the game if necessary, and also removes them from the mission cleanup list, if applicable"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "01C3",
          "member": "MarkAsNoLongerNeeded",
          "name": "MARK_CAR_AS_NO_LONGER_NEEDED",
          "num_params": 1,
          "short_desc": "Allows the vehicle to be deleted by the game if necessary, and also removes it from the mission cleanup list, if applicable"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "class": "Object",
          "id": "01C4",
          "member": "MarkAsNoLongerNeeded",
          "name": "MARK_OBJECT_AS_NO_LONGER_NEEDED",
          "num_params": 1,
          "short_desc": "Allows the object to be deleted by the game if necessary, and also removes it from the mission cleanup list, if applicable"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "01C5",
          "member": "DontRemove",
          "name": "DONT_REMOVE_CHAR",
          "num_params": 1,
          "short_desc": "Removes the character from the mission cleanup list, preventing it from being deleted when the mission ends"
        },
        {
          "id": "01C6",
          "name": "DONT_REMOVE_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "class": "Object",
          "id": "01C7",
          "member": "DontRemove",
          "name": "DONT_REMOVE_OBJECT",
          "num_params": 1,
          "short_desc": "Removes the object from the mission cleanup list, preventing it from being deleted when the mission ends"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "pedType",
              "type": "PedType"
            },
            {
              "name": "modelId",
              "type": "model_char"
            },
            {
              "name": "seatId",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Char",
          "id": "01C8",
          "member": "CreateAsPassenger",
          "name": "CREATE_CHAR_AS_PASSENGER",
          "num_params": 5,
          "short_desc": "Creates a character with the specified model in the passenger seat of the vehicle"
        },
        {
          "id": "01C9",
          "name": "SET_CHAR_OBJ_KILL_CHAR_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01CA",
          "name": "SET_CHAR_OBJ_KILL_PLAYER_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01CB",
          "name": "SET_CHAR_OBJ_KILL_CHAR_ANY_MEANS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01CC",
          "name": "SET_CHAR_OBJ_KILL_PLAYER_ANY_MEANS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01CD",
          "name": "SET_CHAR_OBJ_FLEE_CHAR_ON_FOOT_TILL_SAFE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01CE",
          "name": "SET_CHAR_OBJ_FLEE_PLAYER_ON_FOOT_TILL_SAFE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01CF",
          "name": "SET_CHAR_OBJ_FLEE_CHAR_ON_FOOT_ALWAYS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01D0",
          "name": "SET_CHAR_OBJ_FLEE_PLAYER_ON_FOOT_ALWAYS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01D1",
          "name": "SET_CHAR_OBJ_GOTO_CHAR_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01D2",
          "name": "SET_CHAR_OBJ_GOTO_PLAYER_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01D3",
          "name": "SET_CHAR_OBJ_LEAVE_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01D4",
          "name": "SET_CHAR_OBJ_ENTER_CAR_AS_PASSENGER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01D5",
          "name": "SET_CHAR_OBJ_ENTER_CAR_AS_DRIVER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01D6",
          "name": "SET_CHAR_OBJ_FOLLOW_CAR_IN_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01D7",
          "name": "SET_CHAR_OBJ_FIRE_AT_OBJECT_FROM_VEHICLE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01D8",
          "name": "SET_CHAR_OBJ_DESTROY_OBJECT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01D9",
          "name": "SET_CHAR_OBJ_DESTROY_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01DA",
          "name": "SET_CHAR_OBJ_GOTO_AREA_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01DB",
          "name": "SET_CHAR_OBJ_GOTO_AREA_IN_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01DC",
          "name": "SET_CHAR_OBJ_FOLLOW_CAR_ON_FOOT_WITH_OFFSET",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01DD",
          "name": "SET_CHAR_OBJ_GUARD_ATTACK",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01DE",
          "name": "SET_CHAR_AS_LEADER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01DF",
          "name": "SET_PLAYER_AS_LEADER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01E0",
          "name": "LEAVE_GROUP",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01E1",
          "name": "SET_CHAR_OBJ_FOLLOW_ROUTE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01E2",
          "name": "ADD_ROUTE_POINT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "01E3",
          "member": "PrintWithNumberBig",
          "name": "PRINT_WITH_NUMBER_BIG",
          "num_params": 4,
          "short_desc": "Displays a styled message in which the first string token~1~ is substituted with the specified number"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "flag",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "01E4",
          "member": "PrintWithNumber",
          "name": "PRINT_WITH_NUMBER",
          "num_params": 4,
          "short_desc": "Displays a styled message in which the first string token ~1~ is substituted with the specified number"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "flag",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "01E5",
          "member": "PrintWithNumberNow",
          "name": "PRINT_WITH_NUMBER_NOW",
          "num_params": 4,
          "short_desc": "Displays a styled message in which the first string token ~1~ is substituted with the specified number"
        },
        {
          "id": "01E6",
          "name": "PRINT_WITH_NUMBER_SOON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "01E7",
          "member": "SwitchRoadsOn",
          "name": "SWITCH_ROADS_ON",
          "num_params": 6,
          "short_desc": "Allows cars to drive in the specified 3D area"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "01E8",
          "member": "SwitchRoadsOff",
          "name": "SWITCH_ROADS_OFF",
          "num_params": 6,
          "short_desc": "Prevents cars from driving on roads in the specified 3D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "count",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "01E9",
          "member": "GetNumberOfPassengers",
          "name": "GET_NUMBER_OF_PASSENGERS",
          "num_params": 2,
          "short_desc": "Returns the number of passengers sitting in the car"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "count",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "01EA",
          "member": "GetMaximumNumberOfPassengers",
          "name": "GET_MAXIMUM_NUMBER_OF_PASSENGERS",
          "num_params": 2,
          "short_desc": "Returns the maximum number of passengers that could sit in the car"
        },
        {
          "input": [
            {
              "name": "multiplier",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "01EB",
          "member": "SetCarDensityMultiplier",
          "name": "SET_CAR_DENSITY_MULTIPLIER",
          "num_params": 1,
          "short_desc": "Sets the quantity of traffic that will spawn in the game"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "01EC",
          "member": "SetHeavy",
          "name": "SET_CAR_HEAVY",
          "num_params": 2,
          "short_desc": "Sets whether the car is heavy"
        },
        {
          "id": "01ED",
          "name": "CLEAR_CHAR_THREAT_SEARCH",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01EE",
          "name": "ACTIVATE_CRANE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01EF",
          "name": "DEACTIVATE_CRANE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "wantedLevel",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "01F0",
          "member": "SetMaxWantedLevel",
          "name": "SET_MAX_WANTED_LEVEL",
          "num_params": 1,
          "short_desc": "Sets the maximum wanted level the player can receive"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01F3",
          "member": "IsInAirProper",
          "name": "IS_CAR_IN_AIR_PROPER",
          "num_params": 1,
          "short_desc": "Returns true if the vehicle is in the air"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01F4",
          "member": "IsUpsidedown",
          "name": "IS_CAR_UPSIDEDOWN",
          "num_params": 1,
          "short_desc": "Returns true if the car is upside down"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "01F5",
          "member": "GetChar",
          "name": "GET_PLAYER_CHAR",
          "num_params": 2,
          "short_desc": "Gets the character handle for the specified player"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Restart",
          "id": "01F6",
          "member": "CancelOverride",
          "name": "CANCEL_OVERRIDE_RESTART",
          "num_params": 0,
          "short_desc": "Stops the player from spawning at the override location (016E)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "01F7",
          "member": "SetIgnorePolice",
          "name": "SET_POLICE_IGNORE_PLAYER",
          "num_params": 2,
          "short_desc": "Sets whether cops should ignore the player regardless of wanted level"
        },
        {
          "id": "01F8",
          "name": "ADD_PAGER_MESSAGE_WITH_NUMBER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "text",
              "type": "gxt_key"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            },
            {
              "name": "timeInMs",
              "type": "int"
            },
            {
              "name": "targetsNum",
              "type": "int"
            },
            {
              "name": "targetModel1",
              "type": "model_any"
            },
            {
              "name": "targetModel2",
              "type": "model_any"
            },
            {
              "name": "targetModel3",
              "type": "model_any"
            },
            {
              "name": "targetModel4",
              "type": "model_any"
            },
            {
              "name": "betaSoundsAndMessages",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "KillFrenzy",
          "id": "01F9",
          "member": "Start",
          "name": "START_KILL_FRENZY",
          "num_params": 9,
          "short_desc": "Starts a rampage"
        },
        {
          "output": [
            {
              "name": "status",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "KillFrenzy",
          "id": "01FA",
          "member": "ReadStatus",
          "name": "READ_KILL_FRENZY_STATUS",
          "num_params": 1,
          "short_desc": "Returns the status of the current rampage"
        },
        {
          "id": "01FC",
          "name": "LOCATE_PLAYER_ANY_MEANS_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01FD",
          "name": "LOCATE_PLAYER_ON_FOOT_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01FE",
          "name": "LOCATE_PLAYER_IN_CAR_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "01FF",
          "name": "LOCATE_PLAYER_ANY_MEANS_CAR_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0200",
          "name": "LOCATE_PLAYER_ON_FOOT_CAR_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0201",
          "name": "LOCATE_PLAYER_IN_CAR_CAR_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0202",
          "member": "LocateAnyMeansCar2D",
          "name": "LOCATE_CHAR_ANY_MEANS_CAR_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0203",
          "member": "LocateOnFootCar2D",
          "name": "LOCATE_CHAR_ON_FOOT_CAR_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the vehicle on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0204",
          "member": "LocateInCarCar2D",
          "name": "LOCATE_CHAR_IN_CAR_CAR_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the vehicle in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0205",
          "member": "LocateAnyMeansCar3D",
          "name": "LOCATE_CHAR_ANY_MEANS_CAR_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0206",
          "member": "LocateOnFootCar3D",
          "name": "LOCATE_CHAR_ON_FOOT_CAR_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the vehicle on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0207",
          "member": "LocateInCarCar3D",
          "name": "LOCATE_CHAR_IN_CAR_CAR_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the vehicle in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "lockStatus",
              "type": "CarLock"
            }
          ],
          "class": "Car",
          "id": "020A",
          "member": "LockDoors",
          "name": "LOCK_CAR_DOORS",
          "num_params": 2,
          "short_desc": "Sets the locked status of the car's doors"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "020B",
          "member": "Explode",
          "name": "EXPLODE_CAR",
          "num_params": 1,
          "short_desc": "Makes the vehicle explode"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "type",
              "type": "ExplosionType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Fx",
          "id": "020C",
          "member": "AddExplosion",
          "name": "ADD_EXPLOSION",
          "num_params": 4,
          "short_desc": "Creates an explosion at the point"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "020D",
          "member": "IsUpright",
          "name": "IS_CAR_UPRIGHT",
          "num_params": 1,
          "short_desc": "Returns true if the vehicle is in the normal position (upright)"
        },
        {
          "id": "020E",
          "name": "TURN_CHAR_TO_FACE_CHAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "020F",
          "name": "TURN_CHAR_TO_FACE_PLAYER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0210",
          "name": "TURN_PLAYER_TO_FACE_CHAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0211",
          "name": "SET_CHAR_OBJ_GOTO_COORD_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0212",
          "name": "SET_CHAR_OBJ_GOTO_COORD_IN_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_object"
            },
            {
              "name": "pickupType",
              "type": "PickupType"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Pickup",
          "id": "0213",
          "member": "Create",
          "name": "CREATE_PICKUP",
          "num_params": 6,
          "short_desc": "Creates a pickup with the given model and type"
        },
        {
          "attrs": {
            "is_condition": true
          },
          "class": "Pickup",
          "id": "0214",
          "input": [
            {
              "name": "self",
              "type": "Pickup"
            }
          ],
          "member": "HasBeenCollected",
          "name": "HAS_PICKUP_BEEN_COLLECTED",
          "num_params": 1,
          "short_desc": "Returns true if specified pickup has been collected"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Pickup"
            }
          ],
          "attrs": {
            "is_destructor": true
          },
          "class": "Pickup",
          "id": "0215",
          "member": "Remove",
          "name": "REMOVE_PICKUP",
          "num_params": 1,
          "short_desc": "Destroys the specified pickup, freeing game memory"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0216",
          "member": "SetTaxiLights",
          "name": "SET_TAXI_LIGHTS",
          "num_params": 2,
          "short_desc": "Sets whether the taxi's roof light is on"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0217",
          "member": "PrintBigQ",
          "name": "PRINT_BIG_Q",
          "num_params": 3,
          "short_desc": "Displays a low-priority styled message for the specified time"
        },
        {
          "id": "0218",
          "name": "PRINT_WITH_NUMBER_BIG_Q",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0219",
          "name": "SET_GARAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "021A",
          "name": "SET_GARAGE_WITH_CAR_MODEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "garageName",
              "type": "GarageName"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "class": "Garage",
          "id": "021B",
          "member": "SetTargetCarForMission",
          "name": "SET_TARGET_CAR_FOR_MISSION_GARAGE",
          "num_params": 2,
          "short_desc": "Sets the specified garage to only accept the specified vehicle",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "021C",
          "name": "IS_CAR_IN_MISSION_GARAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "021D",
          "name": "SET_FREE_BOMBS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "021E",
          "name": "SET_POWERPOINT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "021F",
          "name": "SET_ALL_TAXI_LIGHTS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0220",
          "name": "IS_CAR_ARMED_WITH_ANY_BOMB",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "0221",
          "member": "ApplyBrakesToCar",
          "name": "APPLY_BRAKES_TO_PLAYERS_CAR",
          "num_params": 2,
          "short_desc": "Applies brakes to the player's car"
        },
        {
          "id": "0222",
          "name": "SET_PLAYER_HEALTH",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "health",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "0223",
          "member": "SetHealth",
          "name": "SET_CHAR_HEALTH",
          "num_params": 2,
          "short_desc": "Sets the character's health"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "health",
              "type": "int"
            }
          ],
          "class": "Car",
          "id": "0224",
          "member": "SetHealth",
          "name": "SET_CAR_HEALTH",
          "num_params": 2,
          "short_desc": "Sets the vehicle's health"
        },
        {
          "id": "0225",
          "name": "GET_PLAYER_HEALTH",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "health",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "0226",
          "member": "GetHealth",
          "name": "GET_CHAR_HEALTH",
          "num_params": 2,
          "short_desc": "Returns the character's health"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "health",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "0227",
          "member": "GetHealth",
          "name": "GET_CAR_HEALTH",
          "num_params": 2,
          "short_desc": "Returns the vehicle's health"
        },
        {
          "id": "0228",
          "name": "IS_CAR_ARMED_WITH_BOMB",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "primaryColor",
              "type": "int"
            },
            {
              "name": "secondaryColor",
              "type": "int"
            }
          ],
          "class": "Car",
          "id": "0229",
          "member": "ChangeColor",
          "name": "CHANGE_CAR_COLOUR",
          "num_params": 3,
          "short_desc": "Sets the car's primary and secondary colors"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "022A",
          "member": "SwitchPedRoadsOn",
          "name": "SWITCH_PED_ROADS_ON",
          "num_params": 6,
          "short_desc": "Allows pedestrians to walk into the specified area"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "022B",
          "member": "SwitchPedRoadsOff",
          "name": "SWITCH_PED_ROADS_OFF",
          "num_params": 6,
          "short_desc": "Forbids pedestrians to walk into the specified area"
        },
        {
          "id": "022C",
          "name": "CHAR_LOOK_AT_CHAR_ALWAYS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "022D",
          "name": "CHAR_LOOK_AT_PLAYER_ALWAYS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "022E",
          "name": "PLAYER_LOOK_AT_CHAR_ALWAYS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "022F",
          "name": "STOP_CHAR_LOOKING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0230",
          "name": "STOP_PLAYER_LOOKING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0231",
          "name": "SET_SCRIPT_POLICE_HELI_TO_CHASE_CHAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0232",
          "name": "SET_GANG_ATTITUDE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0233",
          "name": "SET_GANG_GANG_ATTITUDE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0234",
          "name": "SET_GANG_PLAYER_ATTITUDE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0235",
          "name": "SET_GANG_PED_MODELS",
          "num_params": 3,
          "short_desc": "Sets the models used by members of the specified gang",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0236",
          "name": "SET_GANG_CAR_MODEL",
          "num_params": 2,
          "short_desc": "Sets the car used by members of the specified gang",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "gangId",
              "type": "GangType"
            },
            {
              "name": "weaponType1",
              "type": "WeaponType"
            },
            {
              "name": "weaponType2",
              "type": "WeaponType"
            },
            {
              "name": "weaponType3",
              "type": "WeaponType"
            }
          ],
          "id": "0237",
          "name": "SET_GANG_WEAPONS",
          "num_params": 4,
          "short_desc": "Sets the weapons that the specified gang can use",
          "class": "Gang",
          "member": "SetWeapons",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0238",
          "name": "SET_CHAR_OBJ_RUN_TO_AREA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0239",
          "name": "SET_CHAR_OBJ_RUN_TO_COORD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "023A",
          "name": "IS_PLAYER_TOUCHING_OBJECT_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            }
          ],
          "id": "023B",
          "name": "IS_CHAR_TOUCHING_OBJECT_ON_FOOT",
          "num_params": 2,
          "short_desc": "Returns true if the character is colliding with the specified object on foot",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsTouchingObjectOnFoot"
        },
        {
          "input": [
            {
              "name": "slotId",
              "type": "int"
            },
            {
              "name": "modelName",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "023C",
          "member": "LoadSpecialCharacter",
          "name": "LOAD_SPECIAL_CHARACTER",
          "num_params": 2,
          "short_desc": "Requests a special character's model to be loaded into the specified slot"
        },
        {
          "input": [
            {
              "name": "slotId",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "id": "023D",
          "member": "HasSpecialCharacterLoaded",
          "name": "HAS_SPECIAL_CHARACTER_LOADED",
          "num_params": 1,
          "short_desc": "Returns true if the special character's model (023C) is available for creation"
        },
        {
          "id": "023E",
          "name": "FLASH_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "023F",
          "name": "FLASH_CHAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0240",
          "name": "FLASH_OBJECT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0241",
          "member": "IsInRemoteMode",
          "name": "IS_PLAYER_IN_REMOTE_MODE",
          "num_params": 1,
          "short_desc": "Returns true if the player is controlling a remote-control vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "bombType",
              "type": "BombType"
            }
          ],
          "id": "0242",
          "name": "ARM_CAR_WITH_BOMB",
          "num_params": 2,
          "class": "Car",
          "member": "ArmWithBomb",
          "short_desc": "Arms the vehicle with a bomb of the given type (In SA, this command only supports the mobile version)"
        },
        {
          "id": "0243",
          "name": "SET_CHAR_PERSONALITY",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Cutscene",
          "id": "0244",
          "member": "SetOffset",
          "name": "SET_CUTSCENE_OFFSET",
          "num_params": 3,
          "short_desc": "Sets the position for a cutscene"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "animGroup",
              "type": "AnimGroup"
            }
          ],
          "class": "Char",
          "id": "0245",
          "member": "SetAnimGroup",
          "name": "SET_ANIM_GROUP_FOR_CHAR",
          "num_params": 2,
          "short_desc": "Sets the animation group for the character"
        },
        {
          "id": "0246",
          "name": "SET_ANIM_GROUP_FOR_PLAYER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "0247",
          "member": "RequestModel",
          "name": "REQUEST_MODEL",
          "num_params": 1,
          "short_desc": "Requests a new model to load"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "id": "0248",
          "member": "HasModelLoaded",
          "name": "HAS_MODEL_LOADED",
          "num_params": 1,
          "short_desc": "Returns true if the model is available for creation"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "0249",
          "member": "MarkModelAsNoLongerNeeded",
          "name": "MARK_MODEL_AS_NO_LONGER_NEEDED",
          "num_params": 1,
          "short_desc": "Releases the specified model, freeing game memory"
        },
        {
          "id": "024A",
          "name": "GRAB_PHONE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "024B",
          "name": "SET_REPEATED_PHONE_MESSAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "024C",
          "name": "SET_PHONE_MESSAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "024D",
          "name": "HAS_PHONE_DISPLAYED_MESSAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "024E",
          "name": "TURN_PHONE_OFF",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "size",
              "type": "float"
            },
            {
              "name": "coronaType",
              "type": "CoronaType"
            },
            {
              "name": "flareType",
              "type": "FlareType"
            },
            {
              "name": "r",
              "type": "int"
            },
            {
              "name": "g",
              "type": "int"
            },
            {
              "name": "b",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Fx",
          "id": "024F",
          "member": "DrawCorona",
          "name": "DRAW_CORONA",
          "num_params": 9,
          "short_desc": "Displays a corona at the specified location"
        },
        {
          "id": "0250",
          "name": "DRAW_LIGHT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0251",
          "name": "STORE_WEATHER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0252",
          "name": "RESTORE_WEATHER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Clock",
          "id": "0253",
          "member": "Store",
          "name": "STORE_CLOCK",
          "num_params": 0,
          "short_desc": "Saves the current time in game"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Clock",
          "id": "0254",
          "member": "Restore",
          "name": "RESTORE_CLOCK",
          "num_params": 0,
          "short_desc": "Restores the game time to the time when it was saved with 0253"
        },
        {
          "id": "0255",
          "name": "RESTART_CRITICAL_MISSION",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0256",
          "member": "IsPlaying",
          "name": "IS_PLAYER_PLAYING",
          "num_params": 1,
          "short_desc": "Returns true if the player hasn't been wasted or busted (the player is still playing)"
        },
        {
          "id": "0257",
          "name": "SET_COLL_OBJ_NO_OBJ",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0258",
          "name": "SET_COLL_OBJ_WAIT_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0259",
          "name": "SET_COLL_OBJ_FLEE_ON_FOOT_TILL_SAFE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "025A",
          "name": "SET_COLL_OBJ_GUARD_SPOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "025B",
          "name": "SET_COLL_OBJ_GUARD_AREA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "025C",
          "name": "SET_COLL_OBJ_WAIT_IN_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "025D",
          "name": "SET_COLL_OBJ_KILL_CHAR_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "025E",
          "name": "SET_COLL_OBJ_KILL_PLAYER_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "025F",
          "name": "SET_COLL_OBJ_KILL_CHAR_ANY_MEANS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0260",
          "name": "SET_COLL_OBJ_KILL_PLAYER_ANY_MEANS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0261",
          "name": "SET_COLL_OBJ_FLEE_CHAR_ON_FOOT_TILL_SAFE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0262",
          "name": "SET_COLL_OBJ_FLEE_PLAYER_ON_FOOT_TILL_SAFE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0263",
          "name": "SET_COLL_OBJ_FLEE_CHAR_ON_FOOT_ALWAYS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0264",
          "name": "SET_COLL_OBJ_FLEE_PLAYER_ON_FOOT_ALWAYS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0265",
          "name": "SET_COLL_OBJ_GOTO_CHAR_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0266",
          "name": "SET_COLL_OBJ_GOTO_PLAYER_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0267",
          "name": "SET_COLL_OBJ_LEAVE_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0268",
          "name": "SET_COLL_OBJ_ENTER_CAR_AS_PASSENGER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0269",
          "name": "SET_COLL_OBJ_ENTER_CAR_AS_DRIVER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "026A",
          "name": "SET_COLL_OBJ_FOLLOW_CAR_IN_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "026B",
          "name": "SET_COLL_OBJ_FIRE_AT_OBJECT_FROM_VEHICLE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "026C",
          "name": "SET_COLL_OBJ_DESTROY_OBJECT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "026D",
          "name": "SET_COLL_OBJ_DESTROY_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "026E",
          "name": "SET_COLL_OBJ_GOTO_AREA_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "026F",
          "name": "SET_COLL_OBJ_GOTO_AREA_IN_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0270",
          "name": "SET_COLL_OBJ_FOLLOW_CAR_ON_FOOT_WITH_OFFSET",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0271",
          "name": "SET_COLL_OBJ_GUARD_ATTACK",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0272",
          "name": "SET_COLL_OBJ_FOLLOW_ROUTE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0273",
          "name": "SET_COLL_OBJ_GOTO_COORD_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0274",
          "name": "SET_COLL_OBJ_GOTO_COORD_IN_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0275",
          "name": "SET_COLL_OBJ_RUN_TO_AREA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0276",
          "name": "SET_COLL_OBJ_RUN_TO_COORD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0277",
          "name": "ADD_PEDS_IN_AREA_TO_COLL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0278",
          "name": "ADD_PEDS_IN_VEHICLE_TO_COLL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0279",
          "name": "CLEAR_COLL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "027A",
          "name": "IS_COLL_IN_CARS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "027B",
          "name": "LOCATE_COLL_ANY_MEANS_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "027C",
          "name": "LOCATE_COLL_ON_FOOT_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "027D",
          "name": "LOCATE_COLL_IN_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "027E",
          "name": "LOCATE_STOPPED_COLL_ANY_MEANS_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "027F",
          "name": "LOCATE_STOPPED_COLL_ON_FOOT_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0280",
          "name": "LOCATE_STOPPED_COLL_IN_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0281",
          "name": "LOCATE_COLL_ANY_MEANS_CHAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0282",
          "name": "LOCATE_COLL_ON_FOOT_CHAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0283",
          "name": "LOCATE_COLL_IN_CAR_CHAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0284",
          "name": "LOCATE_COLL_ANY_MEANS_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0285",
          "name": "LOCATE_COLL_ON_FOOT_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0286",
          "name": "LOCATE_COLL_IN_CAR_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0287",
          "name": "LOCATE_COLL_ANY_MEANS_PLAYER_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0288",
          "name": "LOCATE_COLL_ON_FOOT_PLAYER_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0289",
          "name": "LOCATE_COLL_IN_CAR_PLAYER_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "028A",
          "name": "IS_COLL_IN_AREA_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "028B",
          "name": "IS_COLL_IN_AREA_ON_FOOT_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "028C",
          "name": "IS_COLL_IN_AREA_IN_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "028D",
          "name": "IS_COLL_STOPPED_IN_AREA_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "028E",
          "name": "IS_COLL_STOPPED_IN_AREA_ON_FOOT_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "028F",
          "name": "IS_COLL_STOPPED_IN_AREA_IN_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0290",
          "name": "GET_NUMBER_OF_PEDS_IN_COLL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0291",
          "name": "SET_CHAR_HEED_THREATS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0292",
          "name": "SET_PLAYER_HEED_THREATS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "output": [
            {
              "name": "mode",
              "type": "ControllerMode",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Pad",
          "id": "0293",
          "member": "GetControllerMode",
          "name": "GET_CONTROLLER_MODE",
          "num_params": 1,
          "short_desc": "Returns the controller mode"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0294",
          "member": "SetCanRespray",
          "name": "SET_CAN_RESPRAY_CAR",
          "num_params": 2,
          "short_desc": "Enables or disables the ability to Pay'n'Spray the car"
        },
        {
          "id": "0295",
          "name": "IS_TAXI",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "slotId",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "0296",
          "member": "UnloadSpecialCharacter",
          "name": "UNLOAD_SPECIAL_CHARACTER",
          "num_params": 1,
          "short_desc": "Releases the special character (023C), freeing game memory"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "id": "0297",
          "name": "RESET_NUM_OF_MODELS_KILLED_BY_PLAYER",
          "num_params": 1,
          "short_desc": "Resets the count of how many times the player has destroyed a certain model",
          "class": "Player",
          "member": "ResetNumOfModelsKilled"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "output": [
            {
              "name": "amount",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0298",
          "name": "GET_NUM_OF_MODELS_KILLED_BY_PLAYER",
          "num_params": 3,
          "short_desc": "Returns the number of times the player has destroyed a specific model",
          "class": "Player",
          "member": "GetNumOfModelsKilled"
        },
        {
          "input": [
            {
              "name": "garageId",
              "type": "string"
            }
          ],
          "class": "Garage",
          "id": "0299",
          "member": "Activate",
          "name": "ACTIVATE_GARAGE",
          "num_params": 1,
          "short_desc": "Activates the garage",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "029A",
          "name": "SWITCH_TAXI_TIMER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Object",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Object",
          "id": "029B",
          "member": "CreateNoOffset",
          "name": "CREATE_OBJECT_NO_OFFSET",
          "num_params": 5,
          "short_desc": "Creates an object without offset at the location"
        },
        {
          "id": "029C",
          "name": "IS_BOAT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "029D",
          "name": "SET_CHAR_OBJ_GOTO_AREA_ANY_MEANS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "029E",
          "name": "SET_COLL_OBJ_GOTO_AREA_ANY_MEANS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "029F",
          "name": "IS_PLAYER_STOPPED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "id": "02A0",
          "name": "IS_CHAR_STOPPED",
          "num_params": 1,
          "short_desc": "Returns true if the character is not moving",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsStopped"
        },
        {
          "id": "02A1",
          "name": "MESSAGE_WAIT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02A2",
          "name": "ADD_PARTICLE_EFFECT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "02A3",
          "member": "SwitchWidescreen",
          "name": "SWITCH_WIDESCREEN",
          "num_params": 1,
          "short_desc": "Enables widescreen"
        },
        {
          "id": "02A4",
          "name": "ADD_SPRITE_BLIP_FOR_CAR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "02A5",
          "name": "ADD_SPRITE_BLIP_FOR_CHAR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "02A6",
          "name": "ADD_SPRITE_BLIP_FOR_OBJECT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "sprite",
              "type": "RadarSprite"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "02A7",
          "member": "AddSpriteForContactPoint",
          "name": "ADD_SPRITE_BLIP_FOR_CONTACT_POINT",
          "num_params": 5,
          "short_desc": "Adds a sprite blip to the contact point"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "sprite",
              "type": "RadarSprite"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "02A8",
          "member": "AddSpriteForCoord",
          "name": "ADD_SPRITE_BLIP_FOR_COORD",
          "num_params": 5,
          "short_desc": "Adds a sprite blip to the location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "02A9",
          "member": "SetOnlyDamagedByPlayer",
          "name": "SET_CHAR_ONLY_DAMAGED_BY_PLAYER",
          "num_params": 2,
          "short_desc": "Makes a character immune to everything except the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "02AA",
          "member": "SetOnlyDamagedByPlayer",
          "name": "SET_CAR_ONLY_DAMAGED_BY_PLAYER",
          "num_params": 2,
          "short_desc": "Makes a vehicle immune to everything except the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "bulletProof",
              "type": "bool"
            },
            {
              "name": "fireProof",
              "type": "bool"
            },
            {
              "name": "explosionProof",
              "type": "bool"
            },
            {
              "name": "collisionProof",
              "type": "bool"
            },
            {
              "name": "meleeProof",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "02AB",
          "member": "SetProofs",
          "name": "SET_CHAR_PROOFS",
          "num_params": 6,
          "short_desc": "Sets the character's immunities"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "bulletProof",
              "type": "bool"
            },
            {
              "name": "fireProof",
              "type": "bool"
            },
            {
              "name": "explosionProof",
              "type": "bool"
            },
            {
              "name": "collisionProof",
              "type": "bool"
            },
            {
              "name": "meleeProof",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "02AC",
          "member": "SetProofs",
          "name": "SET_CAR_PROOFS",
          "num_params": 6,
          "short_desc": "Sets the vehicle's immunities"
        },
        {
          "id": "02AD",
          "name": "IS_PLAYER_IN_ANGLED_AREA_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02AE",
          "name": "IS_PLAYER_IN_ANGLED_AREA_ON_FOOT_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02AF",
          "name": "IS_PLAYER_IN_ANGLED_AREA_IN_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02B0",
          "name": "IS_PLAYER_STOPPED_IN_ANGLED_AREA_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02B1",
          "name": "IS_PLAYER_STOPPED_IN_ANGLED_AREA_ON_FOOT_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02B2",
          "name": "IS_PLAYER_STOPPED_IN_ANGLED_AREA_IN_CAR_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02B3",
          "name": "IS_PLAYER_IN_ANGLED_AREA_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02B4",
          "name": "IS_PLAYER_IN_ANGLED_AREA_ON_FOOT_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02B5",
          "name": "IS_PLAYER_IN_ANGLED_AREA_IN_CAR_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02B6",
          "name": "IS_PLAYER_STOPPED_IN_ANGLED_AREA_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02B7",
          "name": "IS_PLAYER_STOPPED_IN_ANGLED_AREA_ON_FOOT_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02B8",
          "name": "IS_PLAYER_STOPPED_IN_ANGLED_AREA_IN_CAR_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "garageId",
              "type": "string"
            }
          ],
          "class": "Garage",
          "id": "02B9",
          "member": "Deactivate",
          "name": "DEACTIVATE_GARAGE",
          "num_params": 1,
          "short_desc": "Deactivates the garage",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "02BA",
          "name": "GET_NUMBER_OF_CARS_COLLECTED_BY_GARAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02BB",
          "name": "HAS_CAR_BEEN_TAKEN_TO_GARAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02BC",
          "name": "SET_SWAT_REQUIRED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02BD",
          "name": "SET_FBI_REQUIRED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02BE",
          "name": "SET_ARMY_REQUIRED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "02BF",
          "member": "IsInWater",
          "name": "IS_CAR_IN_WATER",
          "num_params": 1,
          "short_desc": "Returns true if the vehicle is submerged in water"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "nodeX",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeY",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeZ",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "02C0",
          "member": "GetClosestCharNode",
          "name": "GET_CLOSEST_CHAR_NODE",
          "num_params": 6,
          "short_desc": "Returns the nearest path node from the specified coordinates that a pedestrian can walk on"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "nodeX",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeY",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeZ",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "02C1",
          "member": "GetClosestCarNode",
          "name": "GET_CLOSEST_CAR_NODE",
          "num_params": 6,
          "short_desc": "Returns the nearest path note from the specified coordinates that a vehicle can drive on"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "02C2",
          "member": "GotoCoordinatesAccurate",
          "name": "CAR_GOTO_COORDINATES_ACCURATE",
          "num_params": 4,
          "short_desc": "Makes the AI drive to the specified location obeying the traffic rules"
        },
        {
          "id": "02C3",
          "name": "START_PACMAN_RACE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02C4",
          "name": "START_PACMAN_RECORD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02C5",
          "name": "GET_NUMBER_OF_POWER_PILLS_EATEN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02C6",
          "name": "CLEAR_PACMAN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02C7",
          "name": "START_PACMAN_SCRAMBLE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02C8",
          "name": "GET_NUMBER_OF_POWER_PILLS_CARRIED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02C9",
          "name": "CLEAR_NUMBER_OF_POWER_PILLS_CARRIED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "02CA",
          "member": "IsOnScreen",
          "name": "IS_CAR_ON_SCREEN",
          "num_params": 1,
          "short_desc": "Returns true if the car is visible"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "02CB",
          "member": "IsOnScreen",
          "name": "IS_CHAR_ON_SCREEN",
          "num_params": 1,
          "short_desc": "Returns true if the character is visible"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "02CC",
          "member": "IsOnScreen",
          "name": "IS_OBJECT_ON_SCREEN",
          "num_params": 1,
          "short_desc": "Returns true if the object is visible"
        },
        {
          "id": "02CD",
          "name": "GOSUB_FILE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "groundZ",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "02CE",
          "member": "GetGroundZFor3DCoord",
          "name": "GET_GROUND_Z_FOR_3D_COORD",
          "num_params": 4,
          "short_desc": "Stores the ground position at the location"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "propagation",
              "type": "int"
            },
            {
              "name": "size",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "ScriptFire",
              "source": "var_any"
            }
          ],
          "id": "02CF",
          "name": "START_SCRIPT_FIRE",
          "num_params": 6,
          "short_desc": "Creates a fire at the specified coordinates",
          "class": "ScriptFire",
          "member": "Start",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "ScriptFire"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "ScriptFire",
          "id": "02D0",
          "member": "IsExtinguished",
          "name": "IS_SCRIPT_FIRE_EXTINGUISHED",
          "num_params": 1,
          "short_desc": "Returns true if the script fire has been put out"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "ScriptFire"
            }
          ],
          "attrs": {
            "is_destructor": true
          },
          "class": "ScriptFire",
          "id": "02D1",
          "member": "Remove",
          "name": "REMOVE_SCRIPT_FIRE",
          "num_params": 1,
          "short_desc": "Removes the script fire"
        },
        {
          "id": "02D2",
          "name": "SET_COMEDY_CONTROLS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Boat"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Boat",
          "id": "02D3",
          "member": "Goto",
          "name": "BOAT_GOTO_COORDS",
          "num_params": 4,
          "short_desc": "Makes the boat sail to the location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Boat"
            }
          ],
          "class": "Boat",
          "id": "02D4",
          "member": "Stop",
          "name": "BOAT_STOP",
          "num_params": 1,
          "short_desc": "Turns off the car's engine"
        },
        {
          "id": "02D5",
          "name": "IS_PLAYER_SHOOTING_IN_AREA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "topRightX",
              "type": "float"
            },
            {
              "name": "topRightY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "02D6",
          "member": "IsShootingInArea",
          "name": "IS_CHAR_SHOOTING_IN_AREA",
          "num_params": 6,
          "short_desc": "Returns true if the character fired a weapon within the specified 2D area"
        },
        {
          "id": "02D7",
          "name": "IS_CURRENT_PLAYER_WEAPON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "02D8",
          "member": "IsCurrentWeapon",
          "name": "IS_CURRENT_CHAR_WEAPON",
          "num_params": 2,
          "short_desc": "Returns true if the character is holding the given type of weapon"
        },
        {
          "id": "02D9",
          "name": "CLEAR_NUMBER_OF_POWER_PILLS_EATEN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02DA",
          "name": "ADD_POWER_PILL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Boat"
            },
            {
              "name": "maxSpeed",
              "type": "float"
            }
          ],
          "class": "Boat",
          "id": "02DB",
          "member": "SetCruiseSpeed",
          "name": "SET_BOAT_CRUISE_SPEED",
          "num_params": 2,
          "short_desc": "Sets the boat's max speed"
        },
        {
          "id": "02DC",
          "name": "GET_RANDOM_CHAR_IN_AREA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            },
            {
              "name": "civilian",
              "type": "bool"
            },
            {
              "name": "gang",
              "type": "bool"
            },
            {
              "name": "criminalOrProstitute",
              "type": "bool"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Zone",
          "id": "02DD",
          "member": "GetRandomChar",
          "name": "GET_RANDOM_CHAR_IN_ZONE",
          "num_params": 5,
          "short_desc": "Gets a random character in the specified zone whose pedtype matches the specified values"
        },
        {
          "id": "02DE",
          "name": "IS_PLAYER_IN_TAXI",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02DF",
          "name": "IS_PLAYER_SHOOTING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "02E0",
          "member": "IsShooting",
          "name": "IS_CHAR_SHOOTING",
          "num_params": 1,
          "short_desc": "Returns true if the character is firing a weapon"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "cashAmount",
              "type": "int"
            },
            {
              "name": "permanent",
              "type": "bool"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "id": "02E1",
          "name": "CREATE_MONEY_PICKUP",
          "num_params": 6,
          "short_desc": "Creates a money pickup with the specified cash value",
          "class": "Pickup",
          "attrs": {
            "is_constructor": true
          },
          "member": "CreateMoney"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "accuracy",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "02E2",
          "member": "SetAccuracy",
          "name": "SET_CHAR_ACCURACY",
          "num_params": 2,
          "short_desc": "Affects how often the character will hit the target when attacking with a weapon"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "speed",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "02E3",
          "member": "GetSpeed",
          "name": "GET_CAR_SPEED",
          "num_params": 2,
          "short_desc": "Gets the car's speed"
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Cutscene",
          "id": "02E4",
          "member": "Load",
          "name": "LOAD_CUTSCENE",
          "num_params": 1,
          "short_desc": "Loads the data for the specified cutscene"
        },
        {
          "id": "02E5",
          "name": "CREATE_CUTSCENE_OBJECT",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "02E6",
          "name": "SET_CUTSCENE_ANIM",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Cutscene",
          "id": "02E7",
          "member": "Start",
          "name": "START_CUTSCENE",
          "num_params": 0,
          "short_desc": "Starts the loaded cutscene (02E4)"
        },
        {
          "output": [
            {
              "name": "time",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Cutscene",
          "id": "02E8",
          "member": "GetTime",
          "name": "GET_CUTSCENE_TIME",
          "num_params": 1,
          "short_desc": "Returns the time in milliseconds passed since the cutscene has started (02E7)"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Cutscene",
          "id": "02E9",
          "member": "HasFinished",
          "name": "HAS_CUTSCENE_FINISHED",
          "num_params": 0,
          "short_desc": "Returns true if the cutscene has finished"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Cutscene",
          "id": "02EA",
          "member": "Clear",
          "name": "CLEAR_CUTSCENE",
          "num_params": 0,
          "short_desc": "Ends the current cutscene, freeing game memory"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "02EB",
          "member": "RestoreJumpcut",
          "name": "RESTORE_CAMERA_JUMPCUT",
          "num_params": 0,
          "short_desc": "Restores the camera, putting it back behind the player"
        },
        {
          "id": "02EC",
          "name": "CREATE_COLLECTABLE1",
          "num_params": 3,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "amount",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "02ED",
          "member": "SetCollectableTotal",
          "name": "SET_COLLECTABLE1_TOTAL",
          "num_params": 1,
          "short_desc": "Sets the total number of hidden packages to collect"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "02EE",
          "member": "IsProjectileInArea",
          "name": "IS_PROJECTILE_IN_AREA",
          "num_params": 6,
          "short_desc": "Returns true if a projectile is in the specified 3D area"
        },
        {
          "id": "02EF",
          "name": "DESTROY_PROJECTILES_IN_AREA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02F0",
          "name": "DROP_MINE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02F1",
          "name": "DROP_NAUTICAL_MINE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "modelId",
              "type": "model_char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "02F2",
          "member": "IsModel",
          "name": "IS_CHAR_MODEL",
          "num_params": 2,
          "short_desc": "Returns true if the character's model ID is equivalent to the model ID passed"
        },
        {
          "id": "02F3",
          "name": "LOAD_SPECIAL_MODEL",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "02F4",
          "name": "CREATE_CUTSCENE_HEAD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02F5",
          "name": "SET_CUTSCENE_HEAD_ANIM",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "02F8",
          "member": "GetForwardX",
          "name": "GET_CAR_FORWARD_X",
          "num_params": 2,
          "short_desc": "Returns the X coord of the vehicle's angle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "02F9",
          "member": "GetForwardY",
          "name": "GET_CAR_FORWARD_Y",
          "num_params": 2,
          "short_desc": "Returns the Y coord of the vehicle's angle"
        },
        {
          "input": [
            {
              "name": "garageId",
              "type": "string"
            },
            {
              "name": "type",
              "type": "GarageType"
            }
          ],
          "class": "Garage",
          "id": "02FA",
          "member": "ChangeType",
          "name": "CHANGE_GARAGE_TYPE",
          "num_params": 2,
          "short_desc": "Sets the garage's type",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "02FB",
          "name": "ACTIVATE_CRUSHER_CRANE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02FC",
          "name": "PRINT_WITH_2_NUMBERS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "02FD",
          "member": "PrintWith2NumbersNow",
          "name": "PRINT_WITH_2_NUMBERS_NOW",
          "num_params": 5,
          "short_desc": "Displays a styled message in which the first two ~1~ tokens are substituted with the specified numbers"
        },
        {
          "id": "02FE",
          "name": "PRINT_WITH_2_NUMBERS_SOON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "02FF",
          "member": "PrintWith3Numbers",
          "name": "PRINT_WITH_3_NUMBERS",
          "num_params": 6,
          "short_desc": "Displays a styled message in which the first three ~1~ tokens are substituted with the specified numbers"
        },
        {
          "id": "0300",
          "name": "PRINT_WITH_3_NUMBERS_NOW",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0301",
          "name": "PRINT_WITH_3_NUMBERS_SOON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "num4",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0302",
          "member": "PrintWith4Numbers",
          "name": "PRINT_WITH_4_NUMBERS",
          "num_params": 7,
          "short_desc": "Displays a styled message in which the first four ~1~ tokens are substituted with the specified numbers"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "num4",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0303",
          "member": "PrintWith4NumbersNow",
          "name": "PRINT_WITH_4_NUMBERS_NOW",
          "num_params": 7,
          "short_desc": "Displays a styled message in which the first four ~1~ tokens are substituted with the specified numbers"
        },
        {
          "id": "0304",
          "name": "PRINT_WITH_4_NUMBERS_SOON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0305",
          "name": "PRINT_WITH_5_NUMBERS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0306",
          "name": "PRINT_WITH_5_NUMBERS_NOW",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0307",
          "name": "PRINT_WITH_5_NUMBERS_SOON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "num4",
              "type": "int"
            },
            {
              "name": "num5",
              "type": "int"
            },
            {
              "name": "num6",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0308",
          "member": "PrintWith6Numbers",
          "name": "PRINT_WITH_6_NUMBERS",
          "num_params": 9,
          "short_desc": "Displays a styled message in which the first six ~1~ tokens are substituted with the specified numbers"
        },
        {
          "id": "0309",
          "name": "PRINT_WITH_6_NUMBERS_NOW",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "030A",
          "name": "PRINT_WITH_6_NUMBERS_SOON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "030B",
          "name": "SET_CHAR_OBJ_FOLLOW_CHAR_IN_FORMATION",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "progress",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "030C",
          "member": "PlayerMadeProgress",
          "name": "PLAYER_MADE_PROGRESS",
          "num_params": 1,
          "short_desc": "Increases the progress made stat by the specified amount"
        },
        {
          "input": [
            {
              "name": "maxProgress",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "030D",
          "member": "SetProgressTotal",
          "name": "SET_PROGRESS_TOTAL",
          "num_params": 1,
          "short_desc": "Sets the maximum progress the player can reach"
        },
        {
          "id": "030E",
          "name": "REGISTER_JUMP_DISTANCE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "030F",
          "name": "REGISTER_JUMP_HEIGHT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0310",
          "name": "REGISTER_JUMP_FLIPS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0311",
          "name": "REGISTER_JUMP_SPINS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0312",
          "name": "REGISTER_JUMP_STUNT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0313",
          "name": "REGISTER_UNIQUE_JUMP_FOUND",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0314",
          "name": "SET_UNIQUE_JUMPS_TOTAL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0315",
          "name": "REGISTER_PASSENGER_DROPPED_OFF_TAXI",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0316",
          "name": "REGISTER_MONEY_MADE_TAXI",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0317",
          "member": "RegisterMissionGiven",
          "name": "REGISTER_MISSION_GIVEN",
          "num_params": 0,
          "short_desc": "Increments the number of mission attempts stat by one"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0318",
          "member": "RegisterMissionPassed",
          "name": "REGISTER_MISSION_PASSED",
          "num_params": 1,
          "short_desc": "Sets the GXT of the last mission passed"
        },
        {
          "id": "0319",
          "name": "SET_CHAR_RUNNING",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "031A",
          "member": "RemoveAllScriptFires",
          "name": "REMOVE_ALL_SCRIPT_FIRES",
          "num_params": 0,
          "short_desc": "Removes all script fires (02CF)"
        },
        {
          "id": "031B",
          "name": "IS_FIRST_CAR_COLOUR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "031C",
          "name": "IS_SECOND_CAR_COLOUR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "031D",
          "member": "HasBeenDamagedByWeapon",
          "name": "HAS_CHAR_BEEN_DAMAGED_BY_WEAPON",
          "num_params": 2,
          "short_desc": "Returns true if the character has been hit by the specified weapon"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "031E",
          "member": "HasBeenDamagedByWeapon",
          "name": "HAS_CAR_BEEN_DAMAGED_BY_WEAPON",
          "num_params": 2,
          "short_desc": "Returns true if the vehicle has been hit by the specified weapon"
        },
        {
          "id": "031F",
          "name": "IS_CHAR_IN_CHARS_GROUP",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0320",
          "name": "IS_CHAR_IN_PLAYERS_GROUP",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0321",
          "member": "ExplodeHead",
          "name": "EXPLODE_CHAR_HEAD",
          "num_params": 1,
          "short_desc": "Dismembers the character"
        },
        {
          "id": "0322",
          "name": "EXPLODE_PLAYER_HEAD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Boat"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Boat",
          "id": "0323",
          "member": "Anchor",
          "name": "ANCHOR_BOAT",
          "num_params": 2,
          "short_desc": "Makes the boat stay motionless in the water"
        },
        {
          "id": "0324",
          "name": "SET_ZONE_GROUP",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "ScriptFire",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "ScriptFire",
          "id": "0325",
          "member": "CreateCarFire",
          "name": "START_CAR_FIRE",
          "num_params": 2,
          "short_desc": "Creates a script fire on the vehicle"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "ScriptFire",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "ScriptFire",
          "id": "0326",
          "member": "CreateCharFire",
          "name": "START_CHAR_FIRE",
          "num_params": 2,
          "short_desc": "Creates a script fire on the character"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "class": "World",
          "id": "0327",
          "member": "GetRandomCarOfTypeInArea",
          "name": "GET_RANDOM_CAR_OF_TYPE_IN_AREA",
          "num_params": 6,
          "short_desc": "Returns the handle of a random car with the specified model in the specified 2D area, or -1 otherwise",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "id": "0328",
          "name": "GET_RANDOM_CAR_OF_TYPE_IN_ZONE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0329",
          "name": "HAS_RESPRAY_HAPPENED",
          "num_params": 0,
          "short_desc": "Returns true if the players car has been resprayed by the garage",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "zoom",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "032A",
          "member": "SetZoom",
          "name": "SET_CAMERA_ZOOM",
          "num_params": 1,
          "short_desc": "Sets how far behind the camera is from the player"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_object"
            },
            {
              "name": "pickupType",
              "type": "PickupType"
            },
            {
              "name": "ammo",
              "type": "int"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "class": "Pickup",
          "id": "032B",
          "member": "CreateWithAmmo",
          "name": "CREATE_PICKUP_WITH_AMMO",
          "num_params": 7,
          "short_desc": "Creates a weapon pickup, giving the player the specified amount of ammo when they pick it up",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "id": "032C",
          "name": "SET_CAR_RAM_CAR",
          "num_params": 0,
          "short_desc": "Sets the cars goal to ram another car",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "032D",
          "name": "SET_CAR_BLOCK_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "032E",
          "name": "SET_CHAR_OBJ_CATCH_TRAIN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "032F",
          "name": "SET_COLL_OBJ_CATCH_TRAIN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "0330",
          "member": "SetNeverGetsTired",
          "name": "SET_PLAYER_NEVER_GETS_TIRED",
          "num_params": 2,
          "short_desc": "Defines whether the player can run fast forever"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "0331",
          "member": "SetFastReload",
          "name": "SET_PLAYER_FAST_RELOAD",
          "num_params": 2,
          "short_desc": "Defines whether the player have to reload their gun"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0332",
          "member": "SetBleeding",
          "name": "SET_CHAR_BLEEDING",
          "num_params": 2,
          "short_desc": "Makes a character bleed"
        },
        {
          "id": "0333",
          "name": "SET_CAR_FUNNY_SUSPENSION",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0334",
          "name": "SET_CAR_BIG_WHEELS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "0335",
          "member": "SetFreeResprays",
          "name": "SET_FREE_RESPRAYS",
          "num_params": 1,
          "short_desc": "Defines whether the player can respray their car for free"
        },
        {
          "id": "0336",
          "name": "SET_PLAYER_VISIBLE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0337",
          "member": "SetVisible",
          "name": "SET_CHAR_VISIBLE",
          "num_params": 2,
          "short_desc": "Sets whether the character is visible or not"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0338",
          "name": "SET_CAR_VISIBLE",
          "num_params": 2,
          "short_desc": "Sets whether the vehicle is visible or not",
          "class": "Car",
          "member": "SetVisible"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "solid",
              "type": "bool"
            },
            {
              "name": "car",
              "type": "bool"
            },
            {
              "name": "char",
              "type": "bool"
            },
            {
              "name": "object",
              "type": "bool"
            },
            {
              "name": "particle",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "0339",
          "member": "IsAreaOccupied",
          "name": "IS_AREA_OCCUPIED",
          "num_params": 11,
          "short_desc": "Returns true if there is anything with the specified properties within the 3D area"
        },
        {
          "id": "033A",
          "name": "START_DRUG_RUN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "033B",
          "name": "HAS_DRUG_RUN_BEEN_COMPLETED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "033C",
          "name": "HAS_DRUG_PLANE_BEEN_SHOT_DOWN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "033D",
          "name": "SAVE_PLAYER_FROM_FIRES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "offsetLeft",
              "type": "float"
            },
            {
              "name": "offsetTop",
              "type": "float"
            },
            {
              "name": "key",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "033E",
          "member": "Display",
          "name": "DISPLAY_TEXT",
          "num_params": 3,
          "short_desc": "Draws text at the specified on-screen position"
        },
        {
          "input": [
            {
              "name": "widthScale",
              "type": "float"
            },
            {
              "name": "heightScale",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "033F",
          "member": "SetScale",
          "name": "SET_TEXT_SCALE",
          "num_params": 2,
          "short_desc": "Scales the width and height of the text letters"
        },
        {
          "input": [
            {
              "name": "red",
              "type": "int"
            },
            {
              "name": "green",
              "type": "int"
            },
            {
              "name": "blue",
              "type": "int"
            },
            {
              "name": "alpha",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0340",
          "member": "SetColor",
          "name": "SET_TEXT_COLOUR",
          "num_params": 4,
          "short_desc": "Sets the color of the text letters"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0341",
          "member": "SetJustify",
          "name": "SET_TEXT_JUSTIFY",
          "num_params": 1,
          "short_desc": "Sets the text to be drawn justified, which means the text will wrap in order to fill an even rectangle of space"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0342",
          "member": "SetCenter",
          "name": "SET_TEXT_CENTRE",
          "num_params": 1,
          "short_desc": "Centers the text"
        },
        {
          "input": [
            {
              "name": "width",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0343",
          "member": "SetWrapX",
          "name": "SET_TEXT_WRAPX",
          "num_params": 1,
          "short_desc": "Sets the line width of the text"
        },
        {
          "input": [
            {
              "name": "width",
              "type": "float"
            }
          ],
          "id": "0344",
          "name": "SET_TEXT_CENTRE_SIZE",
          "num_params": 1,
          "short_desc": "Sets the line width of the centered text",
          "class": "Text",
          "member": "SetCenterSize",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0345",
          "member": "SetBackground",
          "name": "SET_TEXT_BACKGROUND",
          "num_params": 1,
          "short_desc": "Gives the text a background (0346)"
        },
        {
          "id": "0346",
          "name": "SET_TEXT_BACKGROUND_COLOUR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0347",
          "name": "SET_TEXT_BACKGROUND_ONLY_TEXT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0348",
          "member": "SetProportional",
          "name": "SET_TEXT_PROPORTIONAL",
          "num_params": 1,
          "short_desc": "Makes the text size proportionate"
        },
        {
          "input": [
            {
              "name": "font",
              "type": "Font"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0349",
          "member": "SetFont",
          "name": "SET_TEXT_FONT",
          "num_params": 1,
          "short_desc": "Sets the text draw font"
        },
        {
          "id": "034A",
          "name": "INDUSTRIAL_PASSED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "034B",
          "name": "COMMERCIAL_PASSED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "034C",
          "name": "SUBURBAN_PASSED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "fromAngle",
              "type": "float"
            },
            {
              "name": "toAngle",
              "type": "float"
            },
            {
              "name": "collisionCheck",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "034D",
          "member": "Rotate",
          "name": "ROTATE_OBJECT",
          "num_params": 4,
          "short_desc": "Rotates the object from one angle to another, optionally accounting for a collision during the rotation"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "fromZ",
              "type": "float"
            },
            {
              "name": "xSpeed",
              "type": "float"
            },
            {
              "name": "ySpeed",
              "type": "float"
            },
            {
              "name": "zSpeed",
              "type": "float"
            },
            {
              "name": "collisionCheck",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "034E",
          "member": "Slide",
          "name": "SLIDE_OBJECT",
          "num_params": 8,
          "short_desc": "Returns true if the object has finished moving"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "034F",
          "member": "RemoveElegantly",
          "name": "REMOVE_CHAR_ELEGANTLY",
          "num_params": 1,
          "short_desc": "Removes the character with a fade, freeing game memory"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0350",
          "member": "SetStayInSamePlace",
          "name": "SET_CHAR_STAY_IN_SAME_PLACE",
          "num_params": 2,
          "short_desc": "Makes the character maintain their position when attacked"
        },
        {
          "id": "0351",
          "name": "IS_NASTY_GAME",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0352",
          "name": "UNDRESS_CHAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0353",
          "name": "DRESS_CHAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0354",
          "name": "START_CHASE_SCENE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0355",
          "name": "STOP_CHASE_SCENE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "explosionType",
              "type": "ExplosionType"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "0356",
          "member": "IsExplosionInArea",
          "name": "IS_EXPLOSION_IN_AREA",
          "num_params": 7,
          "short_desc": "Returns true if there is an explosion of the specified type in the 3D area"
        },
        {
          "id": "0357",
          "name": "IS_EXPLOSION_IN_ZONE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0358",
          "name": "START_DRUG_DROP_OFF",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0359",
          "name": "HAS_DROP_OFF_PLANE_BEEN_SHOT_DOWN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "035A",
          "name": "FIND_DROP_OFF_PLANE_COORDINATES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "035B",
          "name": "CREATE_FLOATING_PACKAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            }
          ],
          "class": "Object",
          "id": "035C",
          "member": "PlaceRelativeToCar",
          "name": "PLACE_OBJECT_RELATIVE_TO_CAR",
          "num_params": 5,
          "short_desc": "Places the object at an offset from the car"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "035D",
          "name": "MAKE_OBJECT_TARGETABLE",
          "num_params": 2,
          "short_desc": "Sets whether the object can be targeted (auto-aimed) or not",
          "class": "Object",
          "member": "MakeTargetable"
        },
        {
          "id": "035E",
          "name": "ADD_ARMOUR_TO_PLAYER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "amount",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "035F",
          "member": "AddArmor",
          "name": "ADD_ARMOUR_TO_CHAR",
          "num_params": 2,
          "short_desc": "Increases the character's armor by the specified value to the maximum of 100.0"
        },
        {
          "input": [
            {
              "name": "garageId",
              "type": "string"
            }
          ],
          "class": "Garage",
          "id": "0360",
          "member": "Open",
          "name": "OPEN_GARAGE",
          "num_params": 1,
          "short_desc": "Opens the garage",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "garageId",
              "type": "string"
            }
          ],
          "class": "Garage",
          "id": "0361",
          "member": "Close",
          "name": "CLOSE_GARAGE",
          "num_params": 1,
          "short_desc": "Closes the garage",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Char",
          "id": "0362",
          "member": "WarpFromCarToCoord",
          "name": "WARP_CHAR_FROM_CAR_TO_COORD",
          "num_params": 4,
          "short_desc": "Pulls the character out of their car and places at the location"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "0363",
          "member": "SetVisibilityOfClosestObjectOfType",
          "name": "SET_VISIBILITY_OF_CLOSEST_OBJECT_OF_TYPE",
          "num_params": 6,
          "short_desc": "Sets the visibility of the object closest to the specified coordinates, matching the specified model"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "id": "0364",
          "name": "HAS_CHAR_SPOTTED_CHAR",
          "num_params": 2,
          "short_desc": "Returns true if the character can see the target character",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "HasSpottedChar"
        },
        {
          "id": "0365",
          "name": "SET_CHAR_OBJ_HAIL_TAXI",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "0366",
          "member": "HasBeenDamaged",
          "name": "HAS_OBJECT_BEEN_DAMAGED",
          "num_params": 1,
          "short_desc": "Returns true if the object is damaged"
        },
        {
          "id": "0367",
          "name": "START_KILL_FRENZY_HEADSHOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0368",
          "name": "ACTIVATE_MILITARY_CRANE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0369",
          "name": "WARP_PLAYER_INTO_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "class": "Char",
          "id": "036A",
          "member": "WarpIntoCar",
          "name": "WARP_CHAR_INTO_CAR",
          "num_params": 2,
          "short_desc": "Puts the character in the specified vehicle"
        },
        {
          "id": "036B",
          "name": "SWITCH_CAR_RADIO",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "036C",
          "name": "SET_AUDIO_STREAM",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "036D",
          "member": "PrintWith2NumbersBig",
          "name": "PRINT_WITH_2_NUMBERS_BIG",
          "num_params": 5,
          "short_desc": "Displays a styled message in which the first two ~1~ tokens are substituted with the specified numbers"
        },
        {
          "id": "036E",
          "name": "PRINT_WITH_3_NUMBERS_BIG",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "036F",
          "name": "PRINT_WITH_4_NUMBERS_BIG",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0370",
          "name": "PRINT_WITH_5_NUMBERS_BIG",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0371",
          "name": "PRINT_WITH_6_NUMBERS_BIG",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0372",
          "name": "SET_CHAR_WAIT_STATE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0373",
          "member": "SetBehindPlayer",
          "name": "SET_CAMERA_BEHIND_PLAYER",
          "num_params": 0,
          "short_desc": "Puts the camera behind the player"
        },
        {
          "id": "0374",
          "name": "SET_MOTION_BLUR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0375",
          "name": "PRINT_STRING_IN_STRING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Char",
          "id": "0376",
          "member": "CreateRandom",
          "name": "CREATE_RANDOM_CHAR",
          "num_params": 4,
          "short_desc": "Creates a character with a randomised model and pedtype at the specified coordinates"
        },
        {
          "id": "0377",
          "name": "SET_CHAR_OBJ_STEAL_ANY_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0378",
          "name": "SET_2_REPEATED_PHONE_MESSAGES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0379",
          "name": "SET_2_PHONE_MESSAGES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "037A",
          "name": "SET_3_REPEATED_PHONE_MESSAGES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "037B",
          "name": "SET_3_PHONE_MESSAGES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "037C",
          "name": "SET_4_REPEATED_PHONE_MESSAGES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "037D",
          "name": "SET_4_PHONE_MESSAGES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "037E",
          "name": "IS_SNIPER_BULLET_IN_AREA",
          "num_params": 0,
          "short_desc": "Returns true if a sniper bullet is in the specified area",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "037F",
          "name": "GIVE_PLAYER_DETONATOR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0380",
          "name": "SET_COLL_OBJ_STEAL_ANY_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "xSpeed",
              "type": "float"
            },
            {
              "name": "ySpeed",
              "type": "float"
            },
            {
              "name": "zSpeed",
              "type": "float"
            }
          ],
          "class": "Object",
          "id": "0381",
          "member": "SetVelocity",
          "name": "SET_OBJECT_VELOCITY",
          "num_params": 4,
          "short_desc": "Sets the object's velocity"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Object",
          "id": "0382",
          "member": "SetCollision",
          "name": "SET_OBJECT_COLLISION",
          "num_params": 2,
          "short_desc": "Sets the object's collision detection"
        },
        {
          "id": "0383",
          "name": "IS_ICECREAM_JINGLE_ON",
          "num_params": 0,
          "short_desc": "Returns true if the vehicles siren is on",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "templateKey",
              "type": "gxt_key"
            },
            {
              "name": "replacementKey",
              "type": "gxt_key"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0384",
          "member": "PrintStringInStringNow",
          "name": "PRINT_STRING_IN_STRING_NOW",
          "num_params": 4,
          "short_desc": "Displays a styled message in which the first string token ~a~ is substituted with the specified text"
        },
        {
          "id": "0385",
          "name": "PRINT_STRING_IN_STRING_SOON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0386",
          "name": "SET_5_REPEATED_PHONE_MESSAGES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0387",
          "name": "SET_5_PHONE_MESSAGES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0388",
          "name": "SET_6_REPEATED_PHONE_MESSAGES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0389",
          "name": "SET_6_PHONE_MESSAGES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radiusX",
              "type": "float"
            },
            {
              "name": "radiusY",
              "type": "float"
            },
            {
              "name": "radiusZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "038A",
          "member": "IsPointObscuredByAMissionEntity",
          "name": "IS_POINT_OBSCURED_BY_A_MISSION_ENTITY",
          "num_params": 6,
          "short_desc": "Returns true if there is a vehicle in the specified area"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "038B",
          "member": "LoadAllModelsNow",
          "name": "LOAD_ALL_MODELS_NOW",
          "num_params": 0,
          "short_desc": "Loads any requested models (0247 or 0353) synchronously"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Object",
          "id": "038C",
          "member": "AddToVelocity",
          "name": "ADD_TO_OBJECT_VELOCITY",
          "num_params": 4,
          "short_desc": "Adds the given vector to the object's velocity (0381)"
        },
        {
          "input": [
            {
              "name": "memorySlot",
              "type": "int"
            },
            {
              "name": "offsetLeft",
              "type": "float"
            },
            {
              "name": "offsetTop",
              "type": "float"
            },
            {
              "name": "width",
              "type": "float"
            },
            {
              "name": "height",
              "type": "float"
            },
            {
              "name": "r",
              "type": "int"
            },
            {
              "name": "g",
              "type": "int"
            },
            {
              "name": "b",
              "type": "int"
            },
            {
              "name": "a",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "038D",
          "member": "DrawSprite",
          "name": "DRAW_SPRITE",
          "num_params": 9,
          "short_desc": "Draws a loaded texture (038F) at the specified on-screen X and Y coordinates, with the specified size and RGBA color"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "width",
              "type": "float"
            },
            {
              "name": "height",
              "type": "float"
            },
            {
              "name": "r",
              "type": "int"
            },
            {
              "name": "g",
              "type": "int"
            },
            {
              "name": "b",
              "type": "int"
            },
            {
              "name": "a",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "038E",
          "member": "DrawRect",
          "name": "DRAW_RECT",
          "num_params": 8,
          "short_desc": "Draws a box at the specified screen X and Y position, with the specified size and RGBA colors"
        },
        {
          "input": [
            {
              "name": "memorySlot",
              "type": "int"
            },
            {
              "name": "spriteName",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Txd",
          "id": "038F",
          "member": "LoadSprite",
          "name": "LOAD_SPRITE",
          "num_params": 2,
          "short_desc": "Loads a sprite from the most recently loaded texture dictionary (0390)"
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Txd",
          "id": "0390",
          "member": "LoadDictionary",
          "name": "LOAD_TEXTURE_DICTIONARY",
          "num_params": 1,
          "short_desc": "Loads the texture dictionary for use in drawing sprites (038D) on the screen"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Txd",
          "id": "0391",
          "member": "Remove",
          "name": "REMOVE_TEXTURE_DICTIONARY",
          "num_params": 0,
          "short_desc": "Unloads all currently loaded textures (038F), as well as texture dictionaries (0390), freeing game memory"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Object",
          "id": "0392",
          "member": "SetDynamic",
          "name": "SET_OBJECT_DYNAMIC",
          "num_params": 2,
          "short_desc": "Defines whether or not the object is moveable"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "animName",
              "type": "string"
            },
            {
              "name": "animSpeed",
              "type": "float"
            }
          ],
          "id": "0393",
          "name": "SET_CHAR_ANIM_SPEED",
          "num_params": 3,
          "short_desc": "Makes an actor perform an animation at the specified speed",
          "class": "Char",
          "member": "SetAnimSpeed"
        },
        {
          "input": [
            {
              "name": "soundId",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Audio",
          "id": "0394",
          "member": "PlayMissionPassedTune",
          "name": "PLAY_MISSION_PASSED_TUNE",
          "num_params": 1,
          "short_desc": "Plays an audio file with the specified ID from the Audio directory"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "clearParticles",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "0395",
          "member": "ClearArea",
          "name": "CLEAR_AREA",
          "num_params": 5,
          "short_desc": "Clears the area, removing all vehicles and pedestrians"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "0396",
          "member": "FreezeTimer",
          "name": "FREEZE_ONSCREEN_TIMER",
          "num_params": 1,
          "short_desc": "Makes the on-screen timer stop updating"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0397",
          "member": "SwitchSiren",
          "name": "SWITCH_CAR_SIREN",
          "num_params": 2,
          "short_desc": "Sets whether the car's alarm can be activated"
        },
        {
          "id": "0398",
          "name": "SWITCH_PED_ROADS_ON_ANGLED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0399",
          "name": "SWITCH_PED_ROADS_OFF_ANGLED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "039A",
          "name": "SWITCH_ROADS_ON_ANGLED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "039B",
          "name": "SWITCH_ROADS_OFF_ANGLED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "039C",
          "member": "SetWatertight",
          "name": "SET_CAR_WATERTIGHT",
          "num_params": 2,
          "short_desc": "Makes the vehicle watertight, meaning characters inside will not be harmed if the vehicle is submerged in water"
        },
        {
          "id": "039D",
          "name": "ADD_MOVING_PARTICLE_EFFECT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "039E",
          "member": "SetCantBeDraggedOut",
          "name": "SET_CHAR_CANT_BE_DRAGGED_OUT",
          "num_params": 2,
          "short_desc": "Locks the character while in a car"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "039F",
          "member": "TurnToFaceCoord",
          "name": "TURN_CAR_TO_FACE_COORD",
          "num_params": 3,
          "short_desc": "Sets the car's heading so that it is facing the 2D coordinate"
        },
        {
          "id": "03A0",
          "name": "IS_CRANE_LIFTING_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Sphere",
          "id": "03A1",
          "member": "Draw",
          "name": "DRAW_SPHERE",
          "num_params": 4,
          "short_desc": "Displays a red cylinder sphere"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "status",
              "type": "EntityStatus"
            }
          ],
          "class": "Car",
          "id": "03A2",
          "member": "SetStatus",
          "name": "SET_CAR_STATUS",
          "num_params": 2,
          "short_desc": "Sets the car's status"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "03A3",
          "member": "IsMale",
          "name": "IS_CHAR_MALE",
          "num_params": 1,
          "short_desc": "Returns true if the character is male"
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "attrs": {
            "is_keyword": true
          },
          "id": "03A4",
          "name": "SCRIPT_NAME",
          "num_params": 1,
          "short_desc": "Assigns a new name to the current script"
        },
        {
          "id": "03A5",
          "name": "CHANGE_GARAGE_TYPE_WITH_CAR_MODEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03A6",
          "name": "FIND_DRUG_PLANE_COORDINATES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03A7",
          "name": "SAVE_INT_TO_DEBUG_FILE",
          "num_params": 1,
          "short_desc": "Saves an integer to a debug file",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "03A8",
          "name": "SAVE_FLOAT_TO_DEBUG_FILE",
          "num_params": 1,
          "short_desc": "Saves a float to the debug file",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "03A9",
          "name": "SAVE_NEWLINE_TO_DEBUG_FILE",
          "num_params": 0,
          "short_desc": "Writes a newline to the debug file",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "03AA",
          "name": "POLICE_RADIO_MESSAGE",
          "num_params": 3,
          "short_desc": "Plays police radio message audio reporting the suspect has last been seen in the area specified by the coordinates",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "03AB",
          "member": "SetStrong",
          "name": "SET_CAR_STRONG",
          "num_params": 2,
          "short_desc": "Defines whether the car is more resistant to collisions than normal"
        },
        {
          "id": "03AC",
          "name": "REMOVE_ROUTE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03AD",
          "name": "SWITCH_RUBBISH",
          "num_params": 1,
          "short_desc": "Toggles garbage",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "03AE",
          "name": "REMOVE_PARTICLE_EFFECTS_IN_AREA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "03AF",
          "member": "Switch",
          "name": "SWITCH_STREAMING",
          "num_params": 1,
          "short_desc": "Sets the streaming of additional models like peds, cars, and maps"
        },
        {
          "input": [
            {
              "name": "garageId",
              "type": "string"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Garage",
          "id": "03B0",
          "member": "IsOpen",
          "name": "IS_GARAGE_OPEN",
          "num_params": 1,
          "short_desc": "Returns true if the garage's door is open"
        },
        {
          "input": [
            {
              "name": "garageId",
              "type": "string"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Garage",
          "id": "03B1",
          "member": "IsClosed",
          "name": "IS_GARAGE_CLOSED",
          "num_params": 1,
          "short_desc": "Returns true if the garage's door is closed"
        },
        {
          "id": "03B2",
          "name": "START_CATALINA_HELI",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03B3",
          "name": "CATALINA_HELI_TAKE_OFF",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03B4",
          "name": "REMOVE_CATALINA_HELI",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03B5",
          "name": "HAS_CATALINA_HELI_BEEN_SHOT_DOWN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "fromModelId",
              "type": "model_object"
            },
            {
              "name": "toModelId",
              "type": "model_object"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "03B6",
          "member": "SwapNearestBuildingModel",
          "name": "SWAP_NEAREST_BUILDING_MODEL",
          "num_params": 6,
          "short_desc": "Swaps a map model with another map model nearest to the center of the search area"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "03B7",
          "member": "SwitchProcessing",
          "name": "SWITCH_WORLD_PROCESSING",
          "num_params": 1,
          "short_desc": "Sets whether the game should render the world or only the cutscene objects"
        },
        {
          "id": "03B8",
          "name": "REMOVE_ALL_PLAYER_WEAPONS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03B9",
          "name": "GRAB_CATALINA_HELI",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "03BA",
          "member": "ClearAreaOfCars",
          "name": "CLEAR_AREA_OF_CARS",
          "num_params": 6,
          "short_desc": "Clears all cars in the specified 3D area"
        },
        {
          "id": "03BB",
          "name": "SET_ROTATING_GARAGE_DOOR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Sphere",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Sphere",
          "id": "03BC",
          "member": "Create",
          "name": "ADD_SPHERE",
          "num_params": 5,
          "short_desc": "Creates a static sphere at the location, with the specified radius"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Sphere"
            }
          ],
          "attrs": {
            "is_destructor": true
          },
          "class": "Sphere",
          "id": "03BD",
          "member": "Remove",
          "name": "REMOVE_SPHERE",
          "num_params": 1,
          "short_desc": "Destroys a static sphere"
        },
        {
          "id": "03BE",
          "name": "CATALINA_HELI_FLY_AWAY",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "03BF",
          "member": "SetEveryoneIgnorePlayer",
          "name": "SET_EVERYONE_IGNORE_PLAYER",
          "num_params": 2,
          "short_desc": "Makes pedestrians pay no attention to the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "03C0",
          "member": "StoreCarIsInNoSave",
          "name": "STORE_CAR_CHAR_IS_IN_NO_SAVE",
          "num_params": 2,
          "short_desc": "Returns the character's vehicle handle without marking it as used by the script, therefore allowing it to be deleted by the game at any time"
        },
        {
          "id": "03C1",
          "name": "STORE_CAR_PLAYER_IS_IN_NO_SAVE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03C2",
          "name": "IS_PHONE_DISPLAYING_MESSAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "timer",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "direction",
              "type": "TimerDirection"
            },
            {
              "name": "text",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "03C3",
          "member": "DisplayTimerWithString",
          "name": "DISPLAY_ONSCREEN_TIMER_WITH_STRING",
          "num_params": 3,
          "short_desc": "Creates a countdown or countup onscreen timer with the text"
        },
        {
          "input": [
            {
              "name": "counter",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "display",
              "type": "CounterDisplay"
            },
            {
              "name": "text",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "03C4",
          "member": "DisplayCounterWithString",
          "name": "DISPLAY_ONSCREEN_COUNTER_WITH_STRING",
          "num_params": 3,
          "short_desc": "Displays an onscreen counter with the text, either shown in numbers or as a bar"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "03C5",
          "member": "CreateRandomCarForCarPark",
          "name": "CREATE_RANDOM_CAR_FOR_CAR_PARK",
          "num_params": 4,
          "short_desc": "Starts spawning random cars at the specified location"
        },
        {
          "id": "03C6",
          "name": "IS_COLLISION_IN_MEMORY",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "multiplier",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "03C7",
          "member": "SetWantedMultiplier",
          "name": "SET_WANTED_MULTIPLIER",
          "num_params": 1,
          "short_desc": "Sets sensitivity to crime, changing how many crimes a player can commit before police begin to pursue"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "03C8",
          "member": "SetInFrontOfPlayer",
          "name": "SET_CAMERA_IN_FRONT_OF_PLAYER",
          "num_params": 0,
          "short_desc": "Puts the camera in front of the player, pointing towards the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "03C9",
          "name": "IS_CAR_VISIBLY_DAMAGED",
          "num_params": 1,
          "short_desc": "Returns true if any of the car components is visibly damaged or lost",
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "IsVisiblyDamaged"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Object",
          "id": "03CA",
          "member": "DoesExist",
          "name": "DOES_OBJECT_EXIST",
          "num_params": 1,
          "short_desc": "Returns true if the handle is a valid object handle"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "03CB",
          "member": "LoadScene",
          "name": "LOAD_SCENE",
          "num_params": 3,
          "short_desc": "Starts loading a specific location, just like if the player was there, removing LOD textures"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "speed",
              "type": "float"
            },
            {
              "name": "duration",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "StuckCarCheck",
          "id": "03CC",
          "member": "Add",
          "name": "ADD_STUCK_CAR_CHECK",
          "num_params": 3,
          "short_desc": "Adds the vehicle to the stuck cars array"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "StuckCarCheck",
          "id": "03CD",
          "member": "Remove",
          "name": "REMOVE_STUCK_CAR_CHECK",
          "num_params": 1,
          "short_desc": "Removes the vehicle from the stuck cars array"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "StuckCarCheck",
          "id": "03CE",
          "member": "IsCarStuck",
          "name": "IS_CAR_STUCK",
          "num_params": 1,
          "short_desc": "Returns true if the car is stuck"
        },
        {
          "input": [
            {
              "name": "slotId",
              "type": "MissionAudioSlot"
            },
            {
              "name": "audioId",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Audio",
          "id": "03CF",
          "member": "LoadMissionAudio",
          "name": "LOAD_MISSION_AUDIO",
          "num_params": 2,
          "short_desc": "Loads the file from the audio directory"
        },
        {
          "input": [
            {
              "name": "slotId",
              "type": "MissionAudioSlot"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Audio",
          "id": "03D0",
          "member": "HasMissionAudioLoaded",
          "name": "HAS_MISSION_AUDIO_LOADED",
          "num_params": 1,
          "short_desc": "Returns true if the mission audio has loaded (03CF)"
        },
        {
          "input": [
            {
              "name": "slotId",
              "type": "MissionAudioSlot"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Audio",
          "id": "03D1",
          "member": "PlayMissionAudio",
          "name": "PLAY_MISSION_AUDIO",
          "num_params": 1,
          "short_desc": "Plays the loaded sound (03CF)"
        },
        {
          "input": [
            {
              "name": "slotId",
              "type": "MissionAudioSlot"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Audio",
          "id": "03D2",
          "member": "HasMissionAudioFinished",
          "name": "HAS_MISSION_AUDIO_FINISHED",
          "num_params": 1,
          "short_desc": "Returns true if the audio (03CF) is no longer playing"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "nodeX",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeY",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeZ",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "angle",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "03D3",
          "member": "GetClosestCarNodeWithHeading",
          "name": "GET_CLOSEST_CAR_NODE_WITH_HEADING",
          "num_params": 7,
          "short_desc": "Returns the position and heading of the closest vehicle path node to the specified position"
        },
        {
          "id": "03D4",
          "name": "HAS_IMPORT_GARAGE_SLOT_BEEN_FILLED",
          "num_params": 0,
          "short_desc": "Returns true if the import slot has been filled",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03D5",
          "member": "ClearThisPrint",
          "name": "CLEAR_THIS_PRINT",
          "num_params": 1,
          "short_desc": "Removes the priority text from the screen"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03D6",
          "member": "ClearThisBigPrint",
          "name": "CLEAR_THIS_BIG_PRINT",
          "num_params": 1,
          "short_desc": "Removes the styled text from the screen"
        },
        {
          "input": [
            {
              "name": "slotId",
              "type": "MissionAudioSlot"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Audio",
          "id": "03D7",
          "member": "SetMissionAudioPosition",
          "name": "SET_MISSION_AUDIO_POSITION",
          "num_params": 4,
          "short_desc": "Sets the location of the mission audio (03CF) where it can be heard"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "03D8",
          "member": "ActivateSaveMenu",
          "name": "ACTIVATE_SAVE_MENU",
          "num_params": 0,
          "short_desc": "Displays a screen prompting the player to save"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "id": "03D9",
          "member": "HasSaveGameFinished",
          "name": "HAS_SAVE_GAME_FINISHED",
          "num_params": 0,
          "short_desc": "Returns true if the player has saved their game"
        },
        {
          "id": "03DA",
          "name": "NO_SPECIAL_CAMERA_FOR_THIS_GARAGE",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "03DB",
          "name": "ADD_BLIP_FOR_PICKUP_OLD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "pickup",
              "type": "Pickup"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "03DC",
          "member": "AddForPickup",
          "name": "ADD_BLIP_FOR_PICKUP",
          "num_params": 2,
          "short_desc": "Adds a blip and a marker to the pickup"
        },
        {
          "id": "03DD",
          "name": "ADD_SPRITE_BLIP_FOR_PICKUP",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "multiplier",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "03DE",
          "member": "SetPedDensityMultiplier",
          "name": "SET_PED_DENSITY_MULTIPLIER",
          "num_params": 1,
          "short_desc": "Sets the quantity of pedestrians to spawn in the game"
        },
        {
          "id": "03DF",
          "name": "FORCE_RANDOM_PED_TYPE",
          "num_params": 0,
          "short_desc": "Forces a model on all randomly spawning peds",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03E0",
          "member": "SetDrawBeforeFade",
          "name": "SET_TEXT_DRAW_BEFORE_FADE",
          "num_params": 1,
          "short_desc": "Causes the next text to be drawn before the fade is drawn"
        },
        {
          "id": "03E1",
          "name": "GET_COLLECTABLE1S_COLLECTED",
          "num_params": 0,
          "short_desc": "Gets the number of collectable1s collected",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "03E2",
          "name": "SET_CHAR_OBJ_LEAVE_ANY_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "03E3",
          "member": "SetSpritesDrawBeforeFade",
          "name": "SET_SPRITES_DRAW_BEFORE_FADE",
          "num_params": 1,
          "short_desc": "Causes the next texture to be drawn (038D) before the fade is drawn"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03E4",
          "member": "SetRightJustify",
          "name": "SET_TEXT_RIGHT_JUSTIFY",
          "num_params": 1,
          "short_desc": "Sets the text draw to be aligned to the right"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03E5",
          "member": "PrintHelp",
          "name": "PRINT_HELP",
          "num_params": 1,
          "short_desc": "Displays a black text box for a few seconds"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03E6",
          "member": "ClearHelp",
          "name": "CLEAR_HELP",
          "num_params": 0,
          "short_desc": "Removes the text box from the screen"
        },
        {
          "input": [
            {
              "name": "object",
              "type": "HudObject"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "03E7",
          "member": "FlashObject",
          "name": "FLASH_HUD_OBJECT",
          "num_params": 1,
          "short_desc": "Makes a specific part of the HUD disappear and reappear several times"
        },
        {
          "id": "03E8",
          "name": "FLASH_RADAR_BLIP",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "03E9",
          "name": "IS_CHAR_IN_CONTROL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03EA",
          "name": "SET_GENERATE_CARS_AROUND_CAMERA",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03EB",
          "member": "ClearSmallPrints",
          "name": "CLEAR_SMALL_PRINTS",
          "num_params": 0,
          "short_desc": "Clears small messages from the screen"
        },
        {
          "id": "03EC",
          "name": "HAS_MILITARY_CRANE_COLLECTED_ALL_CARS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "03ED",
          "member": "SetUpsidedownNotDamaged",
          "name": "SET_UPSIDEDOWN_CAR_NOT_DAMAGED",
          "num_params": 2,
          "short_desc": "Disables the car from exploding when it is upside down, as long as the player is not in the vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "03EE",
          "member": "CanStartMission",
          "name": "CAN_PLAYER_START_MISSION",
          "num_params": 1,
          "short_desc": "Returns true if the player can move"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "class": "Player",
          "id": "03EF",
          "member": "MakeSafeForCutscene",
          "name": "MAKE_PLAYER_SAFE_FOR_CUTSCENE",
          "num_params": 1,
          "short_desc": "Makes the player safe, putting the character in a safe location"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03F0",
          "member": "UseCommands",
          "name": "USE_TEXT_COMMANDS",
          "num_params": 1,
          "short_desc": "Enables text and texture drawing"
        },
        {
          "id": "03F1",
          "name": "SET_THREAT_FOR_PED_TYPE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03F2",
          "name": "CLEAR_THREAT_FOR_PED_TYPE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "primaryColour",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "secondaryColour",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "03F3",
          "member": "GetColors",
          "name": "GET_CAR_COLOURS",
          "num_params": 3,
          "short_desc": "Gets the car's primary and secondary colors"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "03F4",
          "member": "SetAllCarsCanBeDamaged",
          "name": "SET_ALL_CARS_CAN_BE_DAMAGED",
          "num_params": 1,
          "short_desc": "Sets whether all cars receive damage"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "03F5",
          "member": "SetCanBeDamaged",
          "name": "SET_CAR_CAN_BE_DAMAGED",
          "num_params": 2,
          "short_desc": "Sets whether the car receives damage"
        },
        {
          "id": "03F6",
          "name": "MAKE_PLAYER_UNSAFE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03F7",
          "name": "LOAD_COLLISION",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03F8",
          "name": "GET_BODY_CAST_HEALTH",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03F9",
          "name": "SET_CHARS_CHATTING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03FA",
          "name": "MAKE_PLAYER_SAFE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03FB",
          "name": "SET_CAR_STAYS_IN_CURRENT_LEVEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "03FC",
          "name": "SET_CHAR_STAYS_IN_CURRENT_LEVEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "pad",
              "type": "Pad"
            },
            {
              "name": "delay",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Pad",
          "id": "03FD",
          "member": "SetDrunkInputDelay",
          "name": "SET_DRUNK_INPUT_DELAY",
          "num_params": 2,
          "short_desc": "Affects the delay to the left and right steering while driving"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "amount",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "03FE",
          "member": "SetMoney",
          "name": "SET_CHAR_MONEY",
          "num_params": 2,
          "short_desc": "Sets the character's cash sum, setting how much cash they will drop when dead"
        },
        {
          "id": "03FF",
          "name": "INCREASE_CHAR_MONEY",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Object",
          "id": "0400",
          "member": "GetOffsetInWorldCoords",
          "name": "GET_OFFSET_FROM_OBJECT_IN_WORLD_COORDS",
          "num_params": 7,
          "short_desc": "Returns the object's coordinates with an offset"
        },
        {
          "id": "0401",
          "name": "REGISTER_LIFE_SAVED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0402",
          "name": "REGISTER_CRIMINAL_CAUGHT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0403",
          "name": "REGISTER_AMBULANCE_LEVEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0404",
          "name": "REGISTER_FIRE_EXTINGUISHED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0405",
          "name": "TURN_PHONE_ON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0406",
          "name": "REGISTER_LONGEST_DODO_FLIGHT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "0407",
          "member": "GetOffsetInWorldCoords",
          "name": "GET_OFFSET_FROM_CAR_IN_WORLD_COORDS",
          "num_params": 7,
          "short_desc": "Returns the coordinates of an offset of the vehicle's position, depending on the vehicle's rotation"
        },
        {
          "id": "0408",
          "name": "SET_TOTAL_NUMBER_OF_KILL_FRENZIES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0409",
          "name": "BLOW_UP_RC_BUGGY",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "040A",
          "name": "REMOVE_CAR_FROM_CHASE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "040B",
          "name": "IS_FRENCH_GAME",
          "num_params": 0,
          "short_desc": "Returns true if the game is in French",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "id": "040C",
          "member": "IsGerman",
          "name": "IS_GERMAN_GAME",
          "num_params": 0,
          "short_desc": "Returns true if the game language is set to German"
        },
        {
          "input": [
            {
              "name": "slotId",
              "type": "MissionAudioSlot"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Audio",
          "id": "040D",
          "member": "ClearMissionAudio",
          "name": "CLEAR_MISSION_AUDIO",
          "num_params": 1,
          "short_desc": "Unloads the mission audio (03CF), freeing game memory"
        },
        {
          "id": "040E",
          "name": "SET_FADE_IN_AFTER_NEXT_ARREST",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "040F",
          "name": "SET_FADE_IN_AFTER_NEXT_DEATH",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0410",
          "name": "SET_GANG_PED_MODEL_PREFERENCE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0411",
          "name": "SET_CHAR_USE_PEDNODE_SEEK",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0412",
          "name": "SWITCH_VEHICLE_WEAPONS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0413",
          "name": "SET_GET_OUT_OF_JAIL_FREE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "0414",
          "member": "SetFreeHealthCare",
          "name": "SET_FREE_HEALTH_CARE",
          "num_params": 2,
          "short_desc": "Sets whether the player loses the cash when gets wasted (works once)"
        },
        {
          "id": "0415",
          "name": "IS_CAR_DOOR_CLOSED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0416",
          "name": "LOAD_AND_LAUNCH_MISSION",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "index",
              "type": "int"
            }
          ],
          "id": "0417",
          "name": "LOAD_AND_LAUNCH_MISSION_INTERNAL",
          "num_params": 1,
          "short_desc": "Loads a mission from the list defined in the main.scm header",
          "class": "Mission",
          "member": "LoadAndLaunchInternal",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Object",
          "id": "0418",
          "member": "SetDrawLast",
          "name": "SET_OBJECT_DRAW_LAST",
          "num_params": 2,
          "short_desc": "Sets the specified object to always draw on top of other objects"
        },
        {
          "id": "0419",
          "name": "GET_AMMO_IN_PLAYER_WEAPON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "output": [
            {
              "name": "ammo",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "041A",
          "name": "GET_AMMO_IN_CHAR_WEAPON",
          "num_params": 3,
          "short_desc": "Gets the amount of ammo in the specified weapon of the character",
          "class": "Char",
          "member": "GetAmmoInWeapon"
        },
        {
          "id": "041B",
          "name": "REGISTER_KILL_FRENZY_PASSED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "041C",
          "name": "SET_CHAR_SAY",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "value",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "041D",
          "member": "SetNearClip",
          "name": "SET_NEAR_CLIP",
          "num_params": 1,
          "short_desc": "Sets the near clip"
        },
        {
          "input": [
            {
              "name": "channel",
              "type": "RadioChannel"
            }
          ],
          "id": "041E",
          "name": "SET_RADIO_CHANNEL",
          "num_params": 1,
          "short_desc": "Sets the current radio station that is playing, if the player is in a vehicle",
          "class": "Audio",
          "member": "SetRadioChannel",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "041F",
          "name": "OVERRIDE_HOSPITAL_LEVEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0420",
          "name": "OVERRIDE_POLICE_STATION_LEVEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0421",
          "name": "FORCE_RAIN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0422",
          "name": "DOES_GARAGE_CONTAIN_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "traction",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "0423",
          "member": "SetTraction",
          "name": "SET_CAR_TRACTION",
          "num_params": 2,
          "short_desc": "Overrides the default vehicle traction value of 1.0"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "id": "0424",
          "member": "AreMeasurementsInMeters",
          "name": "ARE_MEASUREMENTS_IN_METRES",
          "num_params": 0,
          "short_desc": "Returns true if the game uses metric measurements (meters instead of feet)"
        },
        {
          "id": "0426",
          "name": "MARK_ROADS_BETWEEN_LEVELS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0427",
          "name": "MARK_PED_ROADS_BETWEEN_LEVELS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0428",
          "member": "SetAvoidLevelTransitions",
          "name": "SET_CAR_AVOID_LEVEL_TRANSITIONS",
          "num_params": 2,
          "short_desc": "Sets whether the vehicle will avoid paths between levels (0426)"
        },
        {
          "id": "0429",
          "name": "SET_CHAR_AVOID_LEVEL_TRANSITIONS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "042A",
          "name": "IS_THREAT_FOR_PED_TYPE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "042B",
          "member": "ClearAreaOfChars",
          "name": "CLEAR_AREA_OF_CHARS",
          "num_params": 6,
          "short_desc": "Clears all pedestrians from the given area"
        },
        {
          "input": [
            {
              "name": "numMissions",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "042C",
          "member": "SetTotalNumberOfMissions",
          "name": "SET_TOTAL_NUMBER_OF_MISSIONS",
          "num_params": 1,
          "short_desc": "Sets the total number of missions that can be completed"
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "042E",
          "member": "RegisterFastestTime",
          "name": "REGISTER_FASTEST_TIME",
          "num_params": 2,
          "short_desc": "Updates the stat if the value is lower than the current stat value"
        },
        {
          "id": "042F",
          "name": "REGISTER_HIGHEST_SCORE",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "seatId",
              "type": "int"
            }
          ],
          "id": "0430",
          "name": "WARP_CHAR_INTO_CAR_AS_PASSENGER",
          "num_params": 3,
          "short_desc": "Puts the character into a vehicle's passenger seat",
          "class": "Char",
          "member": "WarpIntoCarAsPassenger"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "seatIndex",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "0431",
          "member": "IsPassengerSeatFree",
          "name": "IS_CAR_PASSENGER_SEAT_FREE",
          "num_params": 2,
          "short_desc": "Returns true if the specified car seat is empty"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "seatIndex",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "id": "0432",
          "name": "GET_CHAR_IN_CAR_PASSENGER_SEAT",
          "num_params": 3,
          "short_desc": "Returns the handle of a character sitting in the specified car seat",
          "class": "Car",
          "member": "GetCharInPassengerSeat"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0433",
          "member": "SetIsChrisCriminal",
          "name": "SET_CHAR_IS_CHRIS_CRIMINAL",
          "num_params": 2,
          "short_desc": "Sets whether the character is a psychotic killer or not"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Credits",
          "id": "0434",
          "member": "Start",
          "name": "START_CREDITS",
          "num_params": 0,
          "short_desc": "Makes the credits scroll up the screen"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Credits",
          "id": "0435",
          "member": "Stop",
          "name": "STOP_CREDITS",
          "num_params": 0,
          "short_desc": "Stops the credits text from showing"
        },
        {
          "attrs": {
            "is_static": true,
            "is_condition": true
          },
          "class": "Credits",
          "id": "0436",
          "member": "AreFinished",
          "name": "ARE_CREDITS_FINISHED",
          "num_params": 0,
          "short_desc": "Returns true if the credits have finished"
        },
        {
          "id": "0437",
          "name": "CREATE_SINGLE_PARTICLE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0438",
          "name": "SET_CHAR_IGNORE_LEVEL_TRANSITIONS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0439",
          "name": "GET_CHASE_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "043A",
          "name": "START_BOAT_FOAM_ANIMATION",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "043B",
          "name": "UPDATE_BOAT_FOAM_ANIMATION",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Audio",
          "id": "043C",
          "member": "SetMusicDoesFade",
          "name": "SET_MUSIC_DOES_FADE",
          "num_params": 1,
          "short_desc": "Sets whether sounds should fade along with the screen"
        },
        {
          "id": "043D",
          "name": "SET_INTRO_IS_PLAYING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "043E",
          "name": "SET_PLAYER_HOOKER",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "043F",
          "name": "PLAY_END_OF_GAME_TUNE",
          "num_params": 0,
          "short_desc": "Plays the theme tune",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0440",
          "name": "STOP_END_OF_GAME_TUNE",
          "num_params": 0,
          "short_desc": "Stops the theme tune",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "modelId",
              "type": "model_vehicle",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "0441",
          "member": "GetModel",
          "name": "GET_CAR_MODEL",
          "num_params": 2,
          "short_desc": "Returns the car's model id"
        },
        {
          "id": "0442",
          "name": "IS_PLAYER_SITTING_IN_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0443",
          "name": "IS_PLAYER_SITTING_IN_ANY_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0444",
          "name": "SET_SCRIPT_FIRE_AUDIO",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "id": "0445",
          "member": "AreAnyCarCheatsActivated",
          "name": "ARE_ANY_CAR_CHEATS_ACTIVATED",
          "num_params": 0,
          "short_desc": "Returns true if the player has used any of the cheats"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0446",
          "member": "SetSuffersCriticalHits",
          "name": "SET_CHAR_SUFFERS_CRITICAL_HITS",
          "num_params": 2,
          "short_desc": "Sets whether the specified character is immune to headshots"
        },
        {
          "id": "0447",
          "name": "IS_PLAYER_LIFTING_A_PHONE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0448",
          "member": "IsSittingInCar",
          "name": "IS_CHAR_SITTING_IN_CAR",
          "num_params": 2,
          "short_desc": "Returns true if the character is sitting in the specified vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0449",
          "member": "IsSittingInAnyCar",
          "name": "IS_CHAR_SITTING_IN_ANY_CAR",
          "num_params": 1,
          "short_desc": "Returns true if the character is sitting in any vehicle"
        },
        {
          "id": "044A",
          "name": "IS_PLAYER_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "044B",
          "member": "IsOnFoot",
          "name": "IS_CHAR_ON_FOOT",
          "num_params": 1,
          "short_desc": "Returns true if the character is on foot, and not occupying a vehicle"
        },
        {
          "id": "044C",
          "name": "LOAD_COLLISION_WITH_SCREEN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "044D",
          "name": "LOAD_SPLASH_SCREEN",
          "num_params": 0,
          "short_desc": "Loads the specified splash screen",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "044E",
          "name": "SET_CAR_IGNORE_LEVEL_TRANSITIONS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "044F",
          "name": "MAKE_CRAIGS_CAR_A_BIT_STRONGER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0450",
          "name": "SET_JAMES_CAR_ON_PATH_TO_PLAYER",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0451",
          "name": "LOAD_END_OF_GAME_TUNE",
          "num_params": 0,
          "short_desc": "Loads the end of game music",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0452",
          "name": "ENABLE_PLAYER_CONTROL_CAMERA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Object",
          "id": "0453",
          "member": "SetRotation",
          "name": "SET_OBJECT_ROTATION",
          "num_params": 4,
          "short_desc": "Sets the object rotation along X, Y and Z axis"
        },
        {
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0454",
          "member": "GetDebugCoordinates",
          "name": "GET_DEBUG_CAMERA_COORDINATES",
          "num_params": 3,
          "short_desc": "Returns the debug camera position"
        },
        {
          "id": "0455",
          "name": "GET_DEBUG_CAMERA_FRONT_VECTOR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0456",
          "name": "IS_PLAYER_TARGETTING_ANY_CHAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0457",
          "member": "IsTargettingChar",
          "name": "IS_PLAYER_TARGETTING_CHAR",
          "num_params": 2,
          "short_desc": "Returns true if the player is aiming at the specified character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "handle",
              "type": "Object"
            }
          ],
          "id": "0458",
          "name": "IS_PLAYER_TARGETTING_OBJECT",
          "num_params": 2,
          "short_desc": "Returns true if the player is aiming at the specified object",
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "member": "IsTargettingObject"
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "attrs": {
            "is_keyword": true
          },
          "id": "0459",
          "name": "TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME",
          "num_params": 1,
          "short_desc": "Ends any script whose name (03A4) matches the given string"
        },
        {
          "input": [
            {
              "name": "offsetLeft",
              "type": "float"
            },
            {
              "name": "offsetTop",
              "type": "float"
            },
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "045A",
          "member": "DisplayWithNumber",
          "name": "DISPLAY_TEXT_WITH_NUMBER",
          "num_params": 4,
          "short_desc": "Draws text with one number"
        },
        {
          "input": [
            {
              "name": "offsetLeft",
              "type": "float"
            },
            {
              "name": "offsetTop",
              "type": "float"
            },
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "045B",
          "member": "DisplayWith2Numbers",
          "name": "DISPLAY_TEXT_WITH_2_NUMBERS",
          "num_params": 5,
          "short_desc": "Draws text with two numbers"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Mission",
          "id": "045C",
          "member": "Fail",
          "name": "FAIL_CURRENT_MISSION",
          "num_params": 0,
          "short_desc": "Terminates the active mission by executing its mission cleanup routine"
        },
        {
          "id": "045D",
          "name": "GET_CLOSEST_OBJECT_OF_TYPE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "045E",
          "name": "PLACE_OBJECT_RELATIVE_TO_OBJECT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "045F",
          "name": "SET_ALL_OCCUPANTS_OF_CAR_LEAVE_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "_p1",
              "type": "float"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0460",
          "member": "SetInterpolationParameters",
          "name": "SET_INTERPOLATION_PARAMETERS",
          "num_params": 2,
          "short_desc": "Sets how long the camera transition will last"
        },
        {
          "id": "0461",
          "name": "GET_CLOSEST_CAR_NODE_WITH_HEADING_TOWARDS_POINT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0462",
          "name": "GET_CLOSEST_CAR_NODE_WITH_HEADING_AWAY_POINT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0463",
          "member": "GetDebugPointAt",
          "name": "GET_DEBUG_CAMERA_POINT_AT",
          "num_params": 3,
          "short_desc": "Stores the location the debug camera is pointing to"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "position",
              "type": "int"
            },
            {
              "name": "angleLimit",
              "type": "float"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "class": "Char",
          "id": "0464",
          "member": "AttachToCar",
          "name": "ATTACH_CHAR_TO_CAR",
          "num_params": 8,
          "short_desc": "Puts character into a turret on the vehicle, allowing them to shoot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0465",
          "member": "DetachFromCar",
          "name": "DETACH_CHAR_FROM_CAR",
          "num_params": 1,
          "short_desc": "Takes the character out of turret mode (0464)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0466",
          "name": "SET_CAR_STAY_IN_FAST_LANE",
          "num_params": 2,
          "short_desc": "",
          "class": "Car",
          "member": "SetStayInFastLane"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0467",
          "member": "ClearLastWeaponDamage",
          "name": "CLEAR_CHAR_LAST_WEAPON_DAMAGE",
          "num_params": 1,
          "short_desc": "Clears the character's last weapon damage (see 031D)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "0468",
          "member": "ClearLastWeaponDamage",
          "name": "CLEAR_CAR_LAST_WEAPON_DAMAGE",
          "num_params": 1,
          "short_desc": "Clears the vehicle's last weapon damage (see 031E)"
        },
        {
          "id": "0469",
          "name": "GET_RANDOM_COP_IN_AREA",
          "num_params": 0,
          "short_desc": "Gets a random law enforcement ped of any of the specified types in the 2D area",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "046A",
          "name": "GET_RANDOM_COP_IN_ZONE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "046B",
          "name": "SET_CHAR_OBJ_FLEE_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "046C",
          "member": "GetDriver",
          "name": "GET_DRIVER_OF_CAR",
          "num_params": 2,
          "short_desc": "Returns the car's driver handle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "number",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "046D",
          "member": "GetNumberOfFollowers",
          "name": "GET_NUMBER_OF_FOLLOWERS",
          "num_params": 2,
          "short_desc": "Returns the number of members which are in a group of the character (01DE)"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Rc",
          "id": "046E",
          "member": "GiveModelToPlayer",
          "name": "GIVE_REMOTE_CONTROLLED_MODEL_TO_PLAYER",
          "num_params": 6,
          "short_desc": "Puts the player in control of a remote-control vehicle"
        },
        {
          "id": "046F",
          "name": "GET_CURRENT_PLAYER_WEAPON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "weaponType",
              "type": "WeaponType",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "0470",
          "member": "GetCurrentWeapon",
          "name": "GET_CURRENT_CHAR_WEAPON",
          "num_params": 2,
          "short_desc": "Returns the type of weapon that the character is currently holding"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0471",
          "member": "LocateAnyMeansObject2D",
          "name": "LOCATE_CHAR_ANY_MEANS_OBJECT_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the object"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0472",
          "member": "LocateOnFootObject2D",
          "name": "LOCATE_CHAR_ON_FOOT_OBJECT_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the object on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0473",
          "member": "LocateInCarObject2D",
          "name": "LOCATE_CHAR_IN_CAR_OBJECT_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the object in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0474",
          "member": "LocateAnyMeansObject3D",
          "name": "LOCATE_CHAR_ANY_MEANS_OBJECT_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the object"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0475",
          "member": "LocateOnFootObject3D",
          "name": "LOCATE_CHAR_ON_FOOT_OBJECT_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the object on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0476",
          "member": "LocateInCarObject3D",
          "name": "LOCATE_CHAR_IN_CAR_OBJECT_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the object in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "actionId",
              "type": "TempAction"
            },
            {
              "name": "timeInMs",
              "type": "int"
            }
          ],
          "class": "Car",
          "id": "0477",
          "member": "SetTempAction",
          "name": "SET_CAR_TEMP_ACTION",
          "num_params": 3,
          "short_desc": "Makes the AI driver perform the action in the vehicle for the specified period of time"
        },
        {
          "id": "0478",
          "name": "SET_CAR_HANDBRAKE_TURN_RIGHT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0479",
          "name": "SET_CAR_HANDBRAKE_STOP",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "047A",
          "member": "IsOnAnyBike",
          "name": "IS_CHAR_ON_ANY_BIKE",
          "num_params": 1,
          "short_desc": "Returns true if the character is riding a bike"
        },
        {
          "id": "047B",
          "name": "LOCATE_SNIPER_BULLET_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "047C",
          "name": "LOCATE_SNIPER_BULLET_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "047D",
          "name": "GET_NUMBER_OF_SEATS_IN_MODEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "047E",
          "name": "IS_PLAYER_ON_ANY_BIKE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "047F",
          "name": "IS_CHAR_LYING_DOWN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "pedType",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0480",
          "member": "CanSeeDeadChar",
          "name": "CAN_CHAR_SEE_DEAD_CHAR",
          "num_params": 2,
          "short_desc": "Returns true if the character sees a dead body of the given type"
        },
        {
          "id": "0481",
          "name": "SET_ENTER_CAR_RANGE_MULTIPLIER",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0482",
          "name": "SET_THREAT_REACTION_RANGE_MULTIPLIER",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0483",
          "name": "SET_CHAR_CEASE_ATTACK_TIMER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "player",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "car",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Rc",
          "id": "0484",
          "member": "GetCar",
          "name": "GET_REMOTE_CONTROLLED_CAR",
          "num_params": 2,
          "short_desc": "Returns the player's radio-controlled vehicle"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "id": "0485",
          "member": "IsPcVersion",
          "name": "IS_PC_VERSION",
          "num_params": 0,
          "short_desc": "Returns true on PC versions of the game"
        },
        {
          "id": "0486",
          "name": "REPLAY",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0487",
          "name": "IS_REPLAY_PLAYING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "id": "0488",
          "member": "IsModelAvailable",
          "name": "IS_MODEL_AVAILABLE",
          "num_params": 1,
          "short_desc": "Returns true if the specified model exists in the loaded "
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0489",
          "member": "ShutUp",
          "name": "SHUT_CHAR_UP",
          "num_params": 2,
          "short_desc": "Sets the character's ability to talk"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Rc",
          "id": "048A",
          "member": "SetEnableDetonate",
          "name": "SET_ENABLE_RC_DETONATE",
          "num_params": 1,
          "short_desc": "Enables a remote-control vehicle detonation"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "routeSeed",
              "type": "int"
            }
          ],
          "class": "Car",
          "id": "048B",
          "member": "SetRandomRouteSeed",
          "name": "SET_CAR_RANDOM_ROUTE_SEED",
          "num_params": 2,
          "short_desc": "Sets the car on a specific route"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "048C",
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "member": "IsAnyPickupAtCoords",
          "name": "IS_ANY_PICKUP_AT_COORDS",
          "num_params": 3,
          "short_desc": "Returns true if the pickup at the specified coordinates is available to be picked up"
        },
        {
          "id": "048D",
          "name": "GET_FIRST_PICKUP_COORDS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "048E",
          "name": "GET_NEXT_PICKUP_COORDS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "048F",
          "member": "RemoveAllWeapons",
          "name": "REMOVE_ALL_CHAR_WEAPONS",
          "num_params": 1,
          "short_desc": "Removes the characters weapons"
        },
        {
          "id": "0490",
          "name": "HAS_PLAYER_GOT_WEAPON",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "id": "0491",
          "name": "HAS_CHAR_GOT_WEAPON",
          "num_params": 2,
          "short_desc": "Returns true if the character has the specified weapon",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "HasGotWeapon"
        },
        {
          "id": "0492",
          "name": "IS_PLAYER_FACING_CHAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0493",
          "name": "SET_TANK_DETONATE_CARS",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "pad",
              "type": "Pad"
            }
          ],
          "output": [
            {
              "name": "leftStickX",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "leftStickY",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "rightStickX",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "rightStickY",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Pad",
          "id": "0494",
          "member": "GetPositionOfAnalogueSticks",
          "name": "GET_POSITION_OF_ANALOGUE_STICKS",
          "num_params": 5,
          "short_desc": "Returns the offset of the specified Left/Right, Up/Down, Look Left/Look Right and Look Up/Look Down keys"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "0495",
          "member": "IsOnFire",
          "name": "IS_CAR_ON_FIRE",
          "num_params": 1,
          "short_desc": "Returns true if the car is burning"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "tireId",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "0496",
          "member": "IsTireBurst",
          "name": "IS_CAR_TYRE_BURST",
          "num_params": 2,
          "short_desc": "Returns true if a given tire on the car is deflated"
        },
        {
          "id": "0497",
          "name": "SET_CAR_DRIVE_STRAIGHT_AHEAD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0498",
          "name": "SET_CAR_WAIT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0499",
          "name": "IS_PLAYER_STANDING_ON_A_VEHICLE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "049A",
          "name": "IS_PLAYER_FOOT_DOWN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "049B",
          "name": "IS_CHAR_FOOT_DOWN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "049C",
          "name": "INITIALISE_OBJECT_PATH",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "049D",
          "name": "START_OBJECT_ON_PATH",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "049E",
          "name": "SET_OBJECT_PATH_SPEED",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "049F",
          "name": "SET_OBJECT_PATH_POSITION",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "04A0",
          "name": "GET_OBJECT_DISTANCE_ALONG_PATH",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "04A1",
          "name": "CLEAR_OBJECT_PATH",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "minAltitude",
              "type": "float"
            },
            {
              "name": "maxAltitude",
              "type": "float"
            }
          ],
          "id": "04A2",
          "name": "HELI_GOTO_COORDS",
          "num_params": 6,
          "short_desc": "Makes the helicopter fly to the specified location, keeping a specific Z height/altitude",
          "class": "Heli",
          "member": "GotoCoords"
        },
        {
          "attrs": {
            "is_condition": true
          },
          "id": "04A3",
          "input": [
            {
              "name": "_p1",
              "type": "int"
            },
            {
              "name": "_p2",
              "type": "int"
            }
          ],
          "name": "IS_INT_VAR_EQUAL_TO_CONSTANT",
          "num_params": 2,
          "short_desc": "Returns true if the value of the variable is equal to the constant"
        },
        {
          "attrs": {
            "is_condition": true
          },
          "id": "04A4",
          "input": [
            {
              "name": "_p1",
              "type": "int"
            },
            {
              "name": "_p2",
              "type": "int"
            }
          ],
          "name": "IS_INT_LVAR_EQUAL_TO_CONSTANT",
          "num_params": 2,
          "short_desc": "Returns true if the first local variable is equivalent to the second"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "04A5",
          "member": "GetDeadCharPickupCoords",
          "name": "GET_DEAD_CHAR_PICKUP_COORDS",
          "num_params": 4,
          "short_desc": "Returns appropriate coordinates for creating a pickup by a dead character"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "revenueLimit",
              "type": "int"
            },
            {
              "name": "revenueRate",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Pickup",
          "id": "04A6",
          "member": "CreateProtection",
          "name": "CREATE_PROTECTION_PICKUP",
          "num_params": 6,
          "short_desc": "Creates an asset revenue pickup"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "id": "04A7",
          "name": "IS_CHAR_IN_ANY_BOAT",
          "num_params": 1,
          "short_desc": "Returns true if the character is driving a boat",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsInAnyBoat"
        },
        {
          "id": "04A8",
          "name": "IS_PLAYER_IN_ANY_BOAT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "id": "04A9",
          "name": "IS_CHAR_IN_ANY_HELI",
          "num_params": 1,
          "short_desc": "Returns true if the character is flying a helicopter",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsInAnyHeli"
        },
        {
          "id": "04AA",
          "name": "IS_PLAYER_IN_ANY_HELI",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "id": "04AB",
          "name": "IS_CHAR_IN_ANY_PLANE",
          "num_params": 1,
          "short_desc": "Returns true if the character is in a plane",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsInAnyPlane"
        },
        {
          "id": "04AC",
          "name": "IS_PLAYER_IN_ANY_PLANE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "04AD",
          "member": "IsInWater",
          "name": "IS_CHAR_IN_WATER",
          "num_params": 1,
          "short_desc": "Returns true if the character is in water"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponSlotId",
              "type": "WeaponSlot"
            }
          ],
          "output": [
            {
              "name": "weaponType",
              "type": "WeaponType",
              "source": "var_any"
            },
            {
              "name": "weaponAmmo",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "weaponModel",
              "type": "model_object",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "04B8",
          "member": "GetWeaponInSlot",
          "name": "GET_CHAR_WEAPON_IN_SLOT",
          "num_params": 5,
          "short_desc": "Returns the weapon type, ammo and model from the specified slot"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "minDist",
              "type": "float"
            },
            {
              "name": "maxDist",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "node1X",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "node1Y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "node1Z",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "node2X",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "node2Y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "node2Z",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "angle",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "04B9",
          "member": "GetClosestStraightRoad",
          "name": "GET_CLOSEST_STRAIGHT_ROAD",
          "num_params": 12,
          "short_desc": "Gets two closest path nodes within the specified distance range"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "forwardSpeed",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "04BA",
          "member": "SetForwardSpeed",
          "name": "SET_CAR_FORWARD_SPEED",
          "num_params": 2,
          "short_desc": "Sets the speed of the car"
        },
        {
          "input": [
            {
              "name": "areaId",
              "type": "Interior"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "04BB",
          "member": "SetAreaVisible",
          "name": "SET_AREA_VISIBLE",
          "num_params": 1,
          "short_desc": "Sets the visibility of an interior area"
        },
        {
          "id": "04BC",
          "name": "SET_CUTSCENE_ANIM_TO_LOOP",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "04BD",
          "member": "MarkAsConvoyCar",
          "name": "MARK_CAR_AS_CONVOY_CAR",
          "num_params": 2,
          "short_desc": "Marks the car as being part of a convoy, which seems to follow a path set by 0994"
        },
        {
          "id": "04BE",
          "name": "RESET_HAVOC_CAUSED_BY_PLAYER",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "04BF",
          "name": "GET_HAVOC_CAUSED_BY_PLAYER",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "type",
              "type": "int"
            }
          ],
          "id": "04C0",
          "name": "CREATE_SCRIPT_ROADBLOCK",
          "num_params": 7,
          "short_desc": "Creates a roadblock in the specified area with the specified type",
          "class": "World",
          "member": "CreateScriptRoadblock",
          "attrs": {
            "is_static": true
          }
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "04C1",
          "member": "ClearAllScriptRoadblocks",
          "name": "CLEAR_ALL_SCRIPT_ROADBLOCKS",
          "num_params": 0,
          "short_desc": "Removes references to all created roadblocks, freeing game memory"
        },
        {
          "id": "04C2",
          "name": "SET_CHAR_OBJ_WALK_TO_CHAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "04C3",
          "name": "IS_PICKUP_IN_ZONE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "04C4",
          "member": "GetOffsetInWorldCoords",
          "name": "GET_OFFSET_FROM_CHAR_IN_WORLD_COORDS",
          "num_params": 7,
          "short_desc": "Returns the coordinates of the character, with an offset"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "04C5",
          "member": "HasBeenPhotographed",
          "name": "HAS_CHAR_BEEN_PHOTOGRAPHED",
          "num_params": 1,
          "short_desc": "Returns true if the character has been photographed"
        },
        {
          "id": "04C6",
          "name": "SET_CHAR_OBJ_AIM_GUN_AT_CHAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "04C7",
          "name": "SWITCH_SECURITY_CAMERA",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "id": "04C8",
          "name": "IS_CHAR_IN_FLYING_VEHICLE",
          "num_params": 1,
          "short_desc": "Returns true if the character is in a flying vehicle",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsInFlyingVehicle"
        },
        {
          "id": "04C9",
          "name": "IS_PLAYER_IN_FLYING_VEHICLE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "04CA",
          "name": "HAS_SONY_CD_BEEN_READ",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "04CB",
          "name": "GET_NUMBER_OF_SONY_CDS_READ",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "04CC",
          "name": "ADD_SHORT_RANGE_BLIP_FOR_COORD_OLD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "04CD",
          "name": "ADD_SHORT_RANGE_BLIP_FOR_COORD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "sprite",
              "type": "RadarSprite"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "04CE",
          "member": "AddShortRangeSpriteForCoord",
          "name": "ADD_SHORT_RANGE_SPRITE_BLIP_FOR_COORD",
          "num_params": 5,
          "short_desc": "Adds a sprite blip for the specified coordinates"
        },
        {
          "id": "04CF",
          "name": "ADD_MONEY_SPENT_ON_CLOTHES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            },
            {
              "name": "angle",
              "type": "float"
            }
          ],
          "class": "Heli",
          "id": "04D0",
          "member": "SetOrientation",
          "name": "SET_HELI_ORIENTATION",
          "num_params": 2,
          "short_desc": "Forces the heli rotation relative to the north"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            }
          ],
          "class": "Heli",
          "id": "04D1",
          "member": "ClearOrientation",
          "name": "CLEAR_HELI_ORIENTATION",
          "num_params": 1,
          "short_desc": "Resets the heli rotation set with 04D0"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Plane"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "minAltitude",
              "type": "float"
            },
            {
              "name": "maxAltitude",
              "type": "float"
            }
          ],
          "id": "04D2",
          "name": "PLANE_GOTO_COORDS",
          "num_params": 6,
          "short_desc": "",
          "class": "Plane",
          "member": "GotoCoords"
        },
        {
          "input": [
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "fromZ",
              "type": "float"
            },
            {
              "name": "n",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "04D3",
          "member": "GetNthClosestCarNode",
          "name": "GET_NTH_CLOSEST_CAR_NODE",
          "num_params": 7,
          "short_desc": "Gets the coordinates of the nth car path node closest to the given coordinates"
        },
        {
          "id": "04D4",
          "name": "GET_NTH_CLOSEST_CHAR_NODE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "size",
              "type": "float"
            },
            {
              "name": "coronaType",
              "type": "CoronaType"
            },
            {
              "name": "flareType",
              "type": "FlareType"
            },
            {
              "name": "r",
              "type": "int"
            },
            {
              "name": "g",
              "type": "int"
            },
            {
              "name": "b",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Fx",
          "id": "04D5",
          "member": "DrawWeaponshopCorona",
          "name": "DRAW_WEAPONSHOP_CORONA",
          "num_params": 9,
          "short_desc": "Displays a corona with the lowered draw distance at the specified coordinates"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Rc",
          "id": "04D6",
          "member": "SetEnableDetonateOnContact",
          "name": "SET_ENABLE_RC_DETONATE_ON_CONTACT",
          "num_params": 1,
          "short_desc": "Sets whether RC Bandits detonate on contact with the wheels of any four-wheeled vehicles"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "04D7",
          "member": "FreezePosition",
          "name": "FREEZE_CHAR_POSITION",
          "num_params": 2,
          "short_desc": "Sets whether the character's position remains unchanged"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "04D8",
          "member": "SetDrownsInWater",
          "name": "SET_CHAR_DROWNS_IN_WATER",
          "num_params": 2,
          "short_desc": "Controls whether the character can drown in water"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Object",
          "id": "04D9",
          "member": "SetRecordsCollisions",
          "name": "SET_OBJECT_RECORDS_COLLISIONS",
          "num_params": 2,
          "short_desc": "Enables the use of collision checking for the object"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "04DA",
          "member": "HasCollidedWithAnything",
          "name": "HAS_OBJECT_COLLIDED_WITH_ANYTHING",
          "num_params": 1,
          "short_desc": "Returns true if the object has collided"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Rc",
          "id": "04DB",
          "member": "RemoveBuggy",
          "name": "REMOVE_RC_BUGGY",
          "num_params": 0,
          "short_desc": "Exits remote-control mode"
        },
        {
          "id": "04DC",
          "name": "HAS_PHOTOGRAPH_BEEN_TAKEN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "armor",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "04DD",
          "member": "GetArmor",
          "name": "GET_CHAR_ARMOUR",
          "num_params": 2,
          "short_desc": "Returns the character's armor amount"
        },
        {
          "id": "04DE",
          "name": "SET_CHAR_ARMOUR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Heli",
          "id": "04DF",
          "member": "SetStabiliser",
          "name": "SET_HELI_STABILISER",
          "num_params": 2,
          "short_desc": "Limits the amount a helicopter can tilt"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "distance",
              "type": "int"
            }
          ],
          "class": "Car",
          "id": "04E0",
          "member": "SetStraightLineDistance",
          "name": "SET_CAR_STRAIGHT_LINE_DISTANCE",
          "num_params": 2,
          "short_desc": "Sets the minimum distance for the AI driver to start ignoring car paths and go straight to the target"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "04E1",
          "member": "PopBoot",
          "name": "POP_CAR_BOOT",
          "num_params": 1,
          "short_desc": "Opens the car's trunk and keeps it open"
        },
        {
          "id": "04E2",
          "name": "SHUT_PLAYER_UP",
          "num_params": 2,
          "short_desc": "Shuts the player up",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "mood",
              "type": "PlayerMood"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "04E3",
          "member": "SetMood",
          "name": "SET_PLAYER_MOOD",
          "num_params": 3,
          "short_desc": "Sets the players mood, affecting the dialogue spoken by the player"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "04E4",
          "member": "RequestCollision",
          "name": "REQUEST_COLLISION",
          "num_params": 2,
          "short_desc": "Reloads the area at the specified coordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "04E5",
          "member": "Locate2D",
          "name": "LOCATE_OBJECT_2D",
          "num_params": 6,
          "short_desc": "Returns true if the object is near the specified coordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "04E6",
          "member": "Locate3D",
          "name": "LOCATE_OBJECT_3D",
          "num_params": 8,
          "short_desc": "Returns true if the object is near the specified point"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "04E7",
          "member": "IsInWater",
          "name": "IS_OBJECT_IN_WATER",
          "num_params": 1,
          "short_desc": "Returns true if the object is in water"
        },
        {
          "id": "04E8",
          "name": "SET_CHAR_OBJ_STEAL_ANY_CAR_EVEN_MISSION_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "04E9",
          "member": "IsInArea2D",
          "name": "IS_OBJECT_IN_AREA_2D",
          "num_params": 6,
          "short_desc": "Returns true if object is in the specified area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "04EA",
          "member": "IsInArea3D",
          "name": "IS_OBJECT_IN_AREA_3D",
          "num_params": 8,
          "short_desc": "Returns true if the object is in the specified area"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "04EB",
          "name": "TASK_TOGGLE_DUCK",
          "num_params": 2,
          "short_desc": "Makes the character crouch",
          "class": "Task",
          "member": "ToggleDuck",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "04EC",
          "name": "SET_ZONE_CIVILIAN_CAR_INFO",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "animationFile",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "04ED",
          "member": "RequestAnimation",
          "name": "REQUEST_ANIMATION",
          "num_params": 1,
          "short_desc": "Loads the specified IFP File"
        },
        {
          "input": [
            {
              "name": "animationFile",
              "type": "string"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "id": "04EE",
          "member": "HasAnimationLoaded",
          "name": "HAS_ANIMATION_LOADED",
          "num_params": 1,
          "short_desc": "Returns true if the specified IFP file is loaded"
        },
        {
          "input": [
            {
              "name": "animationFile",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "04EF",
          "member": "RemoveAnimation",
          "name": "REMOVE_ANIMATION",
          "num_params": 1,
          "short_desc": "Releases the specified IFP file, freeing game memory"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "04F0",
          "member": "IsWaitingForWorldCollision",
          "name": "IS_CHAR_WAITING_FOR_WORLD_COLLISION",
          "num_params": 1,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "04F1",
          "member": "IsWaitingForWorldCollision",
          "name": "IS_CAR_WAITING_FOR_WORLD_COLLISION",
          "num_params": 1,
          "short_desc": ""
        },
        {
          "id": "04F2",
          "name": "IS_OBJECT_WAITING_FOR_WORLD_COLLISION",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "04F3",
          "name": "SET_CHAR_SHUFFLE_INTO_DRIVERS_SEAT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Object"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "orientation",
              "type": "int"
            },
            {
              "name": "angleLimit",
              "type": "float"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "class": "Char",
          "id": "04F4",
          "member": "AttachToObject",
          "name": "ATTACH_CHAR_TO_OBJECT",
          "num_params": 8,
          "short_desc": "Attaches the character to the specified object, in turret mode"
        },
        {
          "id": "04F5",
          "name": "SET_CHAR_AS_PLAYER_FRIEND",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "04F6",
          "name": "DISPLAY_NTH_ONSCREEN_COUNTER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "counter",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "display",
              "type": "CounterDisplay"
            },
            {
              "name": "slot",
              "type": "int"
            },
            {
              "name": "text",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "04F7",
          "member": "DisplayNthCounterWithString",
          "name": "DISPLAY_NTH_ONSCREEN_COUNTER_WITH_STRING",
          "num_params": 4,
          "short_desc": "Displays an onscreen counter with the text in the specified slot, either shown in numbers or as a bar"
        },
        {
          "input": [
            {
              "name": "type",
              "type": "SetPieceType"
            },
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "toX",
              "type": "float"
            },
            {
              "name": "toY",
              "type": "float"
            },
            {
              "name": "spawnPoliceAAtX",
              "type": "float"
            },
            {
              "name": "spawnPoliceAAtY",
              "type": "float"
            },
            {
              "name": "headedTowardsAAtX",
              "type": "float"
            },
            {
              "name": "headedTowardsAAtY",
              "type": "float"
            },
            {
              "name": "spawnPoliceBAtX",
              "type": "float"
            },
            {
              "name": "spawnPoliceBAtY",
              "type": "float"
            },
            {
              "name": "headedTowardsBAtX",
              "type": "float"
            },
            {
              "name": "headedTowardsBAtY",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "04F8",
          "member": "AddSetPiece",
          "name": "ADD_SET_PIECE",
          "num_params": 13,
          "short_desc": "Creates a trigger zone for police to appear during chases"
        },
        {
          "input": [
            {
              "name": "color",
              "type": "int"
            },
            {
              "name": "fade",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "04F9",
          "member": "SetExtraColors",
          "name": "SET_EXTRA_COLOURS",
          "num_params": 2,
          "short_desc": "Sets the extra color of the sky"
        },
        {
          "input": [
            {
              "name": "withFade",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "04FA",
          "member": "ClearExtraColors",
          "name": "CLEAR_EXTRA_COLOURS",
          "num_params": 1,
          "short_desc": "Clears the extra color of the sky"
        },
        {
          "id": "04FB",
          "name": "CLOSE_CAR_BOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "twoWheelsTime",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "twoWheelsDistance",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "wheelieTime",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "wheelieDistance",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "stoppieTime",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "stoppieDistance",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "04FC",
          "member": "GetWheelieStats",
          "name": "GET_WHEELIE_STATS",
          "num_params": 7,
          "short_desc": "Returns the stats of the most recent wheelie or stoppie attempt"
        },
        {
          "id": "04FD",
          "name": "DISARM_CHAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "tireId",
              "type": "int"
            }
          ],
          "class": "Car",
          "id": "04FE",
          "member": "BurstTire",
          "name": "BURST_CAR_TYRE",
          "num_params": 2,
          "short_desc": "Deflates the car's tire"
        },
        {
          "id": "04FF",
          "name": "IS_CHAR_OBJ_NO_OBJ",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "modelName",
              "type": "string"
            },
            {
              "name": "bodyPart",
              "type": "BodyPart"
            }
          ],
          "id": "0500",
          "name": "IS_PLAYER_WEARING",
          "num_params": 3,
          "short_desc": "Returns true if the player's bodypart has the specified model (0784 or 087B) ",
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "member": "IsWearing"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "0501",
          "member": "SetCanDoDriveBy",
          "name": "SET_PLAYER_CAN_DO_DRIVE_BY",
          "num_params": 2,
          "short_desc": "Sets the players driveby mode"
        },
        {
          "id": "0502",
          "name": "SET_CHAR_OBJ_SPRINT_TO_COORD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "pedType",
              "type": "PedType"
            },
            {
              "name": "modelId",
              "type": "model_char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "id": "0503",
          "name": "CREATE_SWAT_ROPE",
          "num_params": 6,
          "short_desc": "Creates a character descending from a rope",
          "class": "Char",
          "member": "CreateSwatRope",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "id": "0504",
          "name": "SET_FIRST_PERSON_CONTROL_CAMERA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0505",
          "name": "GET_NEAREST_TYRE_TO_POINT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "_unused",
              "type": "model_vehicle"
            },
            {
              "name": "component1",
              "type": "int"
            },
            {
              "name": "component2",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Car",
          "id": "0506",
          "member": "SetModelComponents",
          "name": "SET_CAR_MODEL_COMPONENTS",
          "num_params": 3,
          "short_desc": "Sets the variation of the next car to be created"
        },
        {
          "id": "0507",
          "name": "SWITCH_LIFT_CAMERA",
          "num_params": 0,
          "short_desc": "Applies a camera overlay",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "0508",
          "member": "CloseAllDoors",
          "name": "CLOSE_ALL_CAR_DOORS",
          "num_params": 1,
          "short_desc": "Closes all car doors, hoods and boots"
        },
        {
          "input": [
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "toX",
              "type": "float"
            },
            {
              "name": "toZ",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "distance",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Math",
          "id": "0509",
          "member": "GetDistanceBetweenCoords2D",
          "name": "GET_DISTANCE_BETWEEN_COORDS_2D",
          "num_params": 5,
          "short_desc": "Gets the distance between two points"
        },
        {
          "input": [
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "fromZ",
              "type": "float"
            },
            {
              "name": "toX",
              "type": "float"
            },
            {
              "name": "toY",
              "type": "float"
            },
            {
              "name": "toZ",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "distance",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Math",
          "id": "050A",
          "member": "GetDistanceBetweenCoords3D",
          "name": "GET_DISTANCE_BETWEEN_COORDS_3D",
          "num_params": 7,
          "short_desc": "Gets the distance between two points"
        },
        {
          "id": "050B",
          "name": "POP_CAR_BOOT_USING_PHYSICS",
          "num_params": 0,
          "short_desc": "Opens the trunk/boot door component of the vehicle",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "050C",
          "name": "SET_FIRST_PERSON_WEAPON_CAMERA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "050D",
          "name": "IS_CHAR_LEAVING_VEHICLE_TO_DIE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "handle",
              "type": "Car"
            }
          ],
          "class": "Object",
          "id": "050E",
          "member": "SortOutCollisionWithCar",
          "name": "SORT_OUT_OBJECT_COLLISION_WITH_CAR",
          "num_params": 2,
          "short_desc": "Makes the specified car have no collision with the specified object"
        },
        {
          "output": [
            {
              "name": "level",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "050F",
          "name": "GET_MAX_WANTED_LEVEL",
          "num_params": 1,
          "short_desc": "Gets the maximum wanted level the player can receive",
          "class": "Game",
          "member": "GetMaxWantedLevel",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0510",
          "name": "IS_CHAR_WANDER_PATH_CLEAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0511",
          "name": "PRINT_HELP_WITH_NUMBER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0512",
          "member": "PrintHelpForever",
          "name": "PRINT_HELP_FOREVER",
          "num_params": 1,
          "short_desc": "Shows a text box which stays on screen until it is removed by another command"
        },
        {
          "input": [
            {
              "name": "gxt",
              "type": "gxt_key"
            },
            {
              "name": "number",
              "type": "int"
            }
          ],
          "id": "0513",
          "name": "PRINT_HELP_FOREVER_WITH_NUMBER",
          "num_params": 2,
          "short_desc": "Shows a text box with one number",
          "class": "Text",
          "member": "PrintHelpForeverWithNumber",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0514",
          "name": "SET_CHAR_CAN_BE_DAMAGED_BY_MEMBERS_OF_GANG",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0515",
          "name": "LOAD_AND_LAUNCH_MISSION_EXCLUSIVE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0516",
          "name": "IS_MISSION_AUDIO_PLAYING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "message",
              "type": "gxt_key"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Pickup",
          "id": "0517",
          "member": "CreateLockedProperty",
          "name": "CREATE_LOCKED_PROPERTY_PICKUP",
          "num_params": 5,
          "short_desc": "Creates an asset icon for an asset that is not for sale"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "price",
              "type": "int"
            },
            {
              "name": "message",
              "type": "gxt_key"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Pickup",
          "id": "0518",
          "member": "CreateForSaleProperty",
          "name": "CREATE_FORSALE_PROPERTY_PICKUP",
          "num_params": 6,
          "short_desc": "Creates an asset pickup for an asset which can be bought"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0519",
          "member": "FreezePosition",
          "name": "FREEZE_CAR_POSITION",
          "num_params": 2,
          "short_desc": "Locks the vehicle's position"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "051A",
          "member": "HasBeenDamagedByChar",
          "name": "HAS_CHAR_BEEN_DAMAGED_BY_CHAR",
          "num_params": 2,
          "short_desc": "Returns true if the character has been hurt by the other character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Car"
            }
          ],
          "id": "051B",
          "name": "HAS_CHAR_BEEN_DAMAGED_BY_CAR",
          "num_params": 2,
          "short_desc": "Returns true if the actor has been hurt by the specified vehicle",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "HasBeenDamagedByCar"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "051C",
          "name": "HAS_CAR_BEEN_DAMAGED_BY_CHAR",
          "num_params": 2,
          "short_desc": "Returns true if the car has been damaged by the specified actor",
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "HasBeenDamagedByChar"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "other",
              "type": "Car"
            }
          ],
          "id": "051D",
          "name": "HAS_CAR_BEEN_DAMAGED_BY_CAR",
          "num_params": 2,
          "short_desc": "Returns true if the vehicle has been damaged by another specified vehicle",
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "HasBeenDamagedByCar"
        },
        {
          "output": [
            {
              "name": "channel",
              "type": "RadioChannel",
              "source": "var_any"
            }
          ],
          "id": "051E",
          "name": "GET_RADIO_CHANNEL",
          "num_params": 1,
          "short_desc": "Returns the current radio station that is being played",
          "class": "Audio",
          "member": "GetRadioChannel",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "051F",
          "name": "DISPLAY_TEXT_WITH_3_NUMBERS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0520",
          "name": "IS_CAR_DROWNING_IN_WATER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0521",
          "name": "IS_CHAR_DROWNING_IN_WATER",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0522",
          "name": "DISABLE_CUTSCENE_SHADOWS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0523",
          "name": "HAS_GLASS_BEEN_SHATTERED_NEARBY",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0524",
          "name": "ATTACH_CUTSCENE_OBJECT_TO_BONE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0525",
          "name": "ATTACH_CUTSCENE_OBJECT_TO_COMPONENT",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0526",
          "member": "SetStayInCarWhenJacked",
          "name": "SET_CHAR_STAY_IN_CAR_WHEN_JACKED",
          "num_params": 2,
          "short_desc": "Makes the character stay in the vehicle when it is jacked (characters let themselves get \"kidnapped\")"
        },
        {
          "id": "0527",
          "name": "IS_MISSION_AUDIO_LOADING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0528",
          "name": "ADD_MONEY_SPENT_ON_WEAPONS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0529",
          "name": "ADD_MONEY_SPENT_ON_PROPERTY",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "052A",
          "name": "ADD_MONEY_SPENT_ON_AUTO_PAINTING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "052B",
          "name": "SET_CHAR_ANSWERING_MOBILE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "intensity",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "052C",
          "member": "SetDrunkenness",
          "name": "SET_PLAYER_DRUNKENNESS",
          "num_params": 2,
          "short_desc": "Makes the camera start moving around in a swirling motion with the specified intensity as if drunk"
        },
        {
          "id": "052D",
          "name": "GET_PLAYER_DRUNKENNESS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "052E",
          "name": "SET_PLAYER_DRUG_LEVEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "052F",
          "name": "GET_PLAYER_DRUG_LEVEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0530",
          "name": "ADD_LOAN_SHARK_VISITS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0531",
          "name": "ADD_STORES_KNOCKED_OFF",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0532",
          "name": "ADD_MOVIE_STUNTS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0533",
          "name": "ADD_NUMBER_OF_ASSASSINATIONS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0534",
          "name": "ADD_PIZZAS_DELIVERED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0535",
          "name": "ADD_GARBAGE_PICKUPS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0536",
          "name": "ADD_ICE_CREAMS_SOLD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0537",
          "name": "SET_TOP_SHOOTING_RANGE_SCORE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0538",
          "name": "ADD_SHOOTING_RANGE_RANK",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0539",
          "name": "ADD_MONEY_SPENT_ON_GAMBLING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "053A",
          "name": "ADD_MONEY_WON_ON_GAMBLING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "053B",
          "name": "SET_LARGEST_GAMBLING_WIN",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "053C",
          "name": "SET_CHAR_IN_PLAYERS_GROUP_CAN_FIGHT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "053D",
          "name": "CLEAR_CHAR_WAIT_STATE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "053E",
          "member": "GetRandomCarOfTypeInAreaNoSave",
          "name": "GET_RANDOM_CAR_OF_TYPE_IN_AREA_NO_SAVE",
          "num_params": 6,
          "short_desc": "Loops through the pool of vehicles to retrieve one that matches the specified model in the specified 2D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "053F",
          "member": "SetCanBurstTires",
          "name": "SET_CAN_BURST_CAR_TYRES",
          "num_params": 2,
          "short_desc": "Sets whether the car's tires can be deflated"
        },
        {
          "id": "0540",
          "name": "SET_PLAYER_AUTO_AIM",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            }
          ],
          "class": "Heli",
          "id": "0541",
          "member": "FireHunterGun",
          "name": "FIRE_HUNTER_GUN",
          "num_params": 1,
          "short_desc": "Makes the Hunter helicopter fire cannon gun"
        },
        {
          "id": "0542",
          "name": "SET_PROPERTY_AS_OWNED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0543",
          "name": "ADD_BLOOD_RING_KILLS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0544",
          "name": "SET_LONGEST_TIME_IN_BLOOD_RING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0545",
          "name": "REMOVE_EVERYTHING_FOR_HUGE_CUTSCENE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0546",
          "name": "IS_PLAYER_TOUCHING_VEHICLE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Car"
            }
          ],
          "id": "0547",
          "name": "IS_CHAR_TOUCHING_VEHICLE",
          "num_params": 2,
          "short_desc": "Returns true if the character is colliding with a car",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsTouchingVehicle"
        },
        {
          "id": "0548",
          "name": "CHECK_FOR_PED_MODEL_AROUND_PLAYER",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0549",
          "name": "CLEAR_CHAR_FOLLOW_PATH",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "054A",
          "member": "SetCanBeShotInVehicle",
          "name": "SET_CHAR_CAN_BE_SHOT_IN_VEHICLE",
          "num_params": 2,
          "short_desc": "Makes the character immune to a damage while in a vehicle"
        },
        {
          "id": "054B",
          "name": "ATTACH_CUTSCENE_OBJECT_TO_VEHICLE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "tableName",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "054C",
          "member": "LoadMissionText",
          "name": "LOAD_MISSION_TEXT",
          "num_params": 1,
          "short_desc": "Makes the game use GXT Entries from the specified GXT Table"
        },
        {
          "id": "054D",
          "name": "SET_TONIGHTS_EVENT",
          "num_params": 0,
          "short_desc": "Sets whether to display a message at the stadium",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "054E",
          "member": "ClearLastDamageEntity",
          "name": "CLEAR_CHAR_LAST_DAMAGE_ENTITY",
          "num_params": 1,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "054F",
          "name": "CLEAR_CAR_LAST_DAMAGE_ENTITY",
          "num_params": 1,
          "short_desc": "Clears the car's last damage entity",
          "class": "Car",
          "member": "ClearLastDamageEntity"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Object",
          "id": "0550",
          "member": "FreezePosition",
          "name": "FREEZE_OBJECT_POSITION",
          "num_params": 2,
          "short_desc": "Keeps the object in the games memory"
        },
        {
          "id": "0551",
          "name": "SET_PLAYER_HAS_MET_DEBBIE_HARRY",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0552",
          "name": "SET_RIOT_INTENSITY",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0553",
          "name": "IS_CAR_IN_ANGLED_AREA_2D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0554",
          "name": "IS_CAR_IN_ANGLED_AREA_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "id": "0555",
          "name": "REMOVE_WEAPON_FROM_CHAR",
          "num_params": 2,
          "short_desc": "Removes the weapon from the character",
          "class": "Char",
          "member": "RemoveWeapon"
        },
        {
          "id": "0556",
          "name": "SET_UP_TAXI_SHORTCUT",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0557",
          "name": "CLEAR_TAXI_SHORTCUT",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0558",
          "name": "SET_CHAR_OBJ_GOTO_CAR_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0559",
          "name": "GET_CLOSEST_WATER_NODE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "055A",
          "name": "ADD_PORN_LEAFLET_TO_RUBBISH",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "055B",
          "name": "CREATE_CLOTHES_PICKUP",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "055C",
          "name": "CHANGE_BLIP_THRESHOLD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "055D",
          "member": "MakeFireProof",
          "name": "MAKE_PLAYER_FIRE_PROOF",
          "num_params": 2,
          "short_desc": "Makes the player immune to fire"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "055E",
          "member": "IncreaseMaxHealth",
          "name": "INCREASE_PLAYER_MAX_HEALTH",
          "num_params": 2,
          "short_desc": "Increases the players maximum health by the specified amount"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "055F",
          "member": "IncreaseMaxArmor",
          "name": "INCREASE_PLAYER_MAX_ARMOUR",
          "num_params": 2,
          "short_desc": "Increases the players armor by the specified amount"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Char",
          "id": "0560",
          "member": "CreateRandomAsDriver",
          "name": "CREATE_RANDOM_CHAR_AS_DRIVER",
          "num_params": 2,
          "short_desc": "Creates a driver in the vehicle"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "seatId",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Char",
          "id": "0561",
          "member": "CreateRandomAsPassenger",
          "name": "CREATE_RANDOM_CHAR_AS_PASSENGER",
          "num_params": 3,
          "short_desc": "Creates a random character in the passenger seat of the vehicle"
        },
        {
          "id": "0562",
          "name": "SET_CHAR_IGNORE_THREATS_BEHIND_OBJECTS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "ammo",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "0563",
          "member": "EnsureHasDriveByWeapon",
          "name": "ENSURE_PLAYER_HAS_DRIVE_BY_WEAPON",
          "num_params": 2,
          "short_desc": "Sets the amount of ammo a player has during a driveby"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            }
          ],
          "class": "Heli",
          "id": "0564",
          "member": "MakeComeCrashingDown",
          "name": "MAKE_HELI_COME_CRASHING_DOWN",
          "num_params": 1,
          "short_desc": "Makes helicopter simulate crash landing, exploding on the way if high up"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "type",
              "type": "ExplosionType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Fx",
          "id": "0565",
          "member": "AddExplosionNoSound",
          "name": "ADD_EXPLOSION_NO_SOUND",
          "num_params": 4,
          "short_desc": "Creates an explosion with no sound"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "areaId",
              "type": "Interior"
            }
          ],
          "class": "Object",
          "id": "0566",
          "member": "SetAreaVisible",
          "name": "SET_OBJECT_AREA_VISIBLE",
          "num_params": 2,
          "short_desc": "Sets the visibility of the object to the specified interior"
        },
        {
          "id": "0567",
          "name": "WAS_VEHICLE_EVER_POLICE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0568",
          "member": "SetNeverTargeted",
          "name": "SET_CHAR_NEVER_TARGETED",
          "num_params": 2,
          "short_desc": "Sets whether the character won't be targeted by the autoaim system"
        },
        {
          "id": "0569",
          "name": "LOAD_UNCOMPRESSED_ANIM",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Cutscene",
          "id": "056A",
          "member": "WasSkipped",
          "name": "WAS_CUTSCENE_SKIPPED",
          "num_params": 0,
          "short_desc": "Returns true if the cutscene was skipped"
        },
        {
          "id": "056B",
          "name": "SET_CHAR_CROUCH_WHEN_THREATENED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "056C",
          "member": "IsInAnyPoliceVehicle",
          "name": "IS_CHAR_IN_ANY_POLICE_VEHICLE",
          "num_params": 1,
          "short_desc": "Returns true if the character is driving a police vehicle"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Char",
          "id": "056D",
          "member": "DoesExist",
          "name": "DOES_CHAR_EXIST",
          "num_params": 1,
          "short_desc": "Returns true if the handle is a valid character handle"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "id": "056E",
          "name": "DOES_VEHICLE_EXIST",
          "num_params": 1,
          "short_desc": "Returns true if the handle is a valid vehicle handle",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Car",
          "member": "DoesExist"
        },
        {
          "id": "056F",
          "name": "ADD_SHORT_RANGE_BLIP_FOR_CONTACT_POINT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "sprite",
              "type": "RadarSprite"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "0570",
          "member": "AddShortRangeSpriteForContactPoint",
          "name": "ADD_SHORT_RANGE_SPRITE_BLIP_FOR_CONTACT_POINT",
          "num_params": 5,
          "short_desc": "Adds a contact sprite blip for the specified coordinates"
        },
        {
          "id": "0571",
          "name": "IS_CHAR_STUCK",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "0572",
          "member": "SetAllTaxisHaveNitro",
          "name": "SET_ALL_TAXIS_HAVE_NITRO",
          "num_params": 1,
          "short_desc": "Toggles whether all taxis have nitrous"
        },
        {
          "id": "0573",
          "name": "SET_CHAR_STOP_SHOOT_DONT_SEEK_ENTITY",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0574",
          "member": "FreezePositionAndDontLoadCollision",
          "name": "FREEZE_CAR_POSITION_AND_DONT_LOAD_COLLISION",
          "num_params": 2,
          "short_desc": "Makes the car maintain its position"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0575",
          "name": "FREEZE_CHAR_POSITION_AND_DONT_LOAD_COLLISION",
          "num_params": 2,
          "short_desc": "",
          "class": "Char",
          "member": "FreezePositionAndDontLoadCollision"
        },
        {
          "id": "0576",
          "name": "FREEZE_OBJECT_POSITION_AND_DONT_LOAD_COLLISION",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0577",
          "name": "SET_FADE_AND_JUMPCUT_AFTER_RC_EXPLOSION",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0578",
          "name": "REGISTER_VIGILANTE_LEVEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0579",
          "name": "CLEAR_ALL_CHAR_ANIMS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "057A",
          "name": "SET_MAXIMUM_NUMBER_OF_CARS_IN_GARAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "057B",
          "name": "WANTED_STARS_ARE_FLASHING",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "057C",
          "name": "SET_ALLOW_HURRICANES",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "057D",
          "name": "PLAY_ANNOUNCEMENT",
          "num_params": 0,
          "short_desc": "Plays an announcement audio",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "057E",
          "member": "SetIsInStadium",
          "name": "SET_PLAYER_IS_IN_STADIUM",
          "num_params": 1,
          "short_desc": "Greys out the radar"
        },
        {
          "id": "057F",
          "name": "GET_BUS_FARES_COLLECTED_BY_PLAYER",
          "num_params": 0,
          "short_desc": "Returns the number of coach passengers",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0580",
          "name": "SET_CHAR_OBJ_BUY_ICE_CREAM",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "0581",
          "member": "DisplayRadar",
          "name": "DISPLAY_RADAR",
          "num_params": 1,
          "short_desc": "Displays or hides the radar"
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            },
            {
              "name": "position",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0582",
          "member": "RegisterBestPosition",
          "name": "REGISTER_BEST_POSITION",
          "num_params": 2,
          "short_desc": "Updates the race best position"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "infoZone",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0583",
          "member": "IsInInfoZone",
          "name": "IS_PLAYER_IN_INFO_ZONE",
          "num_params": 2,
          "short_desc": "Returns true if the player is in the specified zone"
        },
        {
          "id": "0584",
          "name": "CLEAR_CHAR_ICE_CREAM_PURCHASE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0585",
          "name": "IS_IN_CAR_FIRE_BUTTON_PRESSED",
          "num_params": 0,
          "short_desc": "Returns true if the attack button is being pressed",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0586",
          "name": "HAS_CHAR_ATTEMPTED_ATTRACTOR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0587",
          "member": "SetLoadCollisionFlag",
          "name": "SET_LOAD_COLLISION_FOR_CAR_FLAG",
          "num_params": 2,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0588",
          "member": "SetLoadCollisionFlag",
          "name": "SET_LOAD_COLLISION_FOR_CHAR_FLAG",
          "num_params": 2,
          "short_desc": ""
        },
        {
          "id": "0589",
          "name": "SET_LOAD_COLLISION_FOR_OBJECT_FLAG",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "fromZ",
              "type": "float"
            },
            {
              "name": "toX",
              "type": "float"
            },
            {
              "name": "toY",
              "type": "float"
            },
            {
              "name": "toZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Fx",
          "id": "058A",
          "member": "AddBigGunFlash",
          "name": "ADD_BIG_GUN_FLASH",
          "num_params": 6,
          "short_desc": "Creates a gun flash particle effect"
        },
        {
          "id": "058B",
          "name": "HAS_CHAR_BOUGHT_ICE_CREAM",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "output": [
            {
              "name": "percentage",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "058C",
          "member": "GetProgressPercentage",
          "name": "GET_PROGRESS_PERCENTAGE",
          "num_params": 1,
          "short_desc": "Gets the progress of completion as a percentage"
        },
        {
          "id": "058D",
          "name": "SET_SHORTCUT_PICKUP_POINT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "058E",
          "name": "SET_SHORTCUT_DROPOFF_POINT_FOR_MISSION",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "058F",
          "name": "GET_RANDOM_ICE_CREAM_CUSTOMER_IN_AREA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0590",
          "name": "GET_RANDOM_ICE_CREAM_CUSTOMER_IN_ZONE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0591",
          "name": "UNLOCK_ALL_CAR_DOORS_IN_AREA",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0592",
          "name": "SET_GANG_ATTACK_PLAYER_WITH_COPS",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0593",
          "name": "SET_CHAR_FRIGHTENED_IN_JACKED_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "class": "Car",
          "id": "0594",
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "alpha",
              "type": "int"
            }
          ],
          "member": "SetToFadeIn",
          "name": "SET_VEHICLE_TO_FADE_IN",
          "num_params": 2,
          "short_desc": "Sets the alpha transparency of a distant vehicle"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0595",
          "member": "RegisterOddjobMissionPassed",
          "name": "REGISTER_ODDJOB_MISSION_PASSED",
          "num_params": 0,
          "short_desc": "Sets the latest odd job mission passed"
        },
        {
          "id": "0596",
          "name": "IS_PLAYER_IN_SHORTCUT_TAXI",
          "num_params": 1,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0597",
          "member": "IsDucking",
          "name": "IS_CHAR_DUCKING",
          "num_params": 1,
          "short_desc": "Returns true if the specified character is crouching"
        },
        {
          "id": "0598",
          "name": "CREATE_DUST_EFFECT_FOR_CUTSCENE_HELI",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0599",
          "name": "REGISTER_FIRE_LEVEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "id": "059A",
          "member": "IsAustralian",
          "name": "IS_AUSTRALIAN_GAME",
          "num_params": 0,
          "short_desc": "Returns true if the current game is an Australian release"
        },
        {
          "id": "059B",
          "name": "DISARM_CAR_BOMB",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "counter",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "059C",
          "name": "SET_ONSCREEN_COUNTER_FLASH_WHEN_FIRST_DISPLAYED",
          "num_params": 2,
          "short_desc": "",
          "class": "Hud",
          "member": "SetOnscreenCounterFlashWhenFirstDisplayed",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "type",
              "type": "int"
            }
          ],
          "id": "059D",
          "name": "SHUFFLE_CARD_DECKS",
          "num_params": 1,
          "short_desc": "",
          "class": "CardDecks",
          "member": "Shuffle",
          "attrs": {
            "is_static": true
          }
        },
        {
          "output": [
            {
              "name": "number",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "059E",
          "name": "FETCH_NEXT_CARD",
          "num_params": 1,
          "short_desc": "Returns a random number between 1 and 52, inclusive",
          "class": "CardDecks",
          "member": "FetchNextCard",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "059F",
          "name": "GET_OBJECT_VELOCITY",
          "num_params": 4,
          "short_desc": "Returns the object's X, Y, and Z velocity",
          "class": "Object",
          "member": "GetVelocity"
        },
        {
          "id": "05A0",
          "name": "IS_DEBUG_CAMERA_ON",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Debugger",
          "member": "IsDebugCameraOn"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "05A1",
          "name": "ADD_TO_OBJECT_ROTATION_VELOCITY",
          "num_params": 4,
          "short_desc": "Sets the object's rotation velocity from the center of its body",
          "class": "Object",
          "member": "AddToRotationVelocity"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "05A2",
          "name": "SET_OBJECT_ROTATION_VELOCITY",
          "num_params": 4,
          "short_desc": "Sets the object's rotation velocity with frame sync applied?",
          "class": "Object",
          "member": "SetRotationVelocity"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "id": "05A3",
          "name": "IS_OBJECT_STATIC",
          "num_params": 1,
          "short_desc": "Returns true if the object is not moving",
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "member": "IsStatic"
        },
        {
          "input": [
            {
              "name": "x1",
              "type": "float"
            },
            {
              "name": "y1",
              "type": "float"
            },
            {
              "name": "x2",
              "type": "float"
            },
            {
              "name": "y2",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "angle",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "05A4",
          "name": "GET_ANGLE_BETWEEN_2D_VECTORS",
          "num_params": 5,
          "short_desc": "Gets the angle between the two 2D vectors",
          "class": "Math",
          "member": "GetAngleBetween2DVectors",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "05A5",
          "name": "DO_2D_RECTANGLES_COLLIDE",
          "num_params": 8,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            },
            {
              "name": "_p7",
              "type": "any"
            },
            {
              "name": "_p8",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "05A6",
          "name": "GET_OBJECT_ROTATION_VELOCITY",
          "num_params": 4,
          "short_desc": "",
          "class": "Object",
          "member": "GetRotationVelocity"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "05A7",
          "name": "ADD_VELOCITY_RELATIVE_TO_OBJECT_VELOCITY",
          "num_params": 4,
          "short_desc": "Sets the object's velocity",
          "class": "Object",
          "member": "AddVelocityRelative"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "speed",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "05A8",
          "name": "GET_OBJECT_SPEED",
          "num_params": 2,
          "short_desc": "Gets the speed of the object",
          "class": "Object",
          "member": "GetSpeed"
        },
        {
          "id": "05A9",
          "name": "SET_VAR_TEXT_LABEL",
          "num_params": 2,
          "short_desc": "Stores a short string into a global variable",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "05AA",
          "name": "SET_LVAR_TEXT_LABEL",
          "num_params": 2,
          "short_desc": "Stores a short string into a variable",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "05AB",
          "name": "VAR_TEXT_LABEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "05AC",
          "name": "LVAR_TEXT_LABEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "05AD",
          "name": "IS_VAR_TEXT_LABEL_EQUAL_TO_TEXT_LABEL",
          "num_params": 2,
          "short_desc": "Returns true if the two strings are equivalent",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "id": "05AE",
          "name": "IS_LVAR_TEXT_LABEL_EQUAL_TO_TEXT_LABEL",
          "num_params": 2,
          "short_desc": "Returns true if the two strings are equivalent",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "id": "05AF",
          "name": "DO_2D_LINES_INTERSECT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "05B0",
          "name": "GET_2D_LINES_INTERSECT_POINT",
          "num_params": 10,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            },
            {
              "name": "_p7",
              "type": "any"
            },
            {
              "name": "_p8",
              "type": "any"
            },
            {
              "name": "_p9",
              "type": "any"
            },
            {
              "name": "_p10",
              "type": "any"
            }
          ]
        },
        {
          "id": "05B1",
          "name": "IS_2D_POINT_IN_TRIANGLE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "05B2",
          "name": "IS_2D_POINT_IN_RECTANGLE_ON_LEFT_SIDE_OF_LINE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "05B3",
          "name": "IS_2D_POINT_ON_LEFT_SIDE_OF_2D_LINE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "05B4",
          "name": "CHAR_LOOK_AT_OBJECT_ALWAYS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "05B5",
          "name": "APPLY_COLLISION_ON_OBJECT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "msg",
              "type": "string128"
            }
          ],
          "id": "05B6",
          "name": "SAVE_STRING_TO_DEBUG_FILE",
          "num_params": 1,
          "short_desc": "Makes the current script skip the next 128 bytes of the code",
          "class": "Debugger",
          "member": "SaveStringToDebugFile",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "05B7",
          "name": "TASK_PLAYER_ON_FOOT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "05B8",
          "name": "TASK_PLAYER_IN_CAR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "05B9",
          "name": "TASK_PAUSE",
          "num_params": 2,
          "short_desc": "Makes the character pause for the specified amount of time",
          "class": "Task",
          "member": "Pause",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "05BA",
          "name": "TASK_STAND_STILL",
          "num_params": 2,
          "short_desc": "Makes the character stand still",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "StandStill"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "fallDown",
              "type": "bool"
            },
            {
              "name": "timeOnGround",
              "type": "int"
            }
          ],
          "id": "05BB",
          "name": "TASK_FALL_AND_GET_UP",
          "num_params": 3,
          "short_desc": "Makes actor fall to the ground and stay there for the specified time",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "FallAndGetUp"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "05BC",
          "name": "TASK_JUMP",
          "num_params": 2,
          "short_desc": "Makes the actor perform a jump",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "Jump"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "05BD",
          "name": "TASK_TIRED",
          "num_params": 2,
          "short_desc": "Makes the actor stop to regain breath",
          "class": "Task",
          "member": "Tired",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "05BE",
          "name": "TASK_DIE",
          "num_params": 1,
          "short_desc": "Kills the character",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "Die"
        },
        {
          "input": [
            {
              "name": "observer",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "05BF",
          "name": "TASK_LOOK_AT_CHAR",
          "num_params": 3,
          "short_desc": "Makes the character look at another character",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "LookAtChar"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "05C0",
          "name": "TASK_LOOK_AT_VEHICLE",
          "num_params": 3,
          "short_desc": "Makes the actor look at the specified vehicle",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "LookAtVehicle"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "phraseId",
              "type": "int"
            }
          ],
          "id": "05C1",
          "name": "TASK_SAY",
          "num_params": 2,
          "short_desc": "Makes the character say a phrase from the specified audio table",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "Say"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "05C2",
          "name": "TASK_SHAKE_FIST",
          "num_params": 1,
          "short_desc": "Makes the actor lift their hand up in the air angrily",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "ShakeFist"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "05C3",
          "name": "TASK_COWER",
          "num_params": 1,
          "short_desc": "Makes the actor stumble backwards with their arms in front of their face as if he is backing away from something in fear",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "Cower"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "05C4",
          "name": "TASK_HANDS_UP",
          "num_params": 2,
          "short_desc": "Makes the actor put their hands in the air",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "HandsUp"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "05C5",
          "name": "TASK_DUCK",
          "num_params": 2,
          "short_desc": "Makes a character duck with their arms over head",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "Duck"
        },
        {
          "id": "05C6",
          "name": "TASK_DETONATE",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "05C7",
          "name": "TASK_USE_ATM",
          "num_params": 1,
          "short_desc": "Makes a character use an ATM machine",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "UseAtm"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "05C8",
          "name": "TASK_SCRATCH_HEAD",
          "num_params": 1,
          "short_desc": "Makes a character scratch their head while looking around",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "ScratchHead"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "05C9",
          "name": "TASK_LOOK_ABOUT",
          "num_params": 2,
          "short_desc": "Makes a character look out ahead",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "LookAbout"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "seatId",
              "type": "int"
            }
          ],
          "id": "05CA",
          "name": "TASK_ENTER_CAR_AS_PASSENGER",
          "num_params": 4,
          "short_desc": "Makes a character approach the car and occupy the specified passenger seat",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "EnterCarAsPassenger"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "05CB",
          "name": "TASK_ENTER_CAR_AS_DRIVER",
          "num_params": 3,
          "short_desc": "Makes a character approach the car and occupy the driver seat",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "EnterCarAsDriver"
        },
        {
          "id": "05CC",
          "name": "TASK_STEAL_CAR",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "id": "05CD",
          "name": "TASK_LEAVE_CAR",
          "num_params": 2,
          "short_desc": "Makes the character exit the specified vehicle, if they are currently in it",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "LeaveCar"
        },
        {
          "id": "05CE",
          "name": "TASK_LEAVE_CAR_AND_DIE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "05CF",
          "name": "TASK_LEAVE_CAR_AND_FLEE",
          "num_params": 5,
          "short_desc": "Makes the character exit the vehicle and flee to the specified position",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "LeaveCarAndFlee"
        },
        {
          "id": "05D0",
          "name": "TASK_CAR_DRIVE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "driver",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "speed",
              "type": "float"
            },
            {
              "name": "_p7",
              "type": "int"
            },
            {
              "name": "_p8",
              "type": "int"
            },
            {
              "name": "drivingStyle",
              "type": "CarDrivingStyle"
            }
          ],
          "id": "05D1",
          "name": "TASK_CAR_DRIVE_TO_COORD",
          "num_params": 9,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "CarDriveToCoord"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "speed",
              "type": "float"
            },
            {
              "name": "drivingStyle",
              "type": "int"
            }
          ],
          "id": "05D2",
          "name": "TASK_CAR_DRIVE_WANDER",
          "num_params": 4,
          "short_desc": "Makes the character drive around aimlessly in a vehicle",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "CarDriveWander"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "moveState",
              "type": "MoveState"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "05D3",
          "name": "TASK_GO_STRAIGHT_TO_COORD",
          "num_params": 6,
          "short_desc": "Makes the character walk to the specified coordinates",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "GoStraightToCoord"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "id": "05D4",
          "name": "TASK_ACHIEVE_HEADING",
          "num_params": 2,
          "short_desc": "Rotates a character to the specified angle",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "AchieveHeading"
        },
        {
          "id": "05D5",
          "name": "SET_CHAR_IN_DISGUISE",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "05D6",
          "name": "FLUSH_ROUTE",
          "num_params": 0,
          "short_desc": "Flushes the task route",
          "class": "Path",
          "member": "FlushRoute",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "05D7",
          "name": "EXTEND_ROUTE",
          "num_params": 3,
          "short_desc": "Adds a point to the task route",
          "class": "Path",
          "member": "ExtendRoute",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "walkSpeed",
              "type": "int"
            },
            {
              "name": "flag",
              "type": "int"
            }
          ],
          "id": "05D8",
          "name": "TASK_FOLLOW_POINT_ROUTE",
          "num_params": 3,
          "short_desc": "Makes the character follow the path route",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "FollowPointRoute"
        },
        {
          "input": [
            {
              "name": "walking",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "05D9",
          "name": "TASK_GOTO_CHAR",
          "num_params": 4,
          "short_desc": "Approaches the character from any direction within the specified radius",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "GotoChar"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "05DA",
          "name": "TASK_FLEE_POINT",
          "num_params": 6,
          "short_desc": "Makes the character run away from a point, scared and often screaming",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "FleePoint"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "threat",
              "type": "Char"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "05DB",
          "name": "TASK_FLEE_CHAR",
          "num_params": 4,
          "short_desc": "Makes the character run away from another character",
          "class": "Task",
          "member": "FleeChar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "05DC",
          "name": "TASK_SMART_FLEE_POINT",
          "num_params": 6,
          "short_desc": "Makes the character run away from the specified coordinates",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "SmartFleePoint"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "threat",
              "type": "Char"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "05DD",
          "name": "TASK_SMART_FLEE_CHAR",
          "num_params": 4,
          "short_desc": "Makes the character flee from another character",
          "class": "Task",
          "member": "SmartFleeChar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "05DE",
          "name": "TASK_WANDER_STANDARD",
          "num_params": 1,
          "short_desc": "Makes the character walk around the ped path",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "WanderStandard"
        },
        {
          "id": "05DF",
          "name": "TASK_WANDER_COP",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "05E0",
          "name": "TASK_WANDER_CRIMINAL",
          "num_params": 0,
          "short_desc": "Reads the game memory and stores the result to a variable",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "05E1",
          "name": "TASK_FOLLOW_LEADER_IN_FORMATION",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "killer",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "id": "05E2",
          "name": "TASK_KILL_CHAR_ON_FOOT",
          "num_params": 2,
          "short_desc": "Makes a character attack another character on foot",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "KillCharOnFoot"
        },
        {
          "id": "05E3",
          "name": "START_ADDING_STUNT_POINTS",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "05E4",
          "name": "ADD_STUNT_POINT",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "05E5",
          "name": "START_PLAYING_STUNT",
          "num_params": 0,
          "short_desc": "Gets the ID version of the game",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "05E6",
          "name": "HAS_STUNT_ENDED",
          "num_params": 0,
          "short_desc": "Gets a pointer to the structure of the actor on the handle",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "05E7",
          "name": "HAS_STUNT_FAILED",
          "num_params": 0,
          "short_desc": "Gets a pointer to the structure of the vehicle on the handle",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "05E8",
          "name": "START_RECORDING_STUNT",
          "num_params": 0,
          "short_desc": "Gets a pointer to the structure of the object on the handle",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "05E9",
          "name": "START_RECORDING_CAR",
          "num_params": 2,
          "short_desc": "Gets the handle to the actor, which is located in the pool of actors",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "05EA",
          "name": "STOP_RECORDING_CARS",
          "num_params": 0,
          "short_desc": "Gets the handle of a vehicle located in a pool of vehicle",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "path",
              "type": "int"
            }
          ],
          "id": "05EB",
          "name": "START_PLAYBACK_RECORDED_CAR",
          "num_params": 2,
          "short_desc": "Assigns a car to a path",
          "class": "Car",
          "member": "StartPlaybackRecorded"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "05EC",
          "name": "STOP_PLAYBACK_RECORDED_CAR",
          "num_params": 1,
          "short_desc": "Stops car from following path",
          "class": "Car",
          "member": "StopPlaybackRecorded"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "05ED",
          "name": "PAUSE_PLAYBACK_RECORDED_CAR",
          "num_params": 1,
          "short_desc": "Freezes the car on its path",
          "class": "Car",
          "member": "PausePlaybackRecorded"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "05EE",
          "name": "UNPAUSE_PLAYBACK_RECORDED_CAR",
          "num_params": 1,
          "short_desc": "Unfreezes the vehicle on its path",
          "class": "Car",
          "member": "UnpausePlaybackRecorded"
        },
        {
          "id": "05EF",
          "name": "SET_CAR_PROTECT_CAR_REAR",
          "num_params": 0,
          "short_desc": "Performs a search for an actor, which is located in a specified radius around the point",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "05F0",
          "name": "SET_CAR_PROTECT_CAR_FRONT",
          "num_params": 0,
          "short_desc": "Performs a search for a vehicle, located in a specified radius around the point",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "handle",
              "type": "Car"
            }
          ],
          "id": "05F1",
          "name": "SET_CAR_ESCORT_CAR_LEFT",
          "num_params": 2,
          "short_desc": "Makes the vehicle stay on the other vehicle's left side, keeping parallel",
          "class": "Car",
          "member": "SetEscortCarLeft"
        },
        {
          "id": "05F2",
          "name": "SET_CAR_ESCORT_CAR_RIGHT",
          "num_params": 2,
          "short_desc": "Makes the vehicle stay by the right side of the other vehicle, keeping parallel",
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "handle",
              "type": "Car"
            }
          ],
          "class": "Car",
          "member": "SetEscortCarRight"
        },
        {
          "id": "05F3",
          "name": "SET_CAR_ESCORT_CAR_REAR",
          "num_params": 2,
          "short_desc": "Makes the vehicle stay behind the other car, keeping parallel",
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "handle",
              "type": "Car"
            }
          ],
          "class": "Car",
          "member": "SetEscortCarRear"
        },
        {
          "id": "05F4",
          "name": "SET_CAR_ESCORT_CAR_FRONT",
          "num_params": 2,
          "short_desc": "Makes the vehicle stay in front of the other, keeping parallel",
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "handle",
              "type": "Car"
            }
          ],
          "class": "Car",
          "member": "SetEscortCarFront"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "walkSpeed",
              "type": "int"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "05F5",
          "name": "TASK_FOLLOW_PATH_NODES_TO_COORD",
          "num_params": 6,
          "short_desc": "Makes the character go to the specified coordinates",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "FollowPathNodesToCoord"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "05F6",
          "name": "IS_CHAR_IN_ANGLED_AREA_2D",
          "num_params": 7,
          "short_desc": "Checks if the character is within the angled 2D area",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsInAngledArea2D"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "05F7",
          "name": "IS_CHAR_IN_ANGLED_AREA_ON_FOOT_2D",
          "num_params": 7,
          "short_desc": "Checks if the character is within the angled 2D area",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsInAngledAreaOnFoot2D"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "05F8",
          "name": "IS_CHAR_IN_ANGLED_AREA_IN_CAR_2D",
          "num_params": 7,
          "short_desc": "Checks if the character is in a car which is within the angled 2D area",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsInAngledAreaInCar2D"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "05F9",
          "name": "IS_CHAR_STOPPED_IN_ANGLED_AREA_2D",
          "num_params": 7,
          "short_desc": "Checks if the character is within the angled 2D area and is motionless",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsStoppedInAngledArea2D"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "05FA",
          "name": "IS_CHAR_STOPPED_IN_ANGLED_AREA_ON_FOOT_2D",
          "num_params": 7,
          "short_desc": "Checks if the character is within the angled 2D area",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsStoppedInAngledAreaOnFoot2D"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "05FB",
          "name": "IS_CHAR_STOPPED_IN_ANGLED_AREA_IN_CAR_2D",
          "num_params": 7,
          "short_desc": "Checks if the character is in a motionless car within the angled 2D area",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsStoppedInAngledAreaInCar2D"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "05FC",
          "name": "IS_CHAR_IN_ANGLED_AREA_3D",
          "num_params": 9,
          "short_desc": "Checks if the character is within the angled 3D area",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsInAngledArea3D"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "05FD",
          "name": "IS_CHAR_IN_ANGLED_AREA_ON_FOOT_3D",
          "num_params": 9,
          "short_desc": "Checks if the character is within the angled 3D area",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsInAngledAreaOnFoot3D"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "05FE",
          "name": "IS_CHAR_IN_ANGLED_AREA_IN_CAR_3D",
          "num_params": 9,
          "short_desc": "",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsInAngledAreaInCar3D"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "05FF",
          "name": "IS_CHAR_STOPPED_IN_ANGLED_AREA_3D",
          "num_params": 9,
          "short_desc": "",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsStoppedInAngledArea3D"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "0600",
          "name": "IS_CHAR_STOPPED_IN_ANGLED_AREA_ON_FOOT_3D",
          "num_params": 9,
          "short_desc": "",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsStoppedInAngledAreaOnFoot3D"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "0601",
          "name": "IS_CHAR_STOPPED_IN_ANGLED_AREA_IN_CAR_3D",
          "num_params": 9,
          "short_desc": "",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsStoppedInAngledAreaInCar3D"
        },
        {
          "id": "0602",
          "name": "IS_CHAR_IN_TAXI",
          "num_params": 1,
          "short_desc": "Returns true if the character is driving a taxi",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "member": "IsInTaxi",
          "attrs": {
            "is_condition": true
          }
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "walkSpeed",
              "type": "int"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "id": "0603",
          "name": "TASK_GO_TO_COORD_ANY_MEANS",
          "num_params": 6,
          "short_desc": "Assigns the character the task of getting to the specified coordinates",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "GoToCoordAnyMeans"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "heading",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "0604",
          "name": "GET_HEADING_FROM_VECTOR_2D",
          "num_params": 3,
          "short_desc": "Gets the angle for the XY offset",
          "class": "Math",
          "member": "GetHeadingFromVector2D",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "animationName",
              "type": "string"
            },
            {
              "name": "animationFile",
              "type": "string"
            },
            {
              "name": "frameDelta",
              "type": "float"
            },
            {
              "name": "loop",
              "type": "bool"
            },
            {
              "name": "lockX",
              "type": "bool"
            },
            {
              "name": "lockY",
              "type": "bool"
            },
            {
              "name": "lockF",
              "type": "bool"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "0605",
          "name": "TASK_PLAY_ANIM",
          "num_params": 9,
          "short_desc": "Makes the character perform an animation",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "PlayAnim"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            }
          ],
          "id": "0606",
          "name": "LOAD_PATH_NODES_IN_AREA",
          "num_params": 4,
          "short_desc": "Adds an area where script created cars will avoid driving in",
          "class": "Path",
          "member": "LoadPathNodesInArea",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0607",
          "name": "RELEASE_PATH_NODES",
          "num_params": 0,
          "short_desc": "Removes areas forbidden for scripted cars set up by 0606",
          "class": "Path",
          "member": "ReleaseNodes",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0608",
          "name": "HAVE_PATH_NODES_BEEN_LOADED",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0609",
          "name": "LOAD_ALL_PATH_NODES_FOR_DEBUG",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "type",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "DecisionMakerChar",
              "source": "var_any"
            }
          ],
          "id": "060A",
          "name": "LOAD_CHAR_DECISION_MAKER",
          "num_params": 2,
          "short_desc": "Creates a decision maker with the specified type",
          "class": "DecisionMakerChar",
          "member": "Load",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "maskOrHandle",
              "type": "DecisionMakerChar"
            }
          ],
          "id": "060B",
          "name": "SET_CHAR_DECISION_MAKER",
          "num_params": 2,
          "short_desc": "Sets the decision maker for the character",
          "class": "Char",
          "member": "SetDecisionMaker"
        },
        {
          "id": "060C",
          "name": "CLEAR_ALL_DECISION_MAKERS",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "intensity",
              "type": "int"
            },
            {
              "name": "red",
              "type": "int"
            },
            {
              "name": "green",
              "type": "int"
            },
            {
              "name": "blue",
              "type": "int"
            },
            {
              "name": "alpha",
              "type": "int"
            }
          ],
          "id": "060D",
          "name": "SET_TEXT_DROPSHADOW",
          "num_params": 5,
          "short_desc": "Sets shadow for the current text draw",
          "class": "Text",
          "member": "SetDropshadow",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "060E",
          "name": "IS_PLAYBACK_GOING_ON_FOR_CAR",
          "num_params": 1,
          "short_desc": "Returns true if the car is assigned to a path",
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "IsPlaybackGoingOn"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "meleeAccuracy",
              "type": "float"
            }
          ],
          "id": "060F",
          "name": "SET_SENSE_RANGE",
          "num_params": 2,
          "short_desc": "Sets the characters melee accuracy",
          "class": "Char",
          "member": "SetSenseRange"
        },
        {
          "id": "0610",
          "name": "SET_HEARING_RANGE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "animationName",
              "type": "string"
            }
          ],
          "id": "0611",
          "name": "IS_CHAR_PLAYING_ANIM",
          "num_params": 2,
          "short_desc": "Returns true if character is performing the specified animation",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsPlayingAnim"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "animationName",
              "type": "string"
            },
            {
              "name": "flag",
              "type": "bool"
            }
          ],
          "id": "0612",
          "name": "SET_CHAR_ANIM_PLAYING_FLAG",
          "num_params": 3,
          "short_desc": "Sets whether the animation is playing",
          "class": "Char",
          "member": "SetAnimPlayingFlag"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "animationName",
              "type": "string"
            }
          ],
          "output": [
            {
              "name": "time",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0613",
          "name": "GET_CHAR_ANIM_CURRENT_TIME",
          "num_params": 3,
          "short_desc": "Returns the progress of the animation on the actor, ranging from 0",
          "class": "Char",
          "member": "GetAnimCurrentTime"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "animationName",
              "type": "string"
            },
            {
              "name": "time",
              "type": "float"
            }
          ],
          "id": "0614",
          "name": "SET_CHAR_ANIM_CURRENT_TIME",
          "num_params": 3,
          "short_desc": "Sets how far through the animation the character is, with 1",
          "class": "Char",
          "member": "SetAnimCurrentTime"
        },
        {
          "id": "0615",
          "name": "OPEN_SEQUENCE_TASK",
          "num_params": 1,
          "short_desc": "Begins a task sequence",
          "output": [
            {
              "name": "handle",
              "type": "Sequence",
              "source": "var_any"
            }
          ],
          "class": "Sequence",
          "member": "Open",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "id": "0616",
          "name": "CLOSE_SEQUENCE_TASK",
          "num_params": 1,
          "short_desc": "Ends the task sequence",
          "input": [
            {
              "name": "self",
              "type": "Sequence"
            }
          ],
          "class": "Sequence",
          "member": "Close"
        },
        {
          "id": "0617",
          "name": "SCRIPT_EVENT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0618",
          "name": "PERFORM_SEQUENCE_TASK",
          "num_params": 2,
          "short_desc": "Assigns the character to the specified action sequence",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "sequence",
              "type": "Sequence"
            }
          ],
          "class": "Char",
          "member": "PerformSequence"
        },
        {
          "id": "0619",
          "name": "SET_CHAR_COLLISION",
          "num_params": 2,
          "short_desc": "Sets whether collision detection is enabled for the character",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "member": "SetCollision"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "animationName",
              "type": "string"
            }
          ],
          "output": [
            {
              "name": "time",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "061A",
          "name": "GET_CHAR_ANIM_TOTAL_TIME",
          "num_params": 3,
          "short_desc": "Returns a float of the length of the animation in milliseconds",
          "class": "Char",
          "member": "GetAnimTotalTime"
        },
        {
          "id": "061B",
          "name": "CLEAR_SEQUENCE_TASK",
          "num_params": 1,
          "short_desc": "Clears the task sequence",
          "input": [
            {
              "name": "self",
              "type": "Sequence"
            }
          ],
          "class": "Sequence",
          "member": "Clear",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "id": "061C",
          "name": "CLEAR_ALL_SEQUENCE_TASKS",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "_p5",
              "type": "float"
            },
            {
              "name": "sequence",
              "type": "Sequence"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Attractor",
              "source": "var_any"
            }
          ],
          "id": "061D",
          "name": "ADD_ATTRACTOR",
          "num_params": 7,
          "short_desc": "Adds a ped attractor",
          "class": "Attractor",
          "member": "Add",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Attractor"
            }
          ],
          "id": "061E",
          "name": "CLEAR_ATTRACTOR",
          "num_params": 1,
          "short_desc": "",
          "class": "Attractor",
          "member": "Clear",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "id": "061F",
          "name": "CLEAR_ALL_ATTRACTORS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0620",
          "name": "TASK_PLAY_ANIM_FOR_TIME",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "pedType",
              "type": "PedType"
            },
            {
              "name": "modelId",
              "type": "model_char"
            },
            {
              "name": "taskId",
              "type": "int"
            },
            {
              "name": "attractor",
              "type": "Attractor"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "id": "0621",
          "name": "CREATE_CHAR_AT_ATTRACTOR",
          "num_params": 5,
          "short_desc": "",
          "class": "Char",
          "member": "CreateAtAttractor",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "id": "0622",
          "name": "TASK_LEAVE_CAR_IMMEDIATELY",
          "num_params": 2,
          "short_desc": "Makes the character jump out of the vehicle while it is in motion",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "LeaveCarImmediately"
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "id": "0623",
          "name": "INCREMENT_INT_STAT",
          "num_params": 2,
          "short_desc": "Increases the stat by the value given",
          "class": "Stat",
          "attrs": {
            "is_static": true
          },
          "member": "IncrementInt"
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            },
            {
              "name": "value",
              "type": "float"
            }
          ],
          "id": "0624",
          "name": "INCREMENT_FLOAT_STAT",
          "num_params": 2,
          "short_desc": "Increases the stat by the value specified",
          "class": "Stat",
          "member": "IncrementFloat",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "id": "0625",
          "name": "DECREMENT_INT_STAT",
          "num_params": 2,
          "short_desc": "Decreases the stat by the value given",
          "class": "Stat",
          "attrs": {
            "is_static": true
          },
          "member": "DecrementInt"
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            },
            {
              "name": "value",
              "type": "float"
            }
          ],
          "id": "0626",
          "name": "DECREMENT_FLOAT_STAT",
          "num_params": 2,
          "short_desc": "Decreases the stat by the value given",
          "class": "Stat",
          "member": "DecrementFloat",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "id": "0627",
          "name": "REGISTER_INT_STAT",
          "num_params": 2,
          "short_desc": "Updates the specified integer stat",
          "class": "Stat",
          "member": "RegisterInt",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            },
            {
              "name": "value",
              "type": "float"
            }
          ],
          "id": "0628",
          "name": "REGISTER_FLOAT_STAT",
          "num_params": 2,
          "short_desc": "Sets the specified stat to the specified value, if the specified value is greater than the current stat value",
          "class": "Stat",
          "member": "RegisterFloat",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "id": "0629",
          "name": "SET_INT_STAT",
          "num_params": 2,
          "short_desc": "Sets the stat to the specified value",
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "member": "SetInt"
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            },
            {
              "name": "value",
              "type": "float"
            }
          ],
          "id": "062A",
          "name": "SET_FLOAT_STAT",
          "num_params": 2,
          "short_desc": "Sets the stat to the specified value",
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "member": "SetFloat"
        },
        {
          "id": "062B",
          "name": "GET_ATTEMPTS_FOR_THIS_MISSION",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "062C",
          "name": "REGISTER_THIS_MISSION_HAS_BEEN_ATTEMPTED",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "062D",
          "name": "REGISTER_THIS_MISSION_HAS_BEEN_PASSED",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "taskId",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "status",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "062E",
          "name": "GET_SCRIPT_TASK_STATUS",
          "num_params": 3,
          "short_desc": "Returns the status of the specified script task of the character",
          "class": "Char",
          "member": "GetScriptTaskStatus"
        },
        {
          "input": [
            {
              "name": "defaultTaskAllocator",
              "type": "DefaultTaskAllocator"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Group",
              "source": "var_any"
            }
          ],
          "id": "062F",
          "name": "CREATE_GROUP",
          "num_params": 2,
          "short_desc": "Creates a new group, which multiple characters can be assigned to, allowing control over all of them as a group",
          "class": "Group",
          "member": "Create",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Group"
            },
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "0630",
          "name": "SET_GROUP_LEADER",
          "num_params": 2,
          "short_desc": "Puts the specified character into the group as the leader",
          "class": "Group",
          "member": "SetLeader"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Group"
            },
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "0631",
          "name": "SET_GROUP_MEMBER",
          "num_params": 2,
          "short_desc": "Puts the specified character into the group as a member",
          "class": "Group",
          "member": "SetMember"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Group"
            }
          ],
          "id": "0632",
          "name": "REMOVE_GROUP",
          "num_params": 1,
          "short_desc": "Releases the group",
          "class": "Group",
          "member": "Remove",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "0633",
          "name": "TASK_LEAVE_ANY_CAR",
          "num_params": 1,
          "short_desc": "Makes the actor exit the car, if he is in one",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "LeaveAnyCar"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "flags",
              "type": "int"
            },
            {
              "name": "actionDelay",
              "type": "int"
            },
            {
              "name": "actionChance",
              "type": "int"
            }
          ],
          "id": "0634",
          "name": "TASK_KILL_CHAR_ON_FOOT_WHILE_DUCKING",
          "num_params": 5,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "KillCharOnFootWhileDucking"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "0635",
          "name": "TASK_AIM_GUN_AT_CHAR",
          "num_params": 3,
          "short_desc": "Makes a character aim at another character",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "AimGunAtChar"
        },
        {
          "id": "0636",
          "name": "TASK_SIDE_STEP_AND_SHOOT",
          "num_params": 9,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            },
            {
              "name": "_p7",
              "type": "any"
            },
            {
              "name": "_p8",
              "type": "any"
            },
            {
              "name": "_p9",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "mode",
              "type": "int"
            },
            {
              "name": "turnRadius",
              "type": "float"
            },
            {
              "name": "stopRadius",
              "type": "float"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "id": "0637",
          "name": "TASK_GO_TO_COORD_WHILE_SHOOTING",
          "num_params": 8,
          "short_desc": "Makes a character go to the location while shooting at another character",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "GoToCoordWhileShooting"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0638",
          "name": "TASK_STAY_IN_SAME_PLACE",
          "num_params": 2,
          "short_desc": "Makes the character stay in the same place",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "StayInSamePlace"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "id": "0639",
          "name": "TASK_TURN_CHAR_TO_FACE_CHAR",
          "num_params": 2,
          "short_desc": "Makes a character face another character",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "TurnCharToFaceChar"
        },
        {
          "id": "063A",
          "name": "OPEN_THREAT_LIST",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "063B",
          "name": "CLOSE_THREAT_LIST",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "063C",
          "name": "SET_PEDMODEL_AS_THREAT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "063D",
          "name": "SET_CHAR_THREAT_LIST",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "063E",
          "name": "REMOVE_THREAT_LIST",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "063F",
          "name": "PERFORM_SEQUENCE_TASK_REPEATEDLY",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0640",
          "name": "SET_PEDTYPE_AS_THREAT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0641",
          "name": "CLEAR_CHAR_THREATS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Attractor"
            }
          ],
          "id": "0642",
          "name": "IS_CHAR_AT_SCRIPTED_ATTRACTOR",
          "num_params": 2,
          "short_desc": "",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsAtScriptedAttractor"
        },
        {
          "id": "0643",
          "name": "SET_SEQUENCE_TO_REPEAT",
          "num_params": 2,
          "short_desc": "Sets whether the task sequence repeats continuously",
          "input": [
            {
              "name": "self",
              "type": "Sequence"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Sequence",
          "member": "SetToRepeat"
        },
        {
          "id": "0644",
          "name": "CREATE_PED_GENERATOR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0645",
          "name": "SWITCH_PED_GENERATOR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0646",
          "name": "GET_SEQUENCE_PROGRESS",
          "num_params": 2,
          "short_desc": "Gets the characters task sequence progress, as started by 0618",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "progress",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "member": "GetSequenceProgress"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "id": "0647",
          "name": "CLEAR_LOOK_AT",
          "num_params": 1,
          "short_desc": "Clears the actor's look task, making them stop looking at whatever they were assigned to look at",
          "class": "Char",
          "member": "ClearLookAt"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "range",
              "type": "float"
            }
          ],
          "id": "0648",
          "name": "SET_FOLLOW_NODE_THRESHOLD_DISTANCE",
          "num_params": 2,
          "short_desc": "Sets the range within which the char responds to events",
          "class": "Char",
          "member": "SetFollowNodeThresholdDistance"
        },
        {
          "id": "0649",
          "name": "SET_CHAR_ZONE_DISTANCE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "064A",
          "name": "ADD_PEDMODEL_AS_ATTRACTOR_USER",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "type",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Particle",
              "source": "var_any"
            }
          ],
          "id": "064B",
          "name": "CREATE_FX_SYSTEM",
          "num_params": 6,
          "short_desc": "Creates a particle effect",
          "class": "Particle",
          "member": "Create",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Particle"
            }
          ],
          "id": "064C",
          "name": "PLAY_FX_SYSTEM",
          "num_params": 1,
          "short_desc": "Makes the specified particle visible",
          "class": "Particle",
          "member": "Play"
        },
        {
          "id": "064D",
          "name": "PAUSE_FX_SYSTEM",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Particle"
            }
          ],
          "id": "064E",
          "name": "STOP_FX_SYSTEM",
          "num_params": 1,
          "short_desc": "Stops the specified particle at the source",
          "class": "Particle",
          "member": "Stop"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Particle"
            }
          ],
          "id": "064F",
          "name": "PLAY_AND_KILL_FX_SYSTEM",
          "num_params": 1,
          "short_desc": "Starts the particle effect and relinquishes script control over it",
          "class": "Particle",
          "member": "PlayAndKill"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Particle"
            }
          ],
          "id": "0650",
          "name": "KILL_FX_SYSTEM",
          "num_params": 1,
          "short_desc": "Stops the particle and deletes it",
          "class": "Particle",
          "member": "Kill",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "id": "0651",
          "name": "CREATE_FX_SYSTEM_WITH_DIRECTION",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "value",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0652",
          "name": "GET_INT_STAT",
          "num_params": 2,
          "short_desc": "Returns the value of the specified integer stat",
          "class": "Stat",
          "member": "GetInt",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "value",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "0653",
          "name": "GET_FLOAT_STAT",
          "num_params": 2,
          "short_desc": "Returns the value of the specified float stat",
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "member": "GetFloat"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0654",
          "name": "SET_OBJECT_RENDER_SCORCHED",
          "num_params": 2,
          "short_desc": "Makes the object look like it has been burnt",
          "class": "Object",
          "member": "SetRenderScorched"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "time",
              "type": "any"
            }
          ],
          "id": "0655",
          "name": "TASK_LOOK_AT_OBJECT",
          "num_params": 3,
          "short_desc": "Makes the character look at an object",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "LookAtObject"
        },
        {
          "input": [
            {
              "name": "value",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "result",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "0656",
          "name": "LIMIT_ANGLE",
          "num_params": 2,
          "short_desc": "Gets the exact angle of an angle",
          "class": "Math",
          "member": "LimitAngle",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "door",
              "type": "CarDoor"
            }
          ],
          "id": "0657",
          "name": "OPEN_CAR_DOOR",
          "num_params": 2,
          "short_desc": "Opens the specified car door",
          "class": "Car",
          "member": "OpenDoor"
        },
        {
          "id": "0658",
          "name": "SET_GROUP_DEFAULT_LEADER_TASK",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0659",
          "name": "SET_ATTRACTOR_PAIR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "065A",
          "name": "PLACE_CHAR_AT_ATTRACTOR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "065B",
          "name": "GET_PICKUP_COORDINATES",
          "num_params": 4,
          "short_desc": "Returns the X, Y and Z coordinates of the pickup",
          "input": [
            {
              "name": "self",
              "type": "Pickup"
            },
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Pickup",
          "member": "GetCoordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "DecisionMaker"
            }
          ],
          "id": "065C",
          "name": "REMOVE_DECISION_MAKER",
          "num_params": 1,
          "short_desc": "Removes the decision maker",
          "class": "DecisionMaker",
          "member": "Remove",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "id": "065D",
          "name": "VIEW_INTEGER_VARIABLE",
          "num_params": 2,
          "short_desc": "Outputs an integer with a string",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "065E",
          "name": "VIEW_FLOAT_VARIABLE",
          "num_params": 2,
          "short_desc": "Outputs a float with a string",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "065F",
          "name": "WATCH_INTEGER_VARIABLE",
          "num_params": 2,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0660",
          "name": "WATCH_FLOAT_VARIABLE",
          "num_params": 2,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0661",
          "name": "BREAKPOINT",
          "num_params": 1,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0662",
          "name": "WRITE_DEBUG",
          "num_params": 1,
          "short_desc": "Outputs debug text",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0663",
          "name": "WRITE_DEBUG_WITH_INT",
          "num_params": 2,
          "short_desc": "Outputs a string with an integer",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0664",
          "name": "WRITE_DEBUG_WITH_FLOAT",
          "num_params": 2,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0665",
          "name": "GET_CHAR_MODEL",
          "num_params": 2,
          "short_desc": "Returns the characters model",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "modelId",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "member": "GetModel"
        },
        {
          "id": "0666",
          "name": "IS_CHAR_TOUCHING_ANY_OBJECT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "0667",
          "name": "TASK_AIM_GUN_AT_COORD",
          "num_params": 5,
          "short_desc": "Makes the character aim at the specified coordinates",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "AimGunAtCoord"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "0668",
          "name": "TASK_SHOOT_AT_COORD",
          "num_params": 5,
          "short_desc": "Makes the character turn round and shoot at the specified coordinates",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "ShootAtCoord"
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "type",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Particle",
              "source": "var_any"
            }
          ],
          "id": "0669",
          "name": "CREATE_FX_SYSTEM_ON_CHAR",
          "num_params": 7,
          "short_desc": "Creates a particle attached to a character",
          "class": "Particle",
          "member": "CreateOnChar",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "xDirection",
              "type": "float"
            },
            {
              "name": "yDirection",
              "type": "float"
            },
            {
              "name": "zDirection",
              "type": "float"
            },
            {
              "name": "type",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Particle",
              "source": "var_any"
            }
          ],
          "id": "066A",
          "name": "CREATE_FX_SYSTEM_ON_CHAR_WITH_DIRECTION",
          "num_params": 10,
          "short_desc": "Creates a particle effect attached to a character",
          "attrs": {
            "is_constructor": true
          },
          "class": "Particle",
          "member": "CreateOnCharWithDirection"
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "type",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Particle",
              "source": "var_any"
            }
          ],
          "id": "066B",
          "name": "CREATE_FX_SYSTEM_ON_CAR",
          "num_params": 7,
          "short_desc": "Creates a particle effect attached to a vehicle",
          "class": "Particle",
          "member": "CreateOnCar",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "xDirection",
              "type": "float"
            },
            {
              "name": "yDirection",
              "type": "float"
            },
            {
              "name": "zDirection",
              "type": "float"
            },
            {
              "name": "type",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Particle",
              "source": "var_any"
            }
          ],
          "id": "066C",
          "name": "CREATE_FX_SYSTEM_ON_CAR_WITH_DIRECTION",
          "num_params": 10,
          "short_desc": "Creates a particle and attaches it to the specified vehicle with the specified offset and direction",
          "class": "Particle",
          "member": "CreateOnCarWithDirection",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "type",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Particle",
              "source": "var_any"
            }
          ],
          "id": "066D",
          "name": "CREATE_FX_SYSTEM_ON_OBJECT",
          "num_params": 7,
          "short_desc": "Creates a particle effect on an object",
          "class": "Particle",
          "member": "CreateOnObject",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "xDirection",
              "type": "float"
            },
            {
              "name": "yDirection",
              "type": "float"
            },
            {
              "name": "zDirection",
              "type": "float"
            },
            {
              "name": "type",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Particle",
              "source": "var_any"
            }
          ],
          "id": "066E",
          "name": "CREATE_FX_SYSTEM_ON_OBJECT_WITH_DIRECTION",
          "num_params": 10,
          "short_desc": "Creates particle effect on an object",
          "class": "Particle",
          "attrs": {
            "is_constructor": true
          },
          "member": "CreateOnObjectWithDirection"
        },
        {
          "id": "066F",
          "name": "ADD_QUEUED_DIALOGUE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0670",
          "name": "IS_DIALOGUE_FINISHED",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0671",
          "name": "IS_DIALOGUE_PLAYING",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "id": "0672",
          "name": "TASK_DESTROY_CAR",
          "num_params": 2,
          "short_desc": "Makes the character attack a vehicle",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "DestroyCar"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "directionX",
              "type": "float"
            },
            {
              "name": "directionY",
              "type": "float"
            },
            {
              "name": "timeOnGround",
              "type": "int"
            }
          ],
          "id": "0673",
          "name": "TASK_DIVE_AND_GET_UP",
          "num_params": 4,
          "short_desc": "Makes the character perform a dive in the specified direction",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "DiveAndGetUp"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_vehicle"
            },
            {
              "name": "plateText",
              "type": "string"
            }
          ],
          "id": "0674",
          "name": "CUSTOM_PLATE_FOR_NEXT_CAR",
          "num_params": 2,
          "short_desc": "Sets the numberplate of the next car to be spawned with the specified model",
          "class": "Car",
          "member": "CustomPlateForNextCar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0675",
          "name": "CREATE_PED_GENERATOR_AT_ATTRACTOR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "id": "0676",
          "name": "TASK_SHUFFLE_TO_NEXT_CAR_SEAT",
          "num_params": 2,
          "short_desc": "Makes the character move to the seat on the right",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "ShuffleToNextCarSeat"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "other",
              "type": "Char"
            },
            {
              "name": "leadSpeaker",
              "type": "bool"
            },
            {
              "name": "_p4",
              "type": "int"
            }
          ],
          "id": "0677",
          "name": "TASK_CHAT_WITH_CHAR",
          "num_params": 4,
          "short_desc": "Makes the character chat with another character",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "ChatWithChar"
        },
        {
          "id": "0678",
          "name": "GET_CHAR_AT_SCRIPTED_ATTRACTOR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "xRotation",
              "type": "float"
            },
            {
              "name": "yRotation",
              "type": "float"
            },
            {
              "name": "zRotation",
              "type": "float"
            },
            {
              "name": "tilt",
              "type": "float"
            },
            {
              "name": "switchStyle",
              "type": "SwitchType"
            }
          ],
          "id": "0679",
          "name": "ATTACH_CAMERA_TO_VEHICLE",
          "num_params": 9,
          "short_desc": "Keeps the camera relative to the car with the specified offset",
          "class": "Camera",
          "member": "AttachToVehicle",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "tilt",
              "type": "float"
            },
            {
              "name": "switchStyle",
              "type": "SwitchType"
            }
          ],
          "id": "067A",
          "name": "ATTACH_CAMERA_TO_VEHICLE_LOOK_AT_VEHICLE",
          "num_params": 7,
          "short_desc": "Puts the camera on the vehicle like in 0679",
          "class": "Camera",
          "member": "AttachToVehicleLookAtVehicle",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "tilt",
              "type": "float"
            },
            {
              "name": "switchStyle",
              "type": "SwitchType"
            }
          ],
          "id": "067B",
          "name": "ATTACH_CAMERA_TO_VEHICLE_LOOK_AT_CHAR",
          "num_params": 7,
          "short_desc": "Attaches the camera to the vehicle and points it at the specified character",
          "class": "Camera",
          "member": "AttachToVehicleLookAtChar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "xRotation",
              "type": "float"
            },
            {
              "name": "yRotation",
              "type": "float"
            },
            {
              "name": "zRotation",
              "type": "float"
            },
            {
              "name": "tilt",
              "type": "float"
            },
            {
              "name": "switchStyle",
              "type": "SwitchType"
            }
          ],
          "id": "067C",
          "name": "ATTACH_CAMERA_TO_CHAR",
          "num_params": 9,
          "short_desc": "Keeps the camera relative to the actor with the specified offset",
          "class": "Camera",
          "member": "AttachToChar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "tilt",
              "type": "float"
            },
            {
              "name": "switchStyle",
              "type": "SwitchType"
            }
          ],
          "id": "067D",
          "name": "ATTACH_CAMERA_TO_CHAR_LOOK_AT_VEHICLE",
          "num_params": 7,
          "short_desc": "",
          "class": "Camera",
          "member": "AttachToCharLookAtVehicle",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "tilt",
              "type": "float"
            },
            {
              "name": "switchStyle",
              "type": "SwitchType"
            }
          ],
          "id": "067E",
          "name": "ATTACH_CAMERA_TO_CHAR_LOOK_AT_CHAR",
          "num_params": 7,
          "short_desc": "Puts the camera on the character like with 067C",
          "class": "Camera",
          "member": "AttachToCharLookAtChar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "lightMode",
              "type": "int"
            }
          ],
          "id": "067F",
          "name": "FORCE_CAR_LIGHTS",
          "num_params": 2,
          "short_desc": "Sets an override for the car's lights",
          "class": "Car",
          "member": "ForceLights"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Attractor"
            },
            {
              "name": "pedType",
              "type": "PedType"
            }
          ],
          "id": "0680",
          "name": "ADD_PEDTYPE_AS_ATTRACTOR_USER",
          "num_params": 2,
          "short_desc": "",
          "class": "Attractor",
          "member": "AddPedTypeAsUser"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "xRotation",
              "type": "float"
            },
            {
              "name": "yRotation",
              "type": "float"
            },
            {
              "name": "zRotation",
              "type": "float"
            }
          ],
          "id": "0681",
          "name": "ATTACH_OBJECT_TO_CAR",
          "num_params": 8,
          "short_desc": "",
          "class": "Object",
          "member": "AttachToCar"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "collisionDetection",
              "type": "bool"
            }
          ],
          "id": "0682",
          "name": "DETACH_OBJECT",
          "num_params": 5,
          "short_desc": "",
          "class": "Object",
          "member": "Detach"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "xRotation",
              "type": "float"
            },
            {
              "name": "yRotation",
              "type": "float"
            },
            {
              "name": "zRotation",
              "type": "float"
            }
          ],
          "id": "0683",
          "name": "ATTACH_CAR_TO_CAR",
          "num_params": 8,
          "short_desc": "",
          "class": "Car",
          "member": "AttachToCar"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "collisionDetection",
              "type": "bool"
            }
          ],
          "id": "0684",
          "name": "DETACH_CAR",
          "num_params": 5,
          "short_desc": "",
          "class": "Car",
          "member": "Detach"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "id": "0685",
          "name": "IS_OBJECT_ATTACHED",
          "num_params": 1,
          "short_desc": "",
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "member": "IsAttached"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "0686",
          "name": "IS_VEHICLE_ATTACHED",
          "num_params": 1,
          "short_desc": "",
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "IsAttached"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "id": "0687",
          "name": "CLEAR_CHAR_TASKS",
          "num_params": 1,
          "short_desc": "Clears the char's task, making them quit whatever they were doing",
          "class": "Char",
          "member": "ClearTasks"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "_p2",
              "type": "bool"
            },
            {
              "name": "_p3",
              "type": "bool"
            },
            {
              "name": "_p4",
              "type": "bool"
            }
          ],
          "id": "0688",
          "name": "TASK_TOGGLE_PED_THREAT_SCANNER",
          "num_params": 4,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "TogglePedThreatScanner"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "door",
              "type": "CarDoor"
            },
            {
              "name": "visibility",
              "type": "bool"
            }
          ],
          "id": "0689",
          "name": "POP_CAR_DOOR",
          "num_params": 3,
          "short_desc": "Removes the specified car door component from the car",
          "class": "Car",
          "member": "PopDoor"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "door",
              "type": "CarDoor"
            }
          ],
          "id": "068A",
          "name": "FIX_CAR_DOOR",
          "num_params": 2,
          "short_desc": "Repairs the car door",
          "class": "Car",
          "member": "FixDoor"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "068B",
          "name": "TASK_EVERYONE_LEAVE_CAR",
          "num_params": 1,
          "short_desc": "Makes all passengers of the car leave it",
          "class": "Car",
          "member": "TaskEveryoneLeave"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "id": "068C",
          "name": "IS_PLAYER_TARGETTING_ANYTHING",
          "num_params": 1,
          "short_desc": "Returns true if the specified player is aiming at anything using autoaim",
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "member": "IsTargettingAnything"
        },
        {
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "068D",
          "name": "GET_ACTIVE_CAMERA_COORDINATES",
          "num_params": 3,
          "short_desc": "Stores the cameras coordinates",
          "class": "Camera",
          "member": "GetActiveCoordinates",
          "attrs": {
            "is_static": true
          }
        },
        {
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "068E",
          "name": "GET_ACTIVE_CAMERA_POINT_AT",
          "num_params": 3,
          "short_desc": "Gets the coordinates the camera is pointing to",
          "class": "Camera",
          "member": "GetActivePointAt",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "068F",
          "name": "GET_CLOSEST_BUYABLE_OBJECT_TO_PLAYER",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0690",
          "name": "OPEN_FRIEND_LIST",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0691",
          "name": "CLOSE_FRIEND_LIST",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0692",
          "name": "REMOVE_FRIEND_LIST",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0693",
          "name": "SET_PEDMODEL_AS_FRIEND",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0694",
          "name": "SET_PEDTYPE_AS_FRIEND",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0695",
          "name": "CLEAR_CHAR_FRIENDS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0696",
          "name": "SET_CHAR_FRIEND_LIST",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "panelId",
              "type": "int"
            },
            {
              "name": "visibility",
              "type": "bool"
            }
          ],
          "id": "0697",
          "name": "POP_CAR_PANEL",
          "num_params": 3,
          "short_desc": "",
          "class": "Car",
          "member": "PopPanel"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "panelId",
              "type": "int"
            }
          ],
          "id": "0698",
          "name": "FIX_CAR_PANEL",
          "num_params": 2,
          "short_desc": "",
          "class": "Car",
          "member": "FixPanel"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "type_Id",
              "type": "int"
            }
          ],
          "id": "0699",
          "name": "FIX_CAR_TYRE",
          "num_params": 2,
          "short_desc": "Repairs a car's tire",
          "class": "Car",
          "member": "FixTire"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "handle",
              "type": "Object"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "xRotation",
              "type": "float"
            },
            {
              "name": "yRotation",
              "type": "float"
            },
            {
              "name": "zRotation",
              "type": "float"
            }
          ],
          "id": "069A",
          "name": "ATTACH_OBJECT_TO_OBJECT",
          "num_params": 8,
          "short_desc": "",
          "class": "Object",
          "member": "AttachToObject"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "xRotation",
              "type": "float"
            },
            {
              "name": "yRotation",
              "type": "float"
            },
            {
              "name": "zRotation",
              "type": "float"
            }
          ],
          "id": "069B",
          "name": "ATTACH_OBJECT_TO_CHAR",
          "num_params": 8,
          "short_desc": "",
          "class": "Object",
          "member": "AttachToChar"
        },
        {
          "id": "069C",
          "name": "ATTACH_CAMERA_TO_OBJECT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "069D",
          "name": "ATTACH_CAMERA_TO_OBJECT_LOOK_AT_VEHICLE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "069E",
          "name": "ATTACH_CAMERA_TO_OBJECT_LOOK_AT_CHAR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "069F",
          "name": "ATTACH_CAMERA_TO_OBJECT_LOOK_AT_OBJECT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "06A0",
          "name": "ATTACH_CAMERA_TO_CHAR_LOOK_AT_OBJECT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "06A1",
          "name": "ATTACH_CAMERA_TO_VEHICLE_LOOK_AT_OBJECT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "06A2",
          "name": "GET_CAR_SPEED_VECTOR",
          "num_params": 4,
          "short_desc": "",
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "bool",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "bool",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "member": "GetSpeedVector"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "mass",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "06A3",
          "name": "GET_CAR_MASS",
          "num_params": 2,
          "short_desc": "Returns the vehicle's mass",
          "class": "Car",
          "member": "GetMass"
        },
        {
          "id": "06A4",
          "name": "TASK_KILL_THREATS_ON_FOOT_WHILE_DUCKING",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "06A5",
          "name": "TASK_DIVE_FROM_ATTACHMENT_AND_GET_UP",
          "num_params": 2,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "DiveFromAttachmentAndGetUp"
        },
        {
          "id": "06A6",
          "name": "TASK_PLAY_ANIM_WITH_VELOCITY_EXTRACTION",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "position",
              "type": "int"
            },
            {
              "name": "_p7",
              "type": "float"
            },
            {
              "name": "_p8",
              "type": "float"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "id": "06A7",
          "name": "ATTACH_CHAR_TO_BIKE",
          "num_params": 9,
          "short_desc": "",
          "class": "Char",
          "member": "AttachToBike"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "id": "06A8",
          "name": "TASK_GOTO_CHAR_OFFSET",
          "num_params": 5,
          "short_desc": "Approaches the char at the specified offset, specified by the radius and angle",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "GotoCharOffset"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "06A9",
          "name": "TASK_LOOK_AT_COORD",
          "num_params": 5,
          "short_desc": "Makes the actor look at the specified coordinates",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "LookAtCoord"
        },
        {
          "id": "06AA",
          "name": "IS_RECORDING_GOING_ON_FOR_CAR",
          "num_params": 1,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "06AB",
          "name": "HIDE_CHAR_WEAPON_FOR_SCRIPTED_CUTSCENE",
          "num_params": 2,
          "short_desc": "Hides all of the specified actor's weapons",
          "class": "Char",
          "member": "HideWeaponForScriptedCutscene"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "speed",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "06AC",
          "name": "GET_CHAR_SPEED",
          "num_params": 2,
          "short_desc": "Returns the actor's movement speed",
          "class": "Char",
          "member": "GetSpeed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Group"
            },
            {
              "name": "maskOrHandle",
              "type": "DecisionMakerGroup"
            }
          ],
          "id": "06AD",
          "name": "SET_GROUP_DECISION_MAKER",
          "num_params": 2,
          "short_desc": "Sets the decision maker for a group of characters",
          "class": "Group",
          "member": "SetDecisionMaker"
        },
        {
          "input": [
            {
              "name": "type",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "DecisionMakerGroup",
              "source": "var_any"
            }
          ],
          "id": "06AE",
          "name": "LOAD_GROUP_DECISION_MAKER",
          "num_params": 2,
          "short_desc": "Creates a decision maker for use on groups of actors",
          "class": "DecisionMakerGroup",
          "member": "Load",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "id": "06AF",
          "name": "DISABLE_PLAYER_SPRINT",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "member": "DisableSprint"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "06B0",
          "name": "TASK_SIT_DOWN",
          "num_params": 2,
          "short_desc": "Makes the actor sit down for the specified amount of time",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "SitDown"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xPoint",
              "type": "float"
            },
            {
              "name": "yPoint",
              "type": "float"
            },
            {
              "name": "zPoint",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "radiusPoint",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Searchlight",
              "source": "var_any"
            }
          ],
          "id": "06B1",
          "name": "CREATE_SEARCHLIGHT",
          "num_params": 9,
          "short_desc": "",
          "class": "Searchlight",
          "member": "Create",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Searchlight"
            }
          ],
          "id": "06B2",
          "name": "DELETE_SEARCHLIGHT",
          "num_params": 1,
          "short_desc": "",
          "class": "Searchlight",
          "member": "Delete",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "id": "06B3",
          "name": "DOES_SEARCHLIGHT_EXIST",
          "num_params": 1,
          "short_desc": "Returns true if the handle is a valid searchlight handle",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Searchlight",
          "member": "DoesExist"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Searchlight"
            },
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "fromZ",
              "type": "float"
            },
            {
              "name": "toX",
              "type": "float"
            },
            {
              "name": "toY",
              "type": "float"
            },
            {
              "name": "toZ",
              "type": "float"
            },
            {
              "name": "speed",
              "type": "float"
            }
          ],
          "id": "06B4",
          "name": "MOVE_SEARCHLIGHT_BETWEEN_COORDS",
          "num_params": 8,
          "short_desc": "Makes the specified searchlight travel between the two specified points with the specified speed",
          "class": "Searchlight",
          "member": "MoveBetweenCoords"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Searchlight"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "speed",
              "type": "float"
            }
          ],
          "id": "06B5",
          "name": "POINT_SEARCHLIGHT_AT_COORD",
          "num_params": 5,
          "short_desc": "Makes the searchlight target move/travel to the specified coords",
          "class": "Searchlight",
          "member": "PointAtCoord"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Searchlight"
            },
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "speed",
              "type": "float"
            }
          ],
          "id": "06B6",
          "name": "POINT_SEARCHLIGHT_AT_CHAR",
          "num_params": 3,
          "short_desc": "Makes the searchlight follow the specified actor",
          "class": "Searchlight",
          "member": "PointAtChar"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Searchlight"
            },
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "06B7",
          "name": "IS_CHAR_IN_SEARCHLIGHT",
          "num_params": 2,
          "short_desc": "Returns true if the searchlight has spotted the actor",
          "attrs": {
            "is_condition": true
          },
          "class": "Searchlight",
          "member": "IsCharIn"
        },
        {
          "id": "06B8",
          "name": "SET_GROUP_DEFAULT_TASK",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "06B9",
          "name": "HAS_CUTSCENE_LOADED",
          "num_params": 0,
          "short_desc": "Returns true if the cutscene has finished loading",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Cutscene",
          "member": "HasLoaded"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "06BA",
          "name": "TASK_TURN_CHAR_TO_FACE_COORD",
          "num_params": 4,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "TurnCharToFaceCoord"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "speed",
              "type": "int"
            }
          ],
          "id": "06BB",
          "name": "TASK_DRIVE_POINT_ROUTE",
          "num_params": 3,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "DrivePointRoute"
        },
        {
          "input": [
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "fromZ",
              "type": "float"
            },
            {
              "name": "toX",
              "type": "float"
            },
            {
              "name": "toY",
              "type": "float"
            },
            {
              "name": "toZ",
              "type": "float"
            },
            {
              "name": "energy",
              "type": "int"
            }
          ],
          "id": "06BC",
          "name": "FIRE_SINGLE_BULLET",
          "num_params": 7,
          "short_desc": "",
          "class": "World",
          "member": "FireSingleBullet",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "fromZ",
              "type": "float"
            },
            {
              "name": "toX",
              "type": "float"
            },
            {
              "name": "toY",
              "type": "float"
            },
            {
              "name": "toZ",
              "type": "float"
            },
            {
              "name": "buildings",
              "type": "bool"
            },
            {
              "name": "cars",
              "type": "bool"
            },
            {
              "name": "chars",
              "type": "bool"
            },
            {
              "name": "objects",
              "type": "bool"
            },
            {
              "name": "particles",
              "type": "bool"
            }
          ],
          "id": "06BD",
          "name": "IS_LINE_OF_SIGHT_CLEAR",
          "num_params": 11,
          "short_desc": "Checks if there is something in the range of the two specified points",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "member": "IsLineOfSightClear"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "angle",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "06BE",
          "name": "GET_CAR_ROLL",
          "num_params": 2,
          "short_desc": "Returns the Y Angle of the vehicle",
          "class": "Car",
          "member": "GetRoll"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Searchlight"
            },
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "speed",
              "type": "float"
            }
          ],
          "id": "06BF",
          "name": "POINT_SEARCHLIGHT_AT_VEHICLE",
          "num_params": 3,
          "short_desc": "",
          "class": "Searchlight",
          "member": "PointAtVehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Searchlight"
            },
            {
              "name": "handle",
              "type": "Car"
            }
          ],
          "id": "06C0",
          "name": "IS_VEHICLE_IN_SEARCHLIGHT",
          "num_params": 2,
          "short_desc": "Returns true if the searchlights light is on the vehicle",
          "attrs": {
            "is_condition": true
          },
          "class": "Searchlight",
          "member": "IsVehicleIn"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "xPoint",
              "type": "float"
            },
            {
              "name": "yPoint",
              "type": "float"
            },
            {
              "name": "zPoint",
              "type": "float"
            },
            {
              "name": "pointRadius",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Searchlight",
              "source": "var_any"
            }
          ],
          "id": "06C1",
          "name": "CREATE_SEARCHLIGHT_ON_VEHICLE",
          "num_params": 10,
          "short_desc": "Creates a searchlight-styled light cone on a car with the specified offset and points to a certain point",
          "attrs": {
            "is_constructor": true
          },
          "class": "Searchlight",
          "member": "CreateOnVehicle"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "mode",
              "type": "int"
            },
            {
              "name": "turnRadius",
              "type": "float"
            },
            {
              "name": "stopRadius",
              "type": "float"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            }
          ],
          "id": "06C2",
          "name": "TASK_GO_TO_COORD_WHILE_AIMING",
          "num_params": 11,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "GoToCoordWhileAiming"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "numFires",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "06C3",
          "name": "GET_NUMBER_OF_FIRES_IN_RANGE",
          "num_params": 5,
          "short_desc": "",
          "class": "World",
          "attrs": {
            "is_static": true
          },
          "member": "GetNumberOfFiresInRange"
        },
        {
          "input": [
            {
              "name": "searchlight",
              "type": "Searchlight"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "id": "06C4",
          "name": "ADD_BLIP_FOR_SEARCHLIGHT",
          "num_params": 2,
          "short_desc": "Creates a blip indicating the searchlights position on the radar",
          "class": "Blip",
          "member": "AddForSearchlight",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "06C5",
          "name": "SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_CAR",
          "num_params": 1,
          "short_desc": "",
          "class": "Car",
          "member": "SkipToEndAndStopPlaybackRecorded"
        },
        {
          "id": "06C6",
          "name": "TASK_OPEN_DRIVER_DOOR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "actionId",
              "type": "int"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "06C7",
          "name": "TASK_CAR_TEMP_ACTION",
          "num_params": 4,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "CarTempAction"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "06C8",
          "name": "SET_LA_RIOTS",
          "num_params": 1,
          "short_desc": "Enables the LS Riots, making smoke appear on houses, random car fires occur, peds stealing things and attacking each other in a frenzy",
          "class": "World",
          "member": "SetLaRiots",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "id": "06C9",
          "name": "REMOVE_CHAR_FROM_GROUP",
          "num_params": 1,
          "short_desc": "Removes the character from their current group",
          "class": "Char",
          "member": "RemoveFromGroup"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Searchlight"
            },
            {
              "name": "spotTower",
              "type": "Object"
            },
            {
              "name": "spotHousing",
              "type": "Object"
            },
            {
              "name": "spotBulb",
              "type": "Object"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            }
          ],
          "id": "06CA",
          "name": "ATTACH_SEARCHLIGHT_TO_SEARCHLIGHT_OBJECT",
          "num_params": 7,
          "short_desc": "Attaches the searchlight to the specified objects",
          "class": "Searchlight",
          "member": "AttachToObject"
        },
        {
          "id": "06CB",
          "name": "SET_VEHICLE_RECORDS_COLLISIONS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "06CC",
          "name": "DRAW_CROSS_IN_FRONT_OF_DEBUG_CAMERA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "06CD",
          "name": "DRAW_DEBUG_CUBE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "06CE",
          "name": "GET_CAR_LAST_ROUTE_COORDS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "06CF",
          "name": "DISPLAY_TIMER_BARS",
          "num_params": 1,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "06D0",
          "name": "SWITCH_EMERGENCY_SERVICES",
          "num_params": 1,
          "short_desc": "Sets whether emergency traffic spawns",
          "class": "Game",
          "member": "SwitchEmergencyServices",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "06D1",
          "name": "SET_VAR_TEXT_LABEL16",
          "num_params": 2,
          "short_desc": "Writes the string to the global variable",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "06D2",
          "name": "SET_LVAR_TEXT_LABEL16",
          "num_params": 2,
          "short_desc": "Writes the string to the local variable",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "06D3",
          "name": "VAR_TEXT_LABEL16",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "06D4",
          "name": "LVAR_TEXT_LABEL16",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "type",
              "type": "int"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "pointX",
              "type": "float"
            },
            {
              "name": "pointY",
              "type": "float"
            },
            {
              "name": "pointZ",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Checkpoint",
              "source": "var_any"
            }
          ],
          "id": "06D5",
          "name": "CREATE_CHECKPOINT",
          "num_params": 9,
          "short_desc": "",
          "class": "Checkpoint",
          "member": "Create",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Checkpoint"
            }
          ],
          "id": "06D6",
          "name": "DELETE_CHECKPOINT",
          "num_params": 1,
          "short_desc": "",
          "class": "Checkpoint",
          "member": "Delete",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "06D7",
          "name": "SWITCH_RANDOM_TRAINS",
          "num_params": 1,
          "short_desc": "Sets whether trains are generated",
          "class": "World",
          "member": "SwitchRandomTrains",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "type",
              "type": "int"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "direction",
              "type": "bool"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Train",
              "source": "var_any"
            }
          ],
          "id": "06D8",
          "name": "CREATE_MISSION_TRAIN",
          "num_params": 6,
          "short_desc": "Creates a script handled train from a predefined type (the type dictates how long the train is and the varieties of carriages) and sets the direction for the train to head in",
          "class": "Train",
          "member": "Create",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "id": "06D9",
          "name": "DELETE_MISSION_TRAINS",
          "num_params": 0,
          "short_desc": "Destroys all script-created trains",
          "class": "World",
          "member": "DeleteMissionTrains",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "06DA",
          "name": "MARK_MISSION_TRAINS_AS_NO_LONGER_NEEDED",
          "num_params": 0,
          "short_desc": "Marks the train as no longer needed by the script, allowing it to be deleted by the game",
          "class": "World",
          "member": "MarkMissionTrainsAsNoLongerNeeded",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "06DB",
          "name": "DELETE_ALL_TRAINS",
          "num_params": 0,
          "short_desc": "Destroys all trains, including those that are not created by the script",
          "class": "World",
          "member": "DeleteAllTrains",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Train"
            },
            {
              "name": "speed",
              "type": "float"
            }
          ],
          "id": "06DC",
          "name": "SET_TRAIN_SPEED",
          "num_params": 2,
          "short_desc": "Sets the trains acceleration",
          "class": "Train",
          "member": "SetSpeed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Train"
            },
            {
              "name": "speed",
              "type": "float"
            }
          ],
          "id": "06DD",
          "name": "SET_TRAIN_CRUISE_SPEED",
          "num_params": 2,
          "short_desc": "Sets the trains speed",
          "class": "Train",
          "member": "SetCruiseSpeed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Train"
            }
          ],
          "output": [
            {
              "name": "caboose",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "id": "06DE",
          "name": "GET_TRAIN_CABOOSE",
          "num_params": 2,
          "short_desc": "Gets the handle of the last carriage (known as the \"caboose\")",
          "class": "Train",
          "member": "GetCaboose"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "id": "06DF",
          "name": "DELETE_PLAYER",
          "num_params": 1,
          "short_desc": "Removes the specified player",
          "class": "Player",
          "member": "Delete",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "06E0",
          "name": "SET_TWO_PLAYER_CAMERA_MODE",
          "num_params": 1,
          "short_desc": "Enables the cooperative camera mode",
          "class": "Camera",
          "member": "SetTwoPlayerMode",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "targetVehicle",
              "type": "Car"
            },
            {
              "name": "missionId",
              "type": "CarMission"
            },
            {
              "name": "cruiseSpeed",
              "type": "float"
            },
            {
              "name": "drivingStyle",
              "type": "CarDrivingStyle"
            }
          ],
          "id": "06E1",
          "name": "TASK_CAR_MISSION",
          "num_params": 6,
          "short_desc": "Sets the car's current mission with various parameters",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "CarMission"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "06E2",
          "name": "TASK_GO_TO_OBJECT",
          "num_params": 4,
          "short_desc": "Makes the character go to an object",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "GoToObject"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "direction",
              "type": "bool"
            }
          ],
          "id": "06E3",
          "name": "TASK_WEAPON_ROLL",
          "num_params": 2,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "WeaponRoll"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "id": "06E4",
          "name": "TASK_CHAR_ARREST_CHAR",
          "num_params": 2,
          "short_desc": "Makes the character attempt to arrest another character",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "CharArrestChar"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "slotId",
              "type": "ModSlot"
            }
          ],
          "output": [
            {
              "name": "modelId",
              "type": "model_object",
              "source": "var_any"
            }
          ],
          "id": "06E5",
          "name": "GET_AVAILABLE_VEHICLE_MOD",
          "num_params": 3,
          "short_desc": "Returns a model id available for the vehicle's mod slot, or -1 otherwise",
          "class": "Car",
          "member": "GetAvailableMod"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_object"
            }
          ],
          "output": [
            {
              "name": "slotId",
              "type": "ModSlot",
              "source": "var_any"
            }
          ],
          "id": "06E6",
          "name": "GET_VEHICLE_MOD_TYPE",
          "num_params": 2,
          "short_desc": "Returns a slot the upgrade model is for",
          "class": "Streaming",
          "member": "GetVehicleModType",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "modelId",
              "type": "model_object"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "06E7",
          "name": "ADD_VEHICLE_MOD",
          "num_params": 3,
          "short_desc": "Adds a new mod with the model to the vehicle",
          "class": "Car",
          "member": "AddMod"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "modelId",
              "type": "model_object"
            }
          ],
          "id": "06E8",
          "name": "REMOVE_VEHICLE_MOD",
          "num_params": 2,
          "short_desc": "Removes the vehicle's mod with the specified model",
          "class": "Car",
          "member": "RemoveMod"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_object"
            }
          ],
          "id": "06E9",
          "name": "REQUEST_VEHICLE_MOD",
          "num_params": 1,
          "short_desc": "Loads the upgrade model and any associated models",
          "class": "Streaming",
          "member": "RequestVehicleMod",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_object"
            }
          ],
          "id": "06EA",
          "name": "HAS_VEHICLE_MOD_LOADED",
          "num_params": 1,
          "short_desc": "Returns true if the vehicle upgrade model has loaded",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "member": "HasVehicleModLoaded"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_object"
            }
          ],
          "id": "06EB",
          "name": "MARK_VEHICLE_MOD_AS_NO_LONGER_NEEDED",
          "num_params": 1,
          "short_desc": "Marks the vehicle upgrade model as no longer needed, allowing it to be unloaded by the streamer",
          "class": "Streaming",
          "member": "MarkVehicleModAsNoLongerNeeded",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "numPaintjobs",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "06EC",
          "name": "GET_NUM_AVAILABLE_PAINTJOBS",
          "num_params": 2,
          "short_desc": "Gets the number of possible paintjobs that can be applied to the car",
          "class": "Car",
          "member": "GetNumAvailablePaintjobs"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "paintjobId",
              "type": "int"
            }
          ],
          "id": "06ED",
          "name": "GIVE_VEHICLE_PAINTJOB",
          "num_params": 2,
          "short_desc": "Sets the car's paintjob",
          "class": "Car",
          "member": "GivePaintjob"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Group"
            }
          ],
          "id": "06EE",
          "name": "IS_GROUP_MEMBER",
          "num_params": 2,
          "short_desc": "Returns true if the character is a member of the specified group",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsGroupMember"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Group"
            }
          ],
          "id": "06EF",
          "name": "IS_GROUP_LEADER",
          "num_params": 2,
          "short_desc": "Returns true if the character is the leader of the specified group",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsGroupLeader"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Group"
            },
            {
              "name": "range",
              "type": "float"
            }
          ],
          "id": "06F0",
          "name": "SET_GROUP_SEPARATION_RANGE",
          "num_params": 2,
          "short_desc": "Sets how far members of the group can be from the leader before they are removed from the group",
          "class": "Group",
          "member": "SetSeparationRange"
        },
        {
          "input": [
            {
              "name": "distance",
              "type": "float"
            }
          ],
          "id": "06F1",
          "name": "LIMIT_TWO_PLAYER_DISTANCE",
          "num_params": 1,
          "short_desc": "Sets how far apart players can get on 2-player mode",
          "class": "Game",
          "member": "LimitTwoPlayerDistance",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "06F2",
          "name": "RELEASE_TWO_PLAYER_DISTANCE",
          "num_params": 0,
          "short_desc": "Releases the distance limit set by 06F1"
        },
        {
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "id": "06F3",
          "name": "SET_PLAYER_PLAYER_TARGETING",
          "num_params": 1,
          "short_desc": "Enables each player to target the other player"
        },
        {
          "id": "06F4",
          "name": "CREATE_SCRIPT_GANG_ROADBLOCK",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "ScriptFire"
            },
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "06F5",
          "name": "GET_SCRIPT_FIRE_COORDS",
          "num_params": 4,
          "short_desc": "Gets the coordinates of the fire",
          "class": "ScriptFire",
          "member": "GetCoords"
        },
        {
          "id": "06F6",
          "name": "CLEAR_TWO_PLAYER_CAMERA_MODE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "06F7",
          "name": "SET_PLAYER_PASSENGER_CAN_SHOOT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "xCoord",
              "type": "float"
            },
            {
              "name": "yCoord",
              "type": "float"
            },
            {
              "name": "zCoord",
              "type": "float"
            },
            {
              "name": "nth",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "heading",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "06F8",
          "name": "GET_NTH_CLOSEST_CAR_NODE_WITH_HEADING",
          "num_params": 8,
          "short_desc": "",
          "class": "Path",
          "member": "GetNthClosestCarNodeWithHeading",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "06F9",
          "name": "GET_HEIGHT_OF_CAR_WHEELS_FROM_GROUND",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "id": "06FA",
          "name": "SET_PLAYERS_CAN_BE_IN_SEPARATE_CARS",
          "num_params": 1,
          "short_desc": "Sets whether the players can be in separate cars during a 2-player mission"
        },
        {
          "id": "06FB",
          "name": "SWITCH_PLAYER_CROSSHAIR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "06FC",
          "name": "DOES_CAR_HAVE_STUCK_CAR_CHECK",
          "num_params": 1,
          "short_desc": "Returns true if the car has car stuck check enabled",
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "DoesHaveStuckCarCheck"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "speed",
              "type": "float"
            }
          ],
          "id": "06FD",
          "name": "SET_PLAYBACK_SPEED",
          "num_params": 2,
          "short_desc": "Sets the playback speed of the car playing a car recording",
          "class": "Car",
          "member": "SetPlaybackSpeed"
        },
        {
          "id": "06FE",
          "name": "GET_CAR_VALUE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "06FF",
          "name": "ARE_ANY_CHARS_NEAR_CHAR",
          "num_params": 2,
          "short_desc": "Returns true if any characters are within range of the character",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsNearAnyChars"
        },
        {
          "id": "0700",
          "name": "SKIP_CUTSCENE_START",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0701",
          "name": "SKIP_CUTSCENE_END",
          "num_params": 0,
          "short_desc": "",
          "class": "",
          "member": "",
          "attrs": {
            "is_keyword": true
          }
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "percent",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0702",
          "name": "GET_PERCENTAGE_TAGGED_IN_AREA",
          "num_params": 5,
          "short_desc": "Gets the percentage of the number of tags sprayed in the area",
          "class": "World",
          "member": "GetPercentageTaggedInArea",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "percent",
              "type": "int"
            }
          ],
          "id": "0703",
          "name": "SET_TAG_STATUS_IN_AREA",
          "num_params": 5,
          "short_desc": "Sets whether all tags in the area are sprayed",
          "class": "World",
          "member": "SetTagStatusInArea",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0704",
          "name": "CAR_GOTO_COORDINATES_RACING",
          "num_params": 4,
          "short_desc": "Makes the AI drive to the destination as fast as possible, trying to overtake other vehicles",
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "member": "GotoCoordinatesRacing",
          "class": "Car"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "pathId",
              "type": "int"
            }
          ],
          "id": "0705",
          "name": "START_PLAYBACK_RECORDED_CAR_USING_AI",
          "num_params": 2,
          "short_desc": "Starts the playback of a recorded car with driver AI enabled",
          "class": "Car",
          "member": "StartPlaybackRecordedUsingAi"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "amount",
              "type": "float"
            }
          ],
          "id": "0706",
          "name": "SKIP_IN_PLAYBACK_RECORDED_CAR",
          "num_params": 2,
          "short_desc": "Advances the recorded car playback by the specified amount",
          "class": "Car",
          "member": "SkipInPlaybackRecorded"
        },
        {
          "input": [
            {
              "name": "",
              "type": "label"
            }
          ],
          "id": "0707",
          "name": "SKIP_CUTSCENE_START_INTERNAL",
          "num_params": 1,
          "short_desc": "Enables skipping of the current scene",
          "attrs": {
            "is_keyword": true,
            "is_branch": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "DecisionMakerChar"
            },
            {
              "name": "eventId",
              "type": "int"
            }
          ],
          "id": "0708",
          "name": "CLEAR_CHAR_DECISION_MAKER_EVENT_RESPONSE",
          "num_params": 2,
          "short_desc": "Resets the task for the event of the specified decision maker",
          "class": "DecisionMakerChar",
          "member": "ClearEventResponse"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "DecisionMakerChar"
            },
            {
              "name": "eventId",
              "type": "int"
            },
            {
              "name": "taskId",
              "type": "int"
            },
            {
              "name": "respect",
              "type": "float"
            },
            {
              "name": "hate",
              "type": "float"
            },
            {
              "name": "like",
              "type": "float"
            },
            {
              "name": "dislike",
              "type": "float"
            },
            {
              "name": "inCar",
              "type": "bool"
            },
            {
              "name": "onFoot",
              "type": "bool"
            }
          ],
          "id": "0709",
          "name": "ADD_CHAR_DECISION_MAKER_EVENT_RESPONSE",
          "num_params": 9,
          "short_desc": "Sets which action should occur according to the event on the following parameters",
          "class": "DecisionMakerChar",
          "member": "AddEventResponse"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "boneId",
              "type": "int"
            },
            {
              "name": "_p7",
              "type": "int"
            },
            {
              "name": "animationName",
              "type": "string"
            },
            {
              "name": "animationFile",
              "type": "string"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "070A",
          "name": "TASK_PICK_UP_OBJECT",
          "num_params": 10,
          "short_desc": "Attaches the specified actor to an object with the optional addition of having it perform an animation",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "PickUpObject"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "070B",
          "name": "DROP_OBJECT",
          "num_params": 2,
          "short_desc": "",
          "class": "Char",
          "member": "DropObject"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "070C",
          "name": "EXPLODE_CAR_IN_CUTSCENE",
          "num_params": 1,
          "short_desc": "Makes the vehicle explode without affecting its surroundings",
          "class": "Car",
          "member": "ExplodeInCutscene"
        },
        {
          "id": "070D",
          "name": "BUILD_PLAYER_MODEL",
          "num_params": 1,
          "short_desc": "Rebuilds the player model, applying any required texture changes",
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "class": "Player",
          "member": "BuildModel"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Plane"
            },
            {
              "name": "handle",
              "type": "Player"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "070E",
          "name": "PLANE_ATTACK_PLAYER",
          "num_params": 3,
          "short_desc": "Sets the planes mission to attack the player",
          "class": "Plane",
          "member": "AttackPlayer"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Plane"
            },
            {
              "name": "heading",
              "type": "float"
            },
            {
              "name": "minAltitude",
              "type": "float"
            },
            {
              "name": "maxAltitude",
              "type": "float"
            }
          ],
          "id": "070F",
          "name": "PLANE_FLY_IN_DIRECTION",
          "num_params": 4,
          "short_desc": "",
          "class": "Plane",
          "member": "FlyInDirection"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Plane"
            },
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "0710",
          "name": "PLANE_FOLLOW_ENTITY",
          "num_params": 4,
          "short_desc": "",
          "class": "Plane",
          "member": "FollowEntity"
        },
        {
          "id": "0711",
          "name": "ALLOCATE_SCRIPT_TO_PED_GENERATOR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0712",
          "name": "ALLOCATE_SCRIPT_TO_RANDOM_PED",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "targetChar",
              "type": "Char"
            },
            {
              "name": "targetVehicle",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "style",
              "type": "int"
            },
            {
              "name": "rightHandCarSeat",
              "type": "bool"
            },
            {
              "name": "fireRate",
              "type": "int"
            }
          ],
          "id": "0713",
          "name": "TASK_DRIVE_BY",
          "num_params": 10,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "DriveBy"
        },
        {
          "id": "0714",
          "name": "SET_CAR_STAY_IN_SLOW_LANE",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "member": "SetStayInSlowLane"
        },
        {
          "input": [
            {
              "name": "player",
              "type": "Player"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "id": "0715",
          "name": "TAKE_REMOTE_CONTROL_OF_CAR",
          "num_params": 2,
          "short_desc": "Puts the specified player in control of a remote-control vehicle",
          "class": "Rc",
          "member": "TakeCar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_object"
            },
            {
              "name": "smashed",
              "type": "bool"
            },
            {
              "name": "damaged",
              "type": "bool"
            }
          ],
          "id": "0716",
          "name": "IS_CLOSEST_OBJECT_OF_TYPE_SMASHED_OR_DAMAGED",
          "num_params": 7,
          "short_desc": "",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "member": "IsClosestObjectOfTypeSmashedOrDamaged"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "0717",
          "name": "START_SETTING_UP_CONVERSATION",
          "num_params": 1,
          "short_desc": "Starts a conversation between the character and the player and clears the conversation lines",
          "class": "Conversation",
          "member": "StartSettingUp",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0718",
          "name": "SET_UP_CONVERSATION_NODE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0719",
          "name": "FINISH_SETTING_UP_CONVERSATION",
          "num_params": 0,
          "short_desc": "Begins a script-controlled conversation",
          "class": "Conversation",
          "member": "FinishSettingUp",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "speech",
              "type": "gxt_key"
            }
          ],
          "id": "071A",
          "name": "IS_CONVERSATION_AT_NODE",
          "num_params": 2,
          "short_desc": "Returns true if the conversation is at the specified node",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Conversation",
          "member": "IsAtNode"
        },
        {
          "id": "071B",
          "name": "CLEAR_ALL_CONVERSATIONS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "071C",
          "name": "GET_CHAR_LIGHTING",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "071D",
          "name": "SET_CLOSEST_OBJECT_OF_TYPE_RENDER_SCORCHED",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "health",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "071E",
          "name": "GET_OBJECT_HEALTH",
          "num_params": 2,
          "short_desc": "",
          "class": "Object",
          "member": "GetHealth"
        },
        {
          "id": "071F",
          "name": "SET_OBJECT_HEALTH",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "health",
              "type": "int"
            }
          ],
          "class": "Object",
          "member": "SetHealth"
        },
        {
          "id": "0720",
          "name": "GET_VEHICLE_WHEEL_UPGRADE_CLASS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0721",
          "name": "GET_NUM_WHEELS_IN_UPGRADE_CLASS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0722",
          "name": "GET_WHEEL_IN_UPGRADE_CLASS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "intensity",
              "type": "int"
            }
          ],
          "id": "0723",
          "name": "BREAK_OBJECT",
          "num_params": 2,
          "short_desc": "Smashes the object to pieces",
          "class": "Object",
          "member": "Break"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            },
            {
              "name": "handle",
              "type": "Player"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "0724",
          "name": "HELI_ATTACK_PLAYER",
          "num_params": 3,
          "short_desc": "Makes the heli follow and attack the current player in the given radius",
          "class": "Heli",
          "member": "AttackPlayer"
        },
        {
          "id": "0725",
          "name": "HELI_FLY_IN_DIRECTION",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            },
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "0726",
          "name": "HELI_FOLLOW_ENTITY",
          "num_params": 4,
          "short_desc": "Makes the heli follow the specified actor or vehicle in the air",
          "class": "Heli",
          "member": "FollowEntity"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            },
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "0727",
          "name": "POLICE_HELI_CHASE_ENTITY",
          "num_params": 4,
          "short_desc": "Makes the helicopter hunt down the character or the vehicle within the specified radius",
          "class": "Heli",
          "member": "ChaseEntity"
        },
        {
          "id": "0728",
          "name": "SET_UP_CONVERSATION_END_NODE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "start",
              "type": "bool"
            }
          ],
          "id": "0729",
          "name": "TASK_USE_MOBILE_PHONE",
          "num_params": 2,
          "short_desc": "Makes a character pull out a cellphone, answer it, and hold it to their ear",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "UseMobilePhone"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "id": "072A",
          "name": "TASK_WARP_CHAR_INTO_CAR_AS_DRIVER",
          "num_params": 2,
          "short_desc": "Warps the character into the specified vehicle's driver seat",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "WarpCharIntoCarAsDriver"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "seatId",
              "type": "int"
            }
          ],
          "id": "072B",
          "name": "TASK_WARP_CHAR_INTO_CAR_AS_PASSENGER",
          "num_params": 3,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "WarpCharIntoCarAsPassenger"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "072C",
          "name": "SWITCH_COPS_ON_BIKES",
          "num_params": 1,
          "short_desc": "Disables the game from creating police bikes and their riders on the roads",
          "class": "Game",
          "member": "SwitchCopsOnBikes",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "072D",
          "name": "IS_FLAME_IN_ANGLED_AREA_2D",
          "num_params": 6,
          "short_desc": "Returns true if there's any fire particles within the specified area",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "member": "IsFlameInAngledArea2D"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "072E",
          "name": "IS_FLAME_IN_ANGLED_AREA_3D",
          "num_params": 8,
          "short_desc": "Returns true if there's any flames within the specified area",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "member": "IsFlameInAngledArea3D"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "speed",
              "type": "float"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "stuck",
              "type": "bool"
            },
            {
              "name": "flipped",
              "type": "bool"
            },
            {
              "name": "warp",
              "type": "bool"
            },
            {
              "name": "pathId",
              "type": "int"
            }
          ],
          "id": "072F",
          "name": "ADD_STUCK_CAR_CHECK_WITH_WARP",
          "num_params": 7,
          "short_desc": "Attempts to automatically restore vehicles that get stuck or flipped",
          "attrs": {
            "is_static": true
          },
          "class": "StuckCarCheck",
          "member": "AddWithWarp"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "panelId",
              "type": "int"
            }
          ],
          "id": "0730",
          "name": "DAMAGE_CAR_PANEL",
          "num_params": 2,
          "short_desc": "Damages a panel on the car",
          "class": "Car",
          "member": "DamagePanel"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "yAngle",
              "type": "float"
            }
          ],
          "id": "0731",
          "name": "SET_CAR_ROLL",
          "num_params": 2,
          "short_desc": "Sets the Y Angle of the vehicle to the specified value",
          "class": "Car",
          "member": "SetRoll"
        },
        {
          "input": [
            {
              "name": "model",
              "type": "model_vehicle"
            }
          ],
          "id": "0732",
          "name": "SUPPRESS_CAR_MODEL",
          "num_params": 1,
          "short_desc": "Prevents the specified car model from spawning for car generators",
          "class": "CarGenerator",
          "member": "SuppressCarModel",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "id": "0733",
          "name": "DONT_SUPPRESS_CAR_MODEL",
          "num_params": 1,
          "short_desc": "Allows the specified car model to spawn for car generators",
          "class": "CarGenerator",
          "member": "DontSuppressCarModel",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0734",
          "name": "DONT_SUPPRESS_ANY_CAR_MODELS",
          "num_params": 0,
          "short_desc": "Resets the disabled car model list for car generators",
          "class": "CarGenerator",
          "member": "DontSuppressAnyCarModels",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0735",
          "name": "IS_PS2_KEYBOARD_KEY_PRESSED",
          "num_params": 1,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0736",
          "name": "IS_PS2_KEYBOARD_KEY_JUST_PRESSED",
          "num_params": 1,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0737",
          "name": "IS_CHAR_HOLDING_OBJECT",
          "num_params": 2,
          "short_desc": "Returns true if the actor is lifting the specified object",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Object"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsHoldingObject"
        },
        {
          "id": "0738",
          "name": "SET_ZONE_RADAR_COLOURS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0739",
          "name": "GIVE_LOWRIDER_SUSPENSION_TO_CAR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "073A",
          "name": "DOES_CAR_HAVE_LOWRIDER_SUSPENSION",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "073B",
          "name": "SET_CAR_CAN_GO_AGAINST_TRAFFIC",
          "num_params": 2,
          "short_desc": "Sets whether the vehicle will drive the wrong way on roads",
          "class": "Car",
          "member": "SetCanGoAgainstTraffic"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "door",
              "type": "CarDoor"
            }
          ],
          "id": "073C",
          "name": "DAMAGE_CAR_DOOR",
          "num_params": 2,
          "short_desc": "Damages a component on the vehicle",
          "class": "Car",
          "member": "DamageDoor"
        },
        {
          "id": "073D",
          "name": "GET_RANDOM_CAR_IN_SPHERE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "model",
              "type": "model_vehicle"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "id": "073E",
          "name": "GET_RANDOM_CAR_IN_SPHERE_NO_SAVE",
          "num_params": 6,
          "short_desc": "",
          "class": "World",
          "member": "GetRandomCarInSphereNoSave",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "civilian",
              "type": "bool"
            },
            {
              "name": "gang",
              "type": "bool"
            },
            {
              "name": "criminal",
              "type": "bool"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "id": "073F",
          "name": "GET_RANDOM_CHAR_IN_SPHERE",
          "num_params": 8,
          "short_desc": "",
          "class": "World",
          "member": "GetRandomCharInSphere",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0740",
          "name": "GET_COORDS_OF_CLOSEST_COLLECTABLE1",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0741",
          "name": "HAS_CHAR_BEEN_ARRESTED",
          "num_params": 1,
          "short_desc": "Returns true if the character has been arrested",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "HasBeenArrested"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Plane"
            },
            {
              "name": "throttle",
              "type": "float"
            }
          ],
          "id": "0742",
          "name": "SET_PLANE_THROTTLE",
          "num_params": 2,
          "short_desc": "",
          "class": "Plane",
          "member": "SetThrottle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "minAltitude",
              "type": "float"
            },
            {
              "name": "maxAltitude",
              "type": "float"
            }
          ],
          "id": "0743",
          "name": "HELI_LAND_AT_COORDS",
          "num_params": 6,
          "short_desc": "",
          "class": "Heli",
          "member": "LandAtCoords"
        },
        {
          "id": "0744",
          "name": "GET_STAT_CHANGE_AMOUNT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Plane"
            }
          ],
          "id": "0745",
          "name": "PLANE_STARTS_IN_AIR",
          "num_params": 1,
          "short_desc": "Provides the aircraft with full power so it can start flying mid-air",
          "class": "Plane",
          "member": "StartsInAir"
        },
        {
          "input": [
            {
              "name": "relationshipType",
              "type": "RelationshipType"
            },
            {
              "name": "ofPedType",
              "type": "PedType"
            },
            {
              "name": "toPedType",
              "type": "PedType"
            }
          ],
          "id": "0746",
          "name": "SET_RELATIONSHIP",
          "num_params": 3,
          "short_desc": "Sets the attitude of peds with one pedtype towards peds of another pedtype",
          "class": "Game",
          "member": "SetRelationship",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "relationshipType",
              "type": "RelationshipType"
            },
            {
              "name": "ofPedType",
              "type": "PedType"
            },
            {
              "name": "toPedType",
              "type": "PedType"
            }
          ],
          "id": "0747",
          "name": "CLEAR_RELATIONSHIP",
          "num_params": 3,
          "short_desc": "",
          "class": "Game",
          "member": "ClearRelationship",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0748",
          "name": "CLEAR_ALL_RELATIONSHIPS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "DecisionMakerGroup"
            },
            {
              "name": "eventId",
              "type": "int"
            }
          ],
          "id": "0749",
          "name": "CLEAR_GROUP_DECISION_MAKER_EVENT_RESPONSE",
          "num_params": 2,
          "short_desc": "Resets the task for the event of the specified group decision maker",
          "class": "DecisionMakerGroup",
          "member": "ClearEventResponse"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "DecisionMakerGroup"
            },
            {
              "name": "eventId",
              "type": "int"
            },
            {
              "name": "taskId",
              "type": "int"
            },
            {
              "name": "respect",
              "type": "float"
            },
            {
              "name": "hate",
              "type": "float"
            },
            {
              "name": "like",
              "type": "float"
            },
            {
              "name": "dislike",
              "type": "float"
            },
            {
              "name": "inCar",
              "type": "bool"
            },
            {
              "name": "onFoot",
              "type": "bool"
            }
          ],
          "id": "074A",
          "name": "ADD_GROUP_DECISION_MAKER_EVENT_RESPONSE",
          "num_params": 9,
          "short_desc": "Sets which action should occur according to the event on the following parameters",
          "class": "DecisionMakerGroup",
          "member": "AddEventResponse"
        },
        {
          "input": [
            {
              "name": "memorySlot",
              "type": "int"
            },
            {
              "name": "offsetLeft",
              "type": "float"
            },
            {
              "name": "offsetTop",
              "type": "float"
            },
            {
              "name": "height",
              "type": "float"
            },
            {
              "name": "width",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "red",
              "type": "int"
            },
            {
              "name": "green",
              "type": "int"
            },
            {
              "name": "blue",
              "type": "int"
            },
            {
              "name": "alpha",
              "type": "int"
            }
          ],
          "id": "074B",
          "name": "DRAW_SPRITE_WITH_ROTATION",
          "num_params": 10,
          "short_desc": "This is an extended version of 038D with scale and angle parameters",
          "class": "Hud",
          "member": "DrawSpriteWithRotation",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "attractor",
              "type": "Attractor"
            }
          ],
          "id": "074C",
          "name": "TASK_USE_ATTRACTOR",
          "num_params": 2,
          "short_desc": "",
          "class": "Task",
          "member": "UseAttractor",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "074D",
          "name": "TASK_SHOOT_AT_CHAR",
          "num_params": 3,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "ShootAtChar"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "_p3",
              "type": "int"
            }
          ],
          "id": "074E",
          "name": "SET_INFORM_RESPECTED_FRIENDS",
          "num_params": 3,
          "short_desc": "",
          "class": "Char",
          "member": "SetInformRespectedFriends"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "eventId",
              "type": "int"
            }
          ],
          "id": "074F",
          "name": "IS_CHAR_RESPONDING_TO_EVENT",
          "num_params": 2,
          "short_desc": "Returns true if the character is responding to the specified ped event",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsRespondingToEvent"
        },
        {
          "id": "0750",
          "name": "SET_OBJECT_VISIBLE",
          "num_params": 2,
          "short_desc": "Sets whether the object is visible",
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Object",
          "member": "SetVisible"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "threat",
              "type": "Char"
            },
            {
              "name": "runDistance",
              "type": "float"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "changeCourse",
              "type": "bool"
            },
            {
              "name": "_p6",
              "type": "int"
            },
            {
              "name": "_p7",
              "type": "int"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "0751",
          "name": "TASK_FLEE_CHAR_ANY_MEANS",
          "num_params": 8,
          "short_desc": "",
          "class": "Task",
          "member": "FleeCharAnyMeans",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0752",
          "name": "STOP_RECORDING_CAR",
          "num_params": 1,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0753",
          "name": "SET_ALERTNESS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0754",
          "name": "FLUSH_PATROL_ROUTE",
          "num_params": 0,
          "short_desc": "Clears all previous patrol data to start a new patrol route, which can be used in combination with 0755 to create patrol routes",
          "class": "Path",
          "member": "FlushPatrolRoute",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "animationName",
              "type": "string"
            },
            {
              "name": "animationFile",
              "type": "string"
            }
          ],
          "id": "0755",
          "name": "EXTEND_PATROL_ROUTE",
          "num_params": 5,
          "short_desc": "Adds a new point to the patrol route",
          "class": "Path",
          "member": "ExtendPatrolRoute",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0756",
          "name": "TASK_GO_ON_PATROL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0757",
          "name": "GET_PATROL_ALERTNESS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0758",
          "name": "SET_CHAR_SPECIAL_EVENT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0759",
          "name": "SET_ATTRACTOR_AS_COVER_NODE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "animationName",
              "type": "string"
            },
            {
              "name": "animationFile",
              "type": "string"
            },
            {
              "name": "framedelta",
              "type": "float"
            },
            {
              "name": "lockF",
              "type": "bool"
            },
            {
              "name": "loop",
              "type": "bool"
            }
          ],
          "id": "075A",
          "name": "PLAY_OBJECT_ANIM",
          "num_params": 6,
          "short_desc": "Plays an object animation",
          "class": "Object",
          "member": "PlayAnim"
        },
        {
          "input": [
            {
              "name": "zoom",
              "type": "int"
            }
          ],
          "id": "075B",
          "name": "SET_RADAR_ZOOM",
          "num_params": 1,
          "short_desc": "",
          "class": "Hud",
          "member": "SetRadarZoom",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "id": "075C",
          "name": "DOES_BLIP_EXIST",
          "num_params": 1,
          "short_desc": "Returns true if the handle is a valid blip handle",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Blip",
          "member": "DoesExist"
        },
        {
          "input": [
            {
              "name": "sectionName",
              "type": "string"
            }
          ],
          "id": "075D",
          "name": "LOAD_PRICES",
          "num_params": 1,
          "short_desc": "",
          "class": "Shopping",
          "member": "LoadPrices",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "id": "075E",
          "name": "LOAD_SHOP",
          "num_params": 1,
          "short_desc": "",
          "class": "Shopping",
          "member": "Load",
          "attrs": {
            "is_static": true
          }
        },
        {
          "output": [
            {
              "name": "numItems",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "075F",
          "name": "GET_NUMBER_OF_ITEMS_IN_SHOP",
          "num_params": 1,
          "short_desc": "",
          "class": "Shopping",
          "member": "GetNumberOfItems",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "nth",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "id",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0760",
          "name": "GET_ITEM_IN_SHOP",
          "num_params": 2,
          "short_desc": "Returns an identifier for an item associated with the shopping data entry",
          "class": "Shopping",
          "member": "GetItem",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "itemId",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "price",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0761",
          "name": "GET_PRICE_OF_ITEM",
          "num_params": 2,
          "short_desc": "",
          "class": "Shopping",
          "member": "GetPriceOfItem",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "0762",
          "name": "TASK_DEAD",
          "num_params": 1,
          "short_desc": "Kills the character",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "Dead"
        },
        {
          "id": "0763",
          "name": "SET_CAR_AS_MISSION_CAR",
          "num_params": 1,
          "short_desc": "Sets the script as the owner of the vehicle and adds it to the mission cleanup list",
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "member": "SetAsMissionCar"
        },
        {
          "id": "0764",
          "name": "IS_SEARCHLIGHT_IN_ANGLED_AREA_2D",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0765",
          "name": "IS_SEARCHLIGHT_IN_ANGLED_AREA_3D",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0766",
          "name": "SWITCH_SEARCHLIGHT_BULB",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            },
            {
              "name": "type",
              "type": "int"
            }
          ],
          "id": "0767",
          "name": "SET_ZONE_POPULATION_TYPE",
          "num_params": 2,
          "short_desc": "",
          "class": "Zone",
          "member": "SetPopulationType",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0768",
          "name": "SET_ZONE_GANG_CAP",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0769",
          "name": "GET_ZONE_GANG_CAP",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            },
            {
              "name": "strength",
              "type": "int"
            }
          ],
          "id": "076A",
          "name": "SET_ZONE_DEALER_STRENGTH",
          "num_params": 2,
          "short_desc": "Sets the total number of drug dealers in the zone",
          "class": "Zone",
          "member": "SetDealerStrength",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            }
          ],
          "output": [
            {
              "name": "density",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "076B",
          "name": "GET_ZONE_DEALER_STRENGTH",
          "num_params": 2,
          "short_desc": "Returns the drug dealer density of the specified zone",
          "class": "Zone",
          "member": "GetDealerStrength",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "zoneId",
              "type": "zone_key"
            },
            {
              "name": "gangId",
              "type": "GangType"
            },
            {
              "name": "density",
              "type": "int"
            }
          ],
          "id": "076C",
          "name": "SET_ZONE_GANG_STRENGTH",
          "num_params": 3,
          "short_desc": "Sets the density of the gang members in the specified zone",
          "class": "Zone",
          "member": "SetGangStrength",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            },
            {
              "name": "gangId",
              "type": "GangType"
            }
          ],
          "output": [
            {
              "name": "density",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "076D",
          "name": "GET_ZONE_GANG_STRENGTH",
          "num_params": 3,
          "short_desc": "Returns the density of the gang members in the specified zone",
          "class": "Zone",
          "member": "GetGangStrength",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "076E",
          "name": "SET_NO_POLICE_DURING_LA_RIOTS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "076F",
          "name": "IS_MESSAGE_BEING_DISPLAYED",
          "num_params": 0,
          "short_desc": "Returns true if a priority GXT string is displayed on screen",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Text",
          "member": "IsMessageBeingDisplayed"
        },
        {
          "id": "0770",
          "name": "SET_CHAR_IS_TARGET_PRIORITY",
          "num_params": 2,
          "short_desc": "Causes the auto aim to be more likely to target the specified actor than actors without this flag",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "member": "SetIsTargetPriority"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_vehicle"
            },
            {
              "name": "townId",
              "type": "int"
            }
          ],
          "id": "0771",
          "name": "CUSTOM_PLATE_DESIGN_FOR_NEXT_CAR",
          "num_params": 2,
          "short_desc": "Sets the town ID of the license plate which is created on the specified model, affecting which texture is chosen for the plate",
          "class": "Car",
          "member": "CustomPlateDesignForNextCar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "0772",
          "name": "TASK_GOTO_CAR",
          "num_params": 4,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "GotoCar"
        },
        {
          "id": "0773",
          "name": "CLEAR_HELP_WITH_THIS_LABEL",
          "num_params": 0,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0774",
          "name": "IS_SEARCHLIGHT_BULB_ON",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0775",
          "name": "CREATE_OIL_PUDDLE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "iplName",
              "type": "string"
            }
          ],
          "id": "0776",
          "name": "REQUEST_IPL",
          "num_params": 1,
          "short_desc": "",
          "class": "Streaming",
          "member": "RequestIpl",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "iplName",
              "type": "string"
            }
          ],
          "id": "0777",
          "name": "REMOVE_IPL",
          "num_params": 1,
          "short_desc": "",
          "class": "Streaming",
          "member": "RemoveIpl",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "iplName",
              "type": "string"
            }
          ],
          "id": "0778",
          "name": "REMOVE_IPL_DISCREETLY",
          "num_params": 1,
          "short_desc": "",
          "class": "Streaming",
          "member": "RemoveIplDiscreetly",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0779",
          "name": "TASK_OPEN_PASSENGER_DOOR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "relationshipType",
              "type": "RelationshipType"
            },
            {
              "name": "pedType",
              "type": "PedType"
            }
          ],
          "id": "077A",
          "name": "SET_CHAR_RELATIONSHIP",
          "num_params": 3,
          "short_desc": "",
          "class": "Char",
          "member": "SetRelationship"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "relationshipType",
              "type": "RelationshipType"
            },
            {
              "name": "toPedType",
              "type": "PedType"
            }
          ],
          "id": "077B",
          "name": "CLEAR_CHAR_RELATIONSHIP",
          "num_params": 3,
          "short_desc": "",
          "class": "Char",
          "member": "ClearRelationship"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "relationshipType",
              "type": "RelationshipType"
            }
          ],
          "id": "077C",
          "name": "CLEAR_ALL_CHAR_RELATIONSHIPS",
          "num_params": 2,
          "short_desc": "",
          "class": "Char",
          "member": "ClearAllRelationships"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "angle",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "077D",
          "name": "GET_CAR_PITCH",
          "num_params": 2,
          "short_desc": "Returns the X Angle of the vehicle",
          "class": "Car",
          "member": "GetPitch"
        },
        {
          "output": [
            {
              "name": "interiorId",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "077E",
          "name": "GET_AREA_VISIBLE",
          "num_params": 1,
          "short_desc": "Gets the current interior ID",
          "class": "Streaming",
          "member": "GetAreaVisible",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "077F",
          "name": "ADD_INT_TO_VAR_CONSOLE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            },
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "minAltitude",
              "type": "float"
            },
            {
              "name": "maxAltitude",
              "type": "any"
            }
          ],
          "id": "0780",
          "name": "HELI_KEEP_ENTITY_IN_VIEW",
          "num_params": 5,
          "short_desc": "",
          "class": "Heli",
          "member": "KeepEntityInView"
        },
        {
          "input": [
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "output": [
            {
              "name": "modelId",
              "type": "model_object",
              "source": "var_any"
            }
          ],
          "id": "0781",
          "name": "GET_WEAPONTYPE_MODEL",
          "num_params": 2,
          "short_desc": "Gets the model ID of the weapon according to the weapon type",
          "class": "Weapon",
          "member": "GetModel",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "output": [
            {
              "name": "slot",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0782",
          "name": "GET_WEAPONTYPE_SLOT",
          "num_params": 2,
          "short_desc": "",
          "class": "Weapon",
          "member": "GetSlot",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "itemId",
              "type": "int"
            },
            {
              "name": "flag",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "value",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0783",
          "name": "GET_SHOPPING_EXTRA_INFO",
          "num_params": 3,
          "short_desc": "",
          "class": "Shopping",
          "member": "GetExtraInfo",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "textureHash",
              "type": "int"
            },
            {
              "name": "modelHash",
              "type": "int"
            },
            {
              "name": "bodyPart",
              "type": "BodyPart"
            }
          ],
          "id": "0784",
          "name": "GIVE_PLAYER_CLOTHES",
          "num_params": 4,
          "short_desc": "",
          "class": "Player",
          "member": "GiveClothes"
        },
        {
          "id": "0785",
          "name": "GIVE_PLAYER_TATTOO",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "numFires",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0786",
          "name": "GET_NUMBER_OF_FIRES_IN_AREA",
          "num_params": 7,
          "short_desc": "Gets the number of fires within the specified area",
          "class": "World",
          "member": "GetNumberOfFiresInArea",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0787",
          "name": "SET_CHAR_TYRES_CAN_BE_BURST",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0788",
          "name": "ATTACH_WINCH_TO_HELI",
          "num_params": 2,
          "short_desc": "",
          "class": "Heli",
          "member": "AttachWinch"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            }
          ],
          "id": "0789",
          "name": "RELEASE_ENTITY_FROM_WINCH",
          "num_params": 1,
          "short_desc": "",
          "class": "Heli",
          "member": "ReleaseEntityFromWinch"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Train"
            },
            {
              "name": "number",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "carriage",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "id": "078A",
          "name": "GET_TRAIN_CARRIAGE",
          "num_params": 3,
          "short_desc": "Gets the nth train carriage",
          "class": "Train",
          "member": "GetCarriage"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            }
          ],
          "output": [
            {
              "name": "char",
              "type": "Char",
              "source": "var_any"
            },
            {
              "name": "vehicle",
              "type": "Car",
              "source": "var_any"
            },
            {
              "name": "object",
              "type": "Object",
              "source": "var_any"
            }
          ],
          "id": "078B",
          "name": "GRAB_ENTITY_ON_WINCH",
          "num_params": 4,
          "short_desc": "Retrieves the entity attached to the heli's magnet and returns to specific variables depending on the entities type",
          "class": "Heli",
          "member": "GrabEntityOnWinch"
        },
        {
          "input": [
            {
              "name": "itemId",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "name",
              "type": "string",
              "source": "var_any"
            }
          ],
          "id": "078C",
          "name": "GET_NAME_OF_ITEM",
          "num_params": 2,
          "short_desc": "",
          "class": "Shopping",
          "member": "GetNameOfItem",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "078D",
          "name": "ADD_FLOAT_TO_VAR_CONSOLE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "078E",
          "name": "TASK_DRAG_CHAR_FROM_CAR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "flag",
              "type": "bool"
            }
          ],
          "id": "078F",
          "name": "TASK_CLIMB",
          "num_params": 2,
          "short_desc": "Makes the character jump and climb on an object",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "Climb"
        },
        {
          "input": [
            {
              "name": "itemId",
              "type": "int"
            }
          ],
          "id": "0790",
          "name": "BUY_ITEM",
          "num_params": 1,
          "short_desc": "Charges the player for the purchase of the item and in many cases, automatically gives the item to the player",
          "class": "Shopping",
          "member": "BuyItem",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0791",
          "name": "BUY_TATTOO",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0792",
          "name": "CLEAR_CHAR_TASKS_IMMEDIATELY",
          "num_params": 1,
          "short_desc": "Clears all the characters tasks immediately, resetting the character to an idle state",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "member": "ClearTasksImmediately"
        },
        {
          "id": "0793",
          "name": "STORE_CLOTHES_STATE",
          "num_params": 0,
          "short_desc": "Stores the players current clothes to later be restored with 0794",
          "class": "Player",
          "member": "StoreClothesState",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0794",
          "name": "RESTORE_CLOTHES_STATE",
          "num_params": 0,
          "short_desc": "Restores the players clothes stored with 0793",
          "class": "Player",
          "member": "RestoreClothesState",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0795",
          "name": "DELETE_WINCH_FOR_HELI",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "output": [
            {
              "name": "height",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "0796",
          "name": "GET_ROPE_HEIGHT_FOR_OBJECT",
          "num_params": 2,
          "short_desc": "",
          "class": "Object",
          "member": "GetRopeHeight"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "height",
              "type": "float"
            }
          ],
          "id": "0797",
          "name": "SET_ROPE_HEIGHT_FOR_OBJECT",
          "num_params": 2,
          "short_desc": "",
          "class": "Object",
          "member": "SetRopeHeight"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "output": [
            {
              "name": "vehicle",
              "type": "Car",
              "source": "var_any"
            },
            {
              "name": "char",
              "type": "Char",
              "source": "var_any"
            },
            {
              "name": "object",
              "type": "Object",
              "source": "var_any"
            }
          ],
          "id": "0798",
          "name": "GRAB_ENTITY_ON_ROPE_FOR_OBJECT",
          "num_params": 4,
          "short_desc": "",
          "class": "Object",
          "member": "GrabEntityOnRope"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "id": "0799",
          "name": "RELEASE_ENTITY_FROM_ROPE_FOR_OBJECT",
          "num_params": 1,
          "short_desc": "",
          "class": "Object",
          "member": "ReleaseEntityFromRope"
        },
        {
          "id": "079A",
          "name": "ATTACH_CAR_TO_ROPE_FOR_OBJECT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "079B",
          "name": "ATTACH_CHAR_TO_ROPE_FOR_OBJECT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "079C",
          "name": "ATTACH_OBJECT_TO_ROPE_FOR_OBJECT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "079D",
          "name": "PLAYER_ENTERED_DOCK_CRANE",
          "num_params": 0,
          "short_desc": "Puts the player in the San Fierro dock crane",
          "class": "Crane",
          "member": "PlayerEnteredDockCrane",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "079E",
          "name": "PLAYER_ENTERED_BUILDINGSITE_CRANE",
          "num_params": 0,
          "short_desc": "Puts the player in the San Fierro building site crane",
          "class": "Crane",
          "member": "PlayerEnteredBuildingsiteCrane",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "079F",
          "name": "PLAYER_LEFT_CRANE",
          "num_params": 0,
          "short_desc": "Removes the player from the current crane",
          "class": "Crane",
          "member": "PlayerLeftCrane",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "07A0",
          "name": "PERFORM_SEQUENCE_TASK_FROM_PROGRESS",
          "num_params": 4,
          "short_desc": "",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "sequence",
              "type": "Sequence"
            },
            {
              "name": "_p3",
              "type": "int"
            },
            {
              "name": "_p4",
              "type": "int"
            }
          ],
          "class": "Char",
          "member": "PerformSequenceFromProgress"
        },
        {
          "input": [
            {
              "name": "moveState",
              "type": "MoveState"
            }
          ],
          "id": "07A1",
          "name": "SET_NEXT_DESIRED_MOVE_STATE",
          "num_params": 1,
          "short_desc": "Sets how the character chooses to go to their destination in the next task without a parameter specifying this",
          "class": "Char",
          "member": "SetNextDesiredMoveState",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "07A2",
          "name": "SET_NEXT_EVENT_RESPONSE_SEQUENCE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "radiusFrom",
              "type": "float"
            },
            {
              "name": "radiusTo",
              "type": "float"
            }
          ],
          "id": "07A3",
          "name": "TASK_GOTO_CHAR_AIMING",
          "num_params": 4,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "GotoCharAiming"
        },
        {
          "id": "07A4",
          "name": "GET_SEQUENCE_PROGRESS_RECURSIVE",
          "num_params": 3,
          "short_desc": "",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "_p2",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "_p3",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "member": "GetSequenceProgressRecursive"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "07A5",
          "name": "TASK_KILL_CHAR_ON_FOOT_TIMED",
          "num_params": 3,
          "short_desc": "Makes the character attack the specified character",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "KillCharOnFootTimed"
        },
        {
          "input": [
            {
              "name": "xCoord",
              "type": "float"
            },
            {
              "name": "yCoord",
              "type": "float"
            },
            {
              "name": "zCoord",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "07A6",
          "name": "GET_NEAREST_TAG_POSITION",
          "num_params": 6,
          "short_desc": "",
          "class": "World",
          "member": "GetNearestTagPosition",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "07A7",
          "name": "TASK_JETPACK",
          "num_params": 1,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "Jetpack"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "07A8",
          "name": "SET_AREA51_SAM_SITE",
          "num_params": 1,
          "short_desc": "Enables or disables the SAM site at the Area 51",
          "class": "Game",
          "member": "SetArea51SamSite",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Searchlight",
              "source": "var_any"
            }
          ],
          "id": "07A9",
          "name": "IS_CHAR_IN_ANY_SEARCHLIGHT",
          "num_params": 2,
          "short_desc": "Returns the handle for the searchlight that's targeting the character",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsInAnySearchlight"
        },
        {
          "id": "07AA",
          "name": "GET_SEARCHLIGHT_COORDS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Trailer"
            },
            {
              "name": "cab",
              "type": "Car"
            }
          ],
          "id": "07AB",
          "name": "IS_TRAILER_ATTACHED_TO_CAB",
          "num_params": 2,
          "short_desc": "Returns true if CAR A has CAR B attached to it like a trailer",
          "attrs": {
            "is_condition": true
          },
          "class": "Trailer",
          "member": "IsAttachedToCab"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Trailer"
            },
            {
              "name": "cab",
              "type": "Car"
            }
          ],
          "id": "07AC",
          "name": "DETACH_TRAILER_FROM_CAB",
          "num_params": 2,
          "short_desc": "Detaches the trailer from the car which it is attached to",
          "class": "Trailer",
          "member": "DetachFromCab"
        },
        {
          "id": "07AD",
          "name": "GET_TRAILER_ATTACHED_TO_CAB",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "07AE",
          "name": "GET_CAB_ATTACHED_TO_TRAILER",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Group",
              "source": "var_any"
            }
          ],
          "id": "07AF",
          "name": "GET_PLAYER_GROUP",
          "num_params": 2,
          "short_desc": "",
          "class": "Player",
          "member": "GetGroup"
        },
        {
          "output": [
            {
              "name": "name",
              "type": "string",
              "source": "var_any"
            }
          ],
          "id": "07B0",
          "name": "GET_LOADED_SHOP",
          "num_params": 1,
          "short_desc": "Returns the name of currently loaded subsection in shopping",
          "class": "Shopping",
          "member": "GetLoaded",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "_p1",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "_p2",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "_p3",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "_p4",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "07B1",
          "name": "GET_BEAT_PROXIMITY",
          "num_params": 4,
          "short_desc": "",
          "class": "Audio",
          "member": "GetBeatProximity",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "07B2",
          "name": "SET_BEAT_ZONE_SIZE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Group"
            },
            {
              "name": "defaultTaskAllocator",
              "type": "DefaultTaskAllocator"
            }
          ],
          "id": "07B3",
          "name": "SET_GROUP_DEFAULT_TASK_ALLOCATOR",
          "num_params": 2,
          "short_desc": "",
          "class": "Group",
          "member": "SetDefaultTaskAllocator"
        },
        {
          "id": "07B4",
          "name": "SET_PLAYER_GROUP_RECRUITMENT",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "member": "SetGroupRecruitment"
        },
        {
          "id": "07B5",
          "name": "DISPLAY_TWO_ONSCREEN_COUNTERS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "07B6",
          "name": "DISPLAY_TWO_ONSCREEN_COUNTERS_WITH_STRING",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "07B7",
          "name": "DISPLAY_NTH_TWO_ONSCREEN_COUNTERS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "07B8",
          "name": "DISPLAY_NTH_TWO_ONSCREEN_COUNTERS_WITH_STRING",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "07B9",
          "name": "TASK_KILL_CHAR_ON_FOOT_PATROL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "07BA",
          "name": "HELI_AIM_AHEAD_OF_TARGET_ENTITY",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            },
            {
              "name": "_p2",
              "type": "int"
            }
          ],
          "id": "07BB",
          "name": "ACTIVATE_HELI_SPEED_CHEAT",
          "num_params": 2,
          "short_desc": "Provides the heli with extra thrust power",
          "class": "Heli",
          "member": "ActivateSpeedCheat"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "decisionMakerChar",
              "type": "DecisionMakerChar"
            }
          ],
          "id": "07BC",
          "name": "TASK_SET_CHAR_DECISION_MAKER",
          "num_params": 2,
          "short_desc": "Sets the decision maker used by the specified actor",
          "class": "Task",
          "member": "SetCharDecisionMaker",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Train"
            }
          ],
          "id": "07BD",
          "name": "DELETE_MISSION_TRAIN",
          "num_params": 1,
          "short_desc": "Removes the specified script created train",
          "class": "Train",
          "member": "Delete",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Train"
            }
          ],
          "id": "07BE",
          "name": "MARK_MISSION_TRAIN_AS_NO_LONGER_NEEDED",
          "num_params": 1,
          "short_desc": "Removes the specified script created train from the list of trains that the game shouldn't delete",
          "class": "Train",
          "member": "MarkAsNoLongerNeeded"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Blip"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "07BF",
          "name": "SET_BLIP_ALWAYS_DISPLAY_ON_ZOOMED_RADAR",
          "num_params": 2,
          "short_desc": "Sets whether the tracking blip will remain regardless of the entities existance",
          "class": "Blip",
          "member": "SetAlwaysDisplayOnZoomedRadar"
        },
        {
          "input": [
            {
              "name": "pathId",
              "type": "int"
            }
          ],
          "id": "07C0",
          "name": "REQUEST_CAR_RECORDING",
          "num_params": 1,
          "short_desc": "Loads the specified car recording",
          "class": "Streaming",
          "member": "RequestCarRecording",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "pathId",
              "type": "int"
            }
          ],
          "id": "07C1",
          "name": "HAS_CAR_RECORDING_BEEN_LOADED",
          "num_params": 1,
          "short_desc": "Returns true if the car recording has finished loading",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "member": "HasCarRecordingBeenLoaded"
        },
        {
          "id": "07C2",
          "name": "DISPLAY_PLAYBACK_RECORDED_CAR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "w",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "07C3",
          "name": "GET_OBJECT_QUATERNION",
          "num_params": 5,
          "short_desc": "Gets the object's quaternion",
          "class": "Object",
          "member": "GetQuaternion"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "w",
              "type": "float"
            }
          ],
          "id": "07C4",
          "name": "SET_OBJECT_QUATERNION",
          "num_params": 5,
          "short_desc": "Sets the object's quaternion",
          "class": "Object",
          "member": "SetQuaternion"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "w",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "07C5",
          "name": "GET_VEHICLE_QUATERNION",
          "num_params": 5,
          "short_desc": "Gets the quaternion values of the car",
          "class": "Car",
          "member": "GetQuaternion"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "w",
              "type": "float"
            }
          ],
          "id": "07C6",
          "name": "SET_VEHICLE_QUATERNION",
          "num_params": 5,
          "short_desc": "Sets the rotation of a vehicle using quaternion values",
          "class": "Car",
          "member": "SetQuaternion"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Train"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "07C7",
          "name": "SET_MISSION_TRAIN_COORDINATES",
          "num_params": 4,
          "short_desc": "Puts the train on the rails nearest to the specified coordinates",
          "class": "Train",
          "member": "SetCoordinates"
        },
        {
          "id": "07C8",
          "name": "DISPLAY_DEBUG_MESSAGE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            }
          ],
          "id": "07C9",
          "name": "TASK_COMPLEX_PICKUP_OBJECT",
          "num_params": 2,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "ComplexPickupObject"
        },
        {
          "id": "07CA",
          "name": "TASK_SIMPLE_PUTDOWN_OBJECT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "07CB",
          "name": "LISTEN_TO_PLAYER_GROUP_COMMANDS",
          "num_params": 2,
          "short_desc": "",
          "class": "Char",
          "member": "ListenToPlayerGroupCommands"
        },
        {
          "input": [
            {
              "name": "playerId",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "07CC",
          "name": "SET_PLAYER_ENTER_CAR_BUTTON",
          "num_params": 2,
          "short_desc": "Sets whether the player can enter and exit vehicles",
          "class": "Pad",
          "member": "SetPlayerEnterCarButton",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "07CD",
          "name": "TASK_CHAR_SLIDE_TO_COORD",
          "num_params": 6,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "CharSlideToCoord"
        },
        {
          "id": "07CE",
          "name": "SET_BULLET_WHIZZ_BY_DISTANCE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "07CF",
          "name": "SET_TWO_PLAYER_CAM_MODE_SEPARATE_CARS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "output": [
            {
              "name": "day",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "07D0",
          "name": "GET_CURRENT_DAY_OF_WEEK",
          "num_params": 1,
          "short_desc": "Returns an integer representation of the in-game day of the week",
          "class": "Clock",
          "member": "GetCurrentDayOfWeek",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "07D1",
          "name": "SET_CURRENT_DAY_OF_WEEK",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "07D2",
          "name": "ACTIVATE_INTERIORS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "id",
              "type": "script_id"
            },
            {
              "name": "_p2",
              "type": "string"
            }
          ],
          "id": "07D3",
          "name": "REGISTER_SCRIPT_BRAIN_FOR_CODE_USE",
          "num_params": 2,
          "short_desc": "Sets the name for the script brain, enabling it to be initiated by the EXE",
          "class": "StreamedScript",
          "member": "RegisterScriptBrainForCodeUse",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "07D4",
          "name": "REGISTER_OBJECT_SCRIPT_BRAIN_FOR_CODE_USE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "xRotation",
              "type": "float"
            },
            {
              "name": "yRotation",
              "type": "float"
            },
            {
              "name": "zRotation",
              "type": "float"
            }
          ],
          "id": "07D5",
          "name": "APPLY_FORCE_TO_CAR",
          "num_params": 7,
          "short_desc": "",
          "class": "Car",
          "member": "ApplyForce"
        },
        {
          "id": "07D6",
          "name": "IS_INT_LVAR_EQUAL_TO_INT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the integer value of the local variable is equivalent to the integer value of the global variable",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "id": "07D7",
          "name": "IS_FLOAT_LVAR_EQUAL_TO_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the float value of the local variable is equivalent to the float value of the global variable",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "id": "07D8",
          "name": "IS_INT_LVAR_NOT_EQUAL_TO_INT_VAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "07D9",
          "name": "IS_FLOAT_LVAR_NOT_EQUAL_TO_FLOAT_VAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "07DA",
          "name": "ADD_TO_CAR_ROTATION_VELOCITY",
          "num_params": 4,
          "short_desc": "",
          "class": "Car",
          "member": "AddToRotationVelocity"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "07DB",
          "name": "SET_CAR_ROTATION_VELOCITY",
          "num_params": 4,
          "short_desc": "",
          "class": "Car",
          "member": "SetRotationVelocity"
        },
        {
          "id": "07DC",
          "name": "GET_CAR_ROTATION_VELOCITY",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "07DD",
          "name": "SET_CHAR_SHOOT_RATE",
          "num_params": 2,
          "short_desc": "Sets the attack rate of the actor",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "rate",
              "type": "int"
            }
          ],
          "class": "Char",
          "member": "SetShootRate"
        },
        {
          "input": [
            {
              "name": "modeId",
              "type": "model_any"
            }
          ],
          "id": "07DE",
          "name": "IS_MODEL_IN_CDIMAGE",
          "num_params": 1,
          "short_desc": "Returns true if a file for the model exists",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "member": "IsModelInCdimage"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            }
          ],
          "id": "07DF",
          "name": "REMOVE_OIL_PUDDLES_IN_AREA",
          "num_params": 4,
          "short_desc": "",
          "class": "World",
          "member": "RemoveOilPuddlesInArea",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "07E0",
          "name": "SET_BLIP_AS_FRIENDLY",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "self",
              "type": "Blip"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Blip",
          "member": "SetAsFriendly"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "07E1",
          "name": "TASK_SWIM_TO_COORD",
          "num_params": 4,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "SwimToCoord"
        },
        {
          "id": "07E2",
          "name": "TASK_GO_STRAIGHT_TO_COORD_WITHOUT_STOPPING",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "07E3",
          "name": "GET_BEAT_INFO_FOR_CURRENT_TRACK",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "output": [
            {
              "name": "leftBottomBackX",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "leftBottomBackY",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "leftBottomBackZ",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "rightTopFrontX",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "rightTopFrontY",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "rightTopFrontZ",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "07E4",
          "name": "GET_MODEL_DIMENSIONS",
          "num_params": 7,
          "short_desc": "",
          "class": "Streaming",
          "member": "GetModelDimensions",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "maskOrOtherHandle",
              "type": "DecisionMakerChar"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "DecisionMakerChar",
              "source": "var_any"
            }
          ],
          "id": "07E5",
          "name": "COPY_CHAR_DECISION_MAKER",
          "num_params": 2,
          "short_desc": "Copies a decision makers data to another decision maker",
          "attrs": {
            "is_constructor": true
          },
          "class": "DecisionMakerChar",
          "member": "Copy"
        },
        {
          "input": [
            {
              "name": "mask",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "DecisionMakerGroup",
              "source": "var_any"
            }
          ],
          "id": "07E6",
          "name": "COPY_GROUP_DECISION_MAKER",
          "num_params": 2,
          "short_desc": "Copies a group decision makers data to another decision maker",
          "attrs": {
            "is_constructor": true
          },
          "class": "DecisionMakerGroup",
          "member": "Copy"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "speed",
              "type": "float"
            },
            {
              "name": "_p4",
              "type": "int"
            },
            {
              "name": "_p5",
              "type": "int"
            },
            {
              "name": "_p6",
              "type": "int"
            }
          ],
          "id": "07E7",
          "name": "TASK_DRIVE_POINT_ROUTE_ADVANCED",
          "num_params": 6,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "DrivePointRouteAdvanced"
        },
        {
          "input": [
            {
              "name": "ofPedType",
              "type": "PedType"
            },
            {
              "name": "toPedType",
              "type": "PedType"
            },
            {
              "name": "relationshipType",
              "type": "RelationshipType"
            }
          ],
          "id": "07E8",
          "name": "IS_RELATIONSHIP_SET",
          "num_params": 3,
          "short_desc": "Returns true if the specified relationship between ped types is set",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "member": "IsRelationshipSet"
        },
        {
          "id": "07E9",
          "name": "HAS_CHAR_SPOTTED_CAR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "07EA",
          "name": "SET_ROPE_HEIGHT_FOR_HELI",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "07EB",
          "name": "GET_ROPE_HEIGHT_FOR_HELI",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "07EC",
          "name": "IS_CAR_LOWRIDER",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "07ED",
          "name": "IS_PERFORMANCE_CAR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "07EE",
          "name": "SET_CAR_ALWAYS_CREATE_SKIDS",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "member": "SetAlwaysCreateSkids"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "townId",
              "type": "Town",
              "source": "var_any"
            }
          ],
          "id": "07EF",
          "name": "GET_CITY_FROM_COORDS",
          "num_params": 4,
          "short_desc": "Returns the town the specified location is within",
          "class": "World",
          "member": "GetCityFromCoords",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_object"
            }
          ],
          "id": "07F0",
          "name": "HAS_OBJECT_OF_TYPE_BEEN_SMASHED",
          "num_params": 5,
          "short_desc": "",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "member": "HasObjectOfTypeBeenSmashed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "id": "07F1",
          "name": "IS_PLAYER_PERFORMING_WHEELIE",
          "num_params": 1,
          "short_desc": "",
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "member": "IsPerformingWheelie"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "id": "07F2",
          "name": "IS_PLAYER_PERFORMING_STOPPIE",
          "num_params": 1,
          "short_desc": "Returns true if the player is performing a stoppie",
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "member": "IsPerformingStoppie"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Checkpoint"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "07F3",
          "name": "SET_CHECKPOINT_COORDS",
          "num_params": 4,
          "short_desc": "",
          "class": "Checkpoint",
          "member": "SetCoords"
        },
        {
          "id": "07F4",
          "name": "SET_ONSCREEN_TIMER_DISPLAY",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "_p2",
              "type": "float"
            },
            {
              "name": "_p3",
              "type": "float"
            },
            {
              "name": "_p4",
              "type": "float"
            },
            {
              "name": "_p5",
              "type": "float"
            }
          ],
          "id": "07F5",
          "name": "CONTROL_CAR_HYDRAULICS",
          "num_params": 5,
          "short_desc": "",
          "class": "Car",
          "member": "ControlHydraulics"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Group"
            }
          ],
          "output": [
            {
              "name": "numLeaders",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "numMembers",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "07F6",
          "name": "GET_GROUP_SIZE",
          "num_params": 3,
          "short_desc": "",
          "class": "Group",
          "member": "GetSize"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "07F7",
          "name": "SET_OBJECT_COLLISION_DAMAGE_EFFECT",
          "num_params": 2,
          "short_desc": "Sets whether the object can be destroyed or not",
          "class": "Object",
          "member": "SetCollisionDamageEffect"
        },
        {
          "id": "07F8",
          "name": "SET_CAR_FOLLOW_CAR",
          "num_params": 3,
          "short_desc": "",
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "class": "Car",
          "member": "SetFollowCar"
        },
        {
          "id": "07F9",
          "name": "PLAYER_ENTERED_QUARRY_CRANE",
          "num_params": 0,
          "short_desc": "Puts the player in the crane at the quarry near Las Venturras",
          "class": "Crane",
          "member": "PlayerEnteredQuarryCrane",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "07FA",
          "name": "PLAYER_ENTERED_LAS_VEGAS_CRANE",
          "num_params": 0,
          "short_desc": "Puts the player in the crane at the building site in Las Venturras",
          "class": "Crane",
          "member": "PlayerEnteredLasVegasCrane",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "interiorName",
              "type": "string"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "07FB",
          "name": "SWITCH_ENTRY_EXIT",
          "num_params": 2,
          "short_desc": "Locates the enex marker via the specified name and sets whether it is visible and usable",
          "class": "World",
          "member": "SwitchEntryExit",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "leftTopX",
              "type": "float"
            },
            {
              "name": "leftTopY",
              "type": "float"
            },
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "value",
              "type": "float"
            },
            {
              "name": "precision",
              "type": "int"
            }
          ],
          "id": "07FC",
          "name": "DISPLAY_TEXT_WITH_FLOAT",
          "num_params": 5,
          "short_desc": "Converts the float to two separate numbers to use in a 2-numbered GXT entry, and draws the text",
          "class": "Text",
          "member": "DisplayWithFloat",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "id": "07FD",
          "name": "DOES_GROUP_EXIST",
          "num_params": 1,
          "short_desc": "Returns true if the handle is a valid group handle",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Group",
          "member": "DoesExist"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "fightStyle",
              "type": "FightStyle"
            },
            {
              "name": "moveId",
              "type": "int"
            }
          ],
          "id": "07FE",
          "name": "GIVE_MELEE_ATTACK_TO_CHAR",
          "num_params": 3,
          "short_desc": "Sets the specified characters fighting style and moves",
          "class": "Char",
          "member": "GiveMeleeAttack"
        },
        {
          "id": "07FF",
          "name": "SET_CAR_HYDRAULICS",
          "num_params": 2,
          "short_desc": "Enables hydraulic suspension on the car",
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "member": "SetHydraulics"
        },
        {
          "id": "0800",
          "name": "IS_2PLAYER_GAME_GOING_ON",
          "num_params": 0,
          "short_desc": "Returns true if the game is in 2-player mode",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "member": "Is2PlayerGameGoingOn"
        },
        {
          "output": [
            {
              "name": "fov",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "0801",
          "name": "GET_CAMERA_FOV",
          "num_params": 1,
          "short_desc": "Returns the cameras field of view",
          "class": "Camera",
          "member": "GetFov",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0802",
          "name": "SET_GLOBAL_PED_SEARCH_PARAMS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0803",
          "name": "DOES_CAR_HAVE_HYDRAULICS",
          "num_params": 1,
          "short_desc": "Returns true if the car has hydraulics installed",
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "DoesHaveHydraulics"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "animationName",
              "type": "string"
            },
            {
              "name": "animationFile",
              "type": "string"
            },
            {
              "name": "frameDelta",
              "type": "float"
            },
            {
              "name": "loop",
              "type": "bool"
            },
            {
              "name": "lockX",
              "type": "bool"
            },
            {
              "name": "lockY",
              "type": "bool"
            },
            {
              "name": "lockF",
              "type": "bool"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "0804",
          "name": "TASK_CHAR_SLIDE_TO_COORD_AND_PLAY_ANIM",
          "num_params": 14,
          "short_desc": "Makes a character go to the specified point and play an anim",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "CharSlideToCoordAndPlayAnim"
        },
        {
          "id": "0805",
          "name": "ALLOCATE_SCRIPT_TO_OBJECT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "numPeds",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0806",
          "name": "GET_TOTAL_NUMBER_OF_PEDS_KILLED_BY_PLAYER",
          "num_params": 2,
          "short_desc": "Returns the number of peds killed by the player since the last reset (0297)",
          "class": "Player",
          "member": "GetTotalNumberOfPedsKilled"
        },
        {
          "id": "0807",
          "name": "SET_TWO_PLAYER_CAM_MODE_SAME_CAR_SHOOTING",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0808",
          "name": "SET_TWO_PLAYER_CAM_MODE_SAME_CAR_NO_SHOOTING",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0809",
          "name": "SET_TWO_PLAYER_CAM_MODE_NOT_BOTH_IN_CAR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "nth",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "080A",
          "name": "GET_LEVEL_DESIGN_COORDS_FOR_OBJECT",
          "num_params": 5,
          "short_desc": "",
          "class": "Object",
          "member": "GetLevelDesignCoords"
        },
        {
          "id": "080B",
          "name": "SAVE_TEXT_LABEL_TO_DEBUG_FILE",
          "num_params": 1,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "080C",
          "name": "GET_CHAR_BREATH",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "080D",
          "name": "SET_CHAR_BREATH",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "eventId",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "080E",
          "name": "GET_CHAR_HIGHEST_PRIORITY_EVENT",
          "num_params": 2,
          "short_desc": "Gets the characters active ped event",
          "member": "GetHighestPriorityEvent",
          "class": "Char"
        },
        {
          "id": "080F",
          "name": "ARE_PATHS_LOADED_FOR_CAR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "0810",
          "name": "GET_PARKING_NODE_IN_AREA",
          "num_params": 9,
          "short_desc": "Stores the coordinates of the nearest car park node in the specified area",
          "class": "World",
          "member": "GetParkingNodeInArea",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "id": "0811",
          "name": "GET_CAR_CHAR_IS_USING",
          "num_params": 2,
          "short_desc": "Stores a handle for the vehicle the character is in or entering",
          "class": "Char",
          "member": "GetCarIsUsing"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "animationName",
              "type": "string"
            },
            {
              "name": "animationFile",
              "type": "string"
            },
            {
              "name": "frameDelta",
              "type": "float"
            },
            {
              "name": "loop",
              "type": "bool"
            },
            {
              "name": "lockX",
              "type": "bool"
            },
            {
              "name": "lockY",
              "type": "bool"
            },
            {
              "name": "lockF",
              "type": "bool"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "0812",
          "name": "TASK_PLAY_ANIM_NON_INTERRUPTABLE",
          "num_params": 9,
          "short_desc": "Makes the character perform an animation",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "PlayAnimNonInterruptable"
        },
        {
          "id": "0813",
          "name": "FORCE_NEXT_DIE_ANIM",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "startX",
              "type": "float"
            },
            {
              "name": "startY",
              "type": "float"
            },
            {
              "name": "startZ",
              "type": "float"
            },
            {
              "name": "startRadiusX",
              "type": "float"
            },
            {
              "name": "startRadiusY",
              "type": "float"
            },
            {
              "name": "startRadiusZ",
              "type": "float"
            },
            {
              "name": "finishX",
              "type": "float"
            },
            {
              "name": "finishY",
              "type": "float"
            },
            {
              "name": "finishZ",
              "type": "float"
            },
            {
              "name": "finishRadiusX",
              "type": "float"
            },
            {
              "name": "finishRadiusY",
              "type": "float"
            },
            {
              "name": "finishRadiusZ",
              "type": "float"
            },
            {
              "name": "cameraX",
              "type": "float"
            },
            {
              "name": "cameraY",
              "type": "float"
            },
            {
              "name": "cameraZ",
              "type": "float"
            },
            {
              "name": "reward",
              "type": "int"
            }
          ],
          "id": "0814",
          "name": "ADD_STUNT_JUMP",
          "num_params": 16,
          "short_desc": "Creates a trigger for a Unique Jump bonus",
          "class": "World",
          "member": "AddStuntJump",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "0815",
          "name": "SET_OBJECT_COORDINATES_AND_VELOCITY",
          "num_params": 4,
          "short_desc": "Sets the object's coordinates without affecting the rotation",
          "class": "Object",
          "member": "SetCoordinatesAndVelocity"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0816",
          "name": "SET_CHAR_KINDA_STAY_IN_SAME_PLACE",
          "num_params": 2,
          "short_desc": "Sets whether the character shouldn't chase their victim far (to attempt a melee attack or get in weapon range)",
          "member": "SetKindaStayInSamePlace",
          "class": "Char"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "walkSpeed",
              "type": "int"
            },
            {
              "name": "routeMode",
              "type": "int"
            }
          ],
          "id": "0817",
          "name": "TASK_FOLLOW_PATROL_ROUTE",
          "num_params": 3,
          "short_desc": "Assigns the character to the patrol path",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "FollowPatrolRoute"
        },
        {
          "id": "0818",
          "name": "IS_CHAR_IN_AIR",
          "num_params": 1,
          "short_desc": "Returns true if the character is in the air",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "member": "IsInAir",
          "class": "Char",
          "attrs": {
            "is_condition": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "height",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "0819",
          "name": "GET_CHAR_HEIGHT_ABOVE_GROUND",
          "num_params": 2,
          "short_desc": "Returns the actor's distance from ground",
          "class": "Char",
          "member": "GetHeightAboveGround"
        },
        {
          "id": "081A",
          "name": "SET_CHAR_WEAPON_SKILL",
          "num_params": 2,
          "short_desc": "Sets the characters weapon accuracy",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "skillId",
              "type": "int"
            }
          ],
          "class": "Char",
          "member": "SetWeaponSkill"
        },
        {
          "id": "081B",
          "name": "ARE_PATHS_LOADED_IN_AREA",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "size",
              "type": "int"
            },
            {
              "name": "red",
              "type": "int"
            },
            {
              "name": "green",
              "type": "int"
            },
            {
              "name": "blue",
              "type": "int"
            },
            {
              "name": "alpha",
              "type": "int"
            }
          ],
          "id": "081C",
          "name": "SET_TEXT_EDGE",
          "num_params": 5,
          "short_desc": "Adds an outline to the next text drawn using a text draw command",
          "class": "Text",
          "member": "SetEdge",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "081D",
          "name": "SET_CAR_ENGINE_BROKEN",
          "num_params": 2,
          "short_desc": "Sets whether the car's engine is broken",
          "class": "Car",
          "member": "SetEngineBroken"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "id": "081E",
          "name": "IS_THIS_MODEL_A_BOAT",
          "num_params": 1,
          "short_desc": "Returns true if the model is the model of a boat",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "member": "IsThisModelABoat"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "id": "081F",
          "name": "IS_THIS_MODEL_A_PLANE",
          "num_params": 1,
          "short_desc": "Returns true if the model is the model of a plane",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "member": "IsThisModelAPlane"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "id": "0820",
          "name": "IS_THIS_MODEL_A_HELI",
          "num_params": 1,
          "short_desc": "Returns true if the model is the model of a helicopter",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "member": "IsThisModelAHeli"
        },
        {
          "id": "0821",
          "name": "IS_3D_COORD_IN_ZONE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0822",
          "name": "SET_FIRST_PERSON_IN_CAR_CAMERA_MODE",
          "num_params": 1,
          "short_desc": "Enables vehicle bumper view for the camera",
          "class": "Camera",
          "member": "SetFirstPersonInCarMode",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "partner",
              "type": "Char"
            },
            {
              "name": "_p3",
              "type": "float"
            },
            {
              "name": "_p4",
              "type": "int"
            }
          ],
          "id": "0823",
          "name": "TASK_GREET_PARTNER",
          "num_params": 4,
          "short_desc": "Makes a character greet another character with a handshake",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "GreetPartner"
        },
        {
          "id": "0824",
          "name": "GET_CLOSEST_PICKUP_COORDS_TO_COORD",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            }
          ],
          "id": "0825",
          "name": "SET_HELI_BLADES_FULL_SPEED",
          "num_params": 1,
          "short_desc": "Makes the helicopter rotor spin at full speed instantly",
          "class": "Heli",
          "member": "SetBladesFullSpeed"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0826",
          "name": "DISPLAY_HUD",
          "num_params": 1,
          "short_desc": "Sets whether the HUD displays",
          "class": "Hud",
          "member": "Display",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "lodObject",
              "type": "Object"
            }
          ],
          "id": "0827",
          "name": "CONNECT_LODS",
          "num_params": 2,
          "short_desc": "Sets which LOD object should show when the object is being viewed from far away",
          "class": "Object",
          "member": "ConnectLods"
        },
        {
          "input": [
            {
              "name": "limit",
              "type": "int"
            }
          ],
          "id": "0828",
          "name": "SET_MAX_FIRE_GENERATIONS",
          "num_params": 1,
          "short_desc": "Sets the limit on how many fires can be created from other fires when \"propagation\" was enabled on 02CF",
          "class": "Game",
          "member": "SetMaxFireGenerations",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "animationName",
              "type": "string"
            },
            {
              "name": "animationFile",
              "type": "string"
            },
            {
              "name": "frameDelta",
              "type": "float"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "0829",
          "name": "TASK_DIE_NAMED_ANIM",
          "num_params": 5,
          "short_desc": "Makes the actor perform an animation similarly to 0605",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "DieNamedAnim"
        },
        {
          "input": [
            {
              "name": "playerId",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "082A",
          "name": "SET_PLAYER_DUCK_BUTTON",
          "num_params": 2,
          "short_desc": "Sets whether the player can use the crouch button",
          "class": "Pad",
          "member": "SetPlayerDuckButton",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "082B",
          "name": "FIND_NEAREST_MULTIBUILDING",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "082C",
          "name": "SET_MULTIBUILDING_MODEL",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "082D",
          "name": "GET_NUMBER_MULTIBUILDING_MODELS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "082E",
          "name": "GET_MULTIBUILDING_MODEL_INDEX",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "082F",
          "name": "SET_CURRENT_BUYABLE_PROPERTY",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "id": "0830",
          "name": "SET_POOL_TABLE_COORDS",
          "num_params": 6,
          "short_desc": "Creates a pool collision object",
          "class": "World",
          "member": "SetPoolTableCoords",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0831",
          "name": "IS_AUDIO_BUILD",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0832",
          "name": "CLEAR_QUEUED_DIALOGUE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0833",
          "name": "HAS_OBJECT_BEEN_PHOTOGRAPHED",
          "num_params": 1,
          "short_desc": "Returns true if the object has been photographed",
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "member": "HasBeenPhotographed"
        },
        {
          "input": [
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            }
          ],
          "id": "0834",
          "name": "DO_CAMERA_BUMP",
          "num_params": 2,
          "short_desc": "Bumps the camera in the specified direction as if it had collided",
          "class": "Camera",
          "member": "DoBump",
          "attrs": {
            "is_static": true
          }
        },
        {
          "output": [
            {
              "name": "day",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "month",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0835",
          "name": "GET_CURRENT_DATE",
          "num_params": 2,
          "short_desc": "Returns the in-game day of the month and month of the year",
          "class": "Clock",
          "member": "GetCurrentDate",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "animationName",
              "type": "string"
            },
            {
              "name": "speed",
              "type": "float"
            }
          ],
          "id": "0836",
          "name": "SET_OBJECT_ANIM_SPEED",
          "num_params": 3,
          "short_desc": "Sets the object's animation speed",
          "class": "Object",
          "member": "SetAnimSpeed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "animationName",
              "type": "string"
            }
          ],
          "id": "0837",
          "name": "IS_OBJECT_PLAYING_ANIM",
          "num_params": 2,
          "short_desc": "Returns true if the object is playing the specified animation",
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "member": "IsPlayingAnim"
        },
        {
          "id": "0838",
          "name": "SET_OBJECT_ANIM_PLAYING_FLAG",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "animationName",
              "type": "string"
            }
          ],
          "output": [
            {
              "name": "time",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "0839",
          "name": "GET_OBJECT_ANIM_CURRENT_TIME",
          "num_params": 3,
          "short_desc": "Gets the current progress of the object's animation",
          "class": "Object",
          "member": "GetAnimCurrentTime"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "animationName",
              "type": "string"
            },
            {
              "name": "time",
              "type": "float"
            }
          ],
          "id": "083A",
          "name": "SET_OBJECT_ANIM_CURRENT_TIME",
          "num_params": 3,
          "short_desc": "Sets the progress of an animation, with 0",
          "class": "Object",
          "member": "SetAnimCurrentTime"
        },
        {
          "id": "083B",
          "name": "GET_OBJECT_ANIM_TOTAL_TIME",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "083C",
          "name": "SET_CHAR_VELOCITY",
          "num_params": 4,
          "short_desc": "Sets the characters velocity",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Char",
          "member": "SetVelocity"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "083D",
          "name": "GET_CHAR_VELOCITY",
          "num_params": 4,
          "short_desc": "Gets the characters velocity",
          "class": "Char",
          "member": "GetVelocity"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "083E",
          "name": "SET_CHAR_ROTATION",
          "num_params": 4,
          "short_desc": "Sets the characters rotation",
          "class": "Char",
          "member": "SetRotation"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "value",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "083F",
          "name": "GET_CAR_UPRIGHT_VALUE",
          "num_params": 2,
          "short_desc": "Gets the car's vertical angle",
          "class": "Car",
          "member": "GetUprightValue"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "interiorId",
              "type": "int"
            }
          ],
          "id": "0840",
          "name": "SET_VEHICLE_AREA_VISIBLE",
          "num_params": 2,
          "short_desc": "",
          "class": "Car",
          "member": "SetAreaVisible"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "_p2",
              "type": "int"
            }
          ],
          "id": "0841",
          "name": "SELECT_WEAPONS_FOR_VEHICLE",
          "num_params": 2,
          "short_desc": "Sets the vehicle to use its secondary guns",
          "class": "Car",
          "member": "SelectWeapons"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "cityId",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0842",
          "name": "GET_CITY_PLAYER_IS_IN",
          "num_params": 2,
          "short_desc": "Gets the players current town ID",
          "class": "Player",
          "member": "GetCityIsIn"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "name",
              "type": "string",
              "source": "var_any"
            }
          ],
          "id": "0843",
          "name": "GET_NAME_OF_ZONE",
          "num_params": 4,
          "short_desc": "Gets the name of the info zone at the specified coordinates",
          "class": "Zone",
          "member": "GetName",
          "attrs": {
            "is_static": true,
            "is_overload": true
          }
        },
        {
          "id": "0844",
          "name": "IS_VAR_TEXT_LABEL_EMPTY",
          "num_params": 1,
          "short_desc": "Returns true if the string is empty",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "id": "0845",
          "name": "IS_LVAR_TEXT_LABEL_EMPTY",
          "num_params": 1,
          "short_desc": "Returns true if the string is empty",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "id": "0846",
          "name": "IS_VAR_TEXT_LABEL16_EMPTY",
          "num_params": 1,
          "short_desc": "Returns true if the string is empty",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "id": "0847",
          "name": "IS_LVAR_TEXT_LABEL16_EMPTY",
          "num_params": 1,
          "short_desc": "Returns true if the string is empty",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "id": "0848",
          "name": "SWITCH",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0849",
          "name": "ENDSWITCH",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "084A",
          "name": "CASE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "084B",
          "name": "DEFAULT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "084D",
          "name": "ACTIVATE_INTERIOR_PEDS",
          "num_params": 1,
          "short_desc": "Enables ped spawning in interiors",
          "class": "Game",
          "member": "ActivateInteriorPeds",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "084E",
          "name": "SET_VEHICLE_CAN_BE_TARGETED",
          "num_params": 2,
          "short_desc": "Sets whether the vehicle can be targeted",
          "class": "Car",
          "member": "SetCanBeTargeted"
        },
        {
          "id": "084F",
          "name": "GET_GROUP_LEADER",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "id": "0850",
          "name": "TASK_FOLLOW_FOOTSTEPS",
          "num_params": 2,
          "short_desc": "Makes one actor follow another",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "FollowFootsteps"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "amount",
              "type": "int"
            },
            {
              "name": "damageArmour",
              "type": "bool"
            }
          ],
          "id": "0851",
          "name": "DAMAGE_CHAR",
          "num_params": 3,
          "short_desc": "Decreases the characters health",
          "class": "Char",
          "member": "Damage"
        },
        {
          "id": "0852",
          "name": "SET_CAR_CAN_BE_VISIBLY_DAMAGED",
          "num_params": 2,
          "short_desc": "Sets whether the vehicle can be visibly damaged",
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "member": "SetCanBeVisiblyDamaged"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            },
            {
              "name": "distance",
              "type": "int"
            }
          ],
          "id": "0853",
          "name": "SET_HELI_REACHED_TARGET_DISTANCE",
          "num_params": 2,
          "short_desc": "",
          "class": "Heli",
          "member": "SetReachedTargetDistance"
        },
        {
          "id": "0854",
          "name": "BLOCK_NODES_IN_AREA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "level",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "0855",
          "name": "GET_SOUND_LEVEL_AT_COORDS",
          "num_params": 5,
          "short_desc": "Gets the level that the character can hear noise at the specified position",
          "class": "World",
          "member": "GetSoundLevelAtCoords",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0856",
          "name": "SET_CHAR_ALLOWED_TO_DUCK",
          "num_params": 2,
          "short_desc": "Sets whether the character can crouch",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "member": "SetAllowedToDuck"
        },
        {
          "id": "0857",
          "name": "SET_WATER_CONFIGURATION",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "heading",
              "type": "float"
            },
            {
              "name": "rotationSpeed",
              "type": "float"
            }
          ],
          "id": "0858",
          "name": "SET_HEADING_FOR_ATTACHED_PLAYER",
          "num_params": 3,
          "short_desc": "Sets the view angle for the player attached to an object or vehicle",
          "class": "Player",
          "member": "SetHeadingForAttached"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "id": "0859",
          "name": "TASK_WALK_ALONGSIDE_CHAR",
          "num_params": 2,
          "short_desc": "Makes the character walk alongside the specified character",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "WalkAlongsideChar"
        },
        {
          "input": [
            {
              "name": "model",
              "type": "model_vehicle"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "085A",
          "name": "CREATE_EMERGENCY_SERVICES_CAR",
          "num_params": 4,
          "short_desc": "Creates an emergency service vehicle on the closest road to the specified coordinates",
          "class": "World",
          "member": "CreateEmergencyServicesCar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "085B",
          "name": "TASK_KINDA_STAY_IN_SAME_PLACE",
          "num_params": 2,
          "short_desc": "Makes the character stay near their current position",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "KindaStayInSamePlace"
        },
        {
          "id": "085C",
          "name": "TASK_USE_ATTRACTOR_ADVANCED",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "085D",
          "name": "TASK_FOLLOW_PATH_NODES_TO_COORD_SHOOTING",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "pathId",
              "type": "int"
            }
          ],
          "id": "085E",
          "name": "START_PLAYBACK_RECORDED_CAR_LOOPED",
          "num_params": 2,
          "short_desc": "Starts looped playback of a recorded car path",
          "class": "Car",
          "member": "StartPlaybackRecordedLooped"
        },
        {
          "id": "085F",
          "name": "START_PLAYBACK_RECORDED_CAR_USING_AI_LOOPED",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "interiorId",
              "type": "int"
            }
          ],
          "id": "0860",
          "name": "SET_CHAR_AREA_VISIBLE",
          "num_params": 2,
          "short_desc": "Sets the interior that the char is in",
          "class": "Char",
          "member": "SetAreaVisible"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "id": "0861",
          "name": "IS_ATTACHED_PLAYER_HEADING_ACHIEVED",
          "num_params": 1,
          "short_desc": "Returns true if the heading has finished being applied, as started by 0858",
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "member": "IsAttachedHeadingAchieved"
        },
        {
          "id": "0862",
          "name": "GET_MODEL_NAME_FOR_DEBUG_ONLY",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0863",
          "name": "TASK_USE_NEARBY_ENTRY_EXIT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0864",
          "name": "ENABLE_ENTRY_EXIT_PLAYER_GROUP_WARPING",
          "num_params": 4,
          "short_desc": "Enables the entry/exit marker in the specified radius of the coordinates",
          "class": "Game",
          "member": "EnableEntryExitPlayerGroupWarping",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0865",
          "name": "FREEZE_STATE_OF_INTERIORS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Object",
              "source": "var_any"
            }
          ],
          "id": "0866",
          "name": "GET_CLOSEST_STEALABLE_OBJECT",
          "num_params": 5,
          "short_desc": "Gets the closest object which can be stolen for burglary missions",
          "class": "World",
          "member": "GetClosestStealableObject",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "interiorId",
              "type": "int"
            }
          ],
          "id": "0867",
          "name": "IS_PROCEDURAL_INTERIOR_ACTIVE",
          "num_params": 1,
          "short_desc": "Returns true in interactive interiors",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "member": "IsProceduralInteriorActive"
        },
        {
          "id": "0868",
          "name": "CLEAR_THIS_VIEW_INTEGER_VARIABLE",
          "num_params": 1,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0869",
          "name": "CLEAR_THIS_VIEW_FLOAT_VARIABLE",
          "num_params": 1,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "086A",
          "name": "CLEAR_ALL_VIEW_VARIABLES",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "086B",
          "name": "CLEAR_THIS_INTEGER_WATCHPOINT",
          "num_params": 1,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "086C",
          "name": "CLEAR_THIS_FLOAT_WATCHPOINT",
          "num_params": 1,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "086D",
          "name": "CLEAR_ALL_BREAKPOINTS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "086E",
          "name": "CLEAR_ALL_WATCHPOINTS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "086F",
          "name": "IS_THIS_MODEL_A_TRAIN",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0870",
          "name": "GET_VEHICLE_CHAR_IS_STANDING_ON",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0871",
          "name": "SWITCH_START",
          "num_params": 18,
          "short_desc": "Takes an input value and uses it to determine which label to go to in the code",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            },
            {
              "name": "_p7",
              "type": "any"
            },
            {
              "name": "_p8",
              "type": "any"
            },
            {
              "name": "_p9",
              "type": "any"
            },
            {
              "name": "_p10",
              "type": "any"
            },
            {
              "name": "_p11",
              "type": "any"
            },
            {
              "name": "_p12",
              "type": "any"
            },
            {
              "name": "_p13",
              "type": "any"
            },
            {
              "name": "_p14",
              "type": "any"
            },
            {
              "name": "_p15",
              "type": "any"
            },
            {
              "name": "_p16",
              "type": "any"
            },
            {
              "name": "_p17",
              "type": "any"
            },
            {
              "name": "_p18",
              "type": "any"
            }
          ]
        },
        {
          "id": "0872",
          "name": "SWITCH_CONTINUED",
          "num_params": 18,
          "short_desc": "Accompanies 0871, increasing the number of possible cases",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            },
            {
              "name": "_p7",
              "type": "any"
            },
            {
              "name": "_p8",
              "type": "any"
            },
            {
              "name": "_p9",
              "type": "any"
            },
            {
              "name": "_p10",
              "type": "any"
            },
            {
              "name": "_p11",
              "type": "any"
            },
            {
              "name": "_p12",
              "type": "any"
            },
            {
              "name": "_p13",
              "type": "any"
            },
            {
              "name": "_p14",
              "type": "any"
            },
            {
              "name": "_p15",
              "type": "any"
            },
            {
              "name": "_p16",
              "type": "any"
            },
            {
              "name": "_p17",
              "type": "any"
            },
            {
              "name": "_p18",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "pathId",
              "type": "int"
            }
          ],
          "id": "0873",
          "name": "REMOVE_CAR_RECORDING",
          "num_params": 1,
          "short_desc": "Unloads the car recording",
          "class": "Streaming",
          "member": "RemoveCarRecording",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            },
            {
              "name": "_p2",
              "type": "int"
            }
          ],
          "id": "0874",
          "name": "SET_ZONE_POPULATION_RACE",
          "num_params": 2,
          "short_desc": "",
          "class": "Zone",
          "member": "SetPopulationRace",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0875",
          "name": "SET_OBJECT_ONLY_DAMAGED_BY_PLAYER",
          "num_params": 2,
          "short_desc": "Makes the object damageable only by the player",
          "class": "Object",
          "member": "SetOnlyDamagedByPlayer"
        },
        {
          "input": [
            {
              "name": "xFrom",
              "type": "float"
            },
            {
              "name": "yFrom",
              "type": "float"
            },
            {
              "name": "zFrom",
              "type": "float"
            },
            {
              "name": "xTo",
              "type": "float"
            },
            {
              "name": "yTo",
              "type": "float"
            },
            {
              "name": "zTo",
              "type": "float"
            },
            {
              "name": "quantity",
              "type": "int"
            },
            {
              "name": "type",
              "type": "int"
            }
          ],
          "id": "0876",
          "name": "CREATE_BIRDS",
          "num_params": 8,
          "short_desc": "Creates a flock of birds flying in the specified direction",
          "class": "World",
          "member": "CreateBirds",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0877",
          "name": "GET_VEHICLE_DIRT_LEVEL",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "level",
              "type": "float"
            }
          ],
          "id": "0878",
          "name": "SET_VEHICLE_DIRT_LEVEL",
          "num_params": 2,
          "short_desc": "Sets the dirt level of the car",
          "class": "Car",
          "member": "SetDirtLevel"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0879",
          "name": "SET_GANG_WARS_ACTIVE",
          "num_params": 1,
          "short_desc": "Sets whether gang wars can be started by the player or enemy gangs",
          "class": "Game",
          "member": "SetGangWarsActive",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "087A",
          "name": "IS_GANG_WAR_GOING_ON",
          "num_params": 0,
          "short_desc": "Returns true if there is a gang war happening",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "member": "IsGangWarGoingOn"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "textureName",
              "type": "string"
            },
            {
              "name": "modelName",
              "type": "string"
            },
            {
              "name": "bodyPart",
              "type": "BodyPart"
            }
          ],
          "id": "087B",
          "name": "GIVE_PLAYER_CLOTHES_OUTSIDE_SHOP",
          "num_params": 4,
          "short_desc": "Sets the players clothing",
          "class": "Player",
          "member": "GiveClothesOutsideShop"
        },
        {
          "id": "087C",
          "name": "CLEAR_LOADED_SHOP",
          "num_params": 0,
          "short_desc": "Releases the loaded shopping data",
          "class": "Shopping",
          "member": "ClearLoaded",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "087D",
          "name": "SET_GROUP_SEQUENCE",
          "num_params": 2,
          "short_desc": "Sets the default task sequence for members of the group",
          "input": [
            {
              "name": "self",
              "type": "Group"
            },
            {
              "name": "sequence",
              "type": "Sequence"
            }
          ],
          "class": "Group",
          "member": "SetSequence"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "087E",
          "name": "SET_CHAR_DROPS_WEAPONS_WHEN_DEAD",
          "num_params": 2,
          "short_desc": "Sets whether the character will drop any of their weapons when they die",
          "member": "SetDropsWeaponsWhenDead",
          "class": "Char"
        },
        {
          "id": "087F",
          "name": "SET_CHAR_NEVER_LEAVES_GROUP",
          "num_params": 2,
          "short_desc": "Prevents the character from leaving their group",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "member": "SetNeverLeavesGroup"
        },
        {
          "id": "0880",
          "name": "DRAW_RECT_WITH_TITLE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "playerId",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0881",
          "name": "SET_PLAYER_FIRE_BUTTON",
          "num_params": 2,
          "short_desc": "Sets whether the player is able to use weapons",
          "class": "Pad",
          "member": "SetPlayerFireButton",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0882",
          "name": "SET_ATTRACTOR_RADIUS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Particle"
            },
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "boneId",
              "type": "int"
            }
          ],
          "id": "0883",
          "name": "ATTACH_FX_SYSTEM_TO_CHAR_BONE",
          "num_params": 3,
          "short_desc": "Attaches the specified particle to the specified character",
          "class": "Particle",
          "member": "AttachToCharBone"
        },
        {
          "input": [
            {
              "name": "id",
              "type": "script_id"
            },
            {
              "name": "_p2",
              "type": "string"
            }
          ],
          "id": "0884",
          "name": "REGISTER_ATTRACTOR_SCRIPT_BRAIN_FOR_CODE_USE",
          "num_params": 2,
          "short_desc": "Registers a script brain for the specified ped attractor",
          "class": "StreamedScript",
          "member": "RegisterAttractorScriptBrainForCodeUse",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0885",
          "name": "CONST_INT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0886",
          "name": "CONST_FLOAT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "orientation",
              "type": "int"
            },
            {
              "name": "headingLimit",
              "type": "float"
            }
          ],
          "id": "0887",
          "name": "SET_HEADING_LIMIT_FOR_ATTACHED_CHAR",
          "num_params": 3,
          "short_desc": "Sets the heading limit for a character attached to an object or vehicle",
          "class": "Char",
          "member": "SetHeadingLimitForAttached"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "id": "0888",
          "name": "ADD_BLIP_FOR_DEAD_CHAR",
          "num_params": 2,
          "short_desc": "Adds a blip and a marker to the character (identical to 0187)",
          "class": "Blip",
          "member": "AddForDeadChar",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "0889",
          "name": "GET_DEAD_CHAR_COORDINATES",
          "num_params": 4,
          "short_desc": "",
          "class": "Char",
          "member": "GetCoordinatesOfDied"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "animationName",
              "type": "string"
            },
            {
              "name": "animationFile",
              "type": "string"
            },
            {
              "name": "frameDelta",
              "type": "float"
            },
            {
              "name": "loop",
              "type": "bool"
            },
            {
              "name": "lockX",
              "type": "bool"
            },
            {
              "name": "lockY",
              "type": "bool"
            },
            {
              "name": "lockF",
              "type": "bool"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "disableForce",
              "type": "bool"
            },
            {
              "name": "disableLockZ",
              "type": "bool"
            }
          ],
          "id": "088A",
          "name": "TASK_PLAY_ANIM_WITH_FLAGS",
          "num_params": 11,
          "short_desc": "Makes the actor perform an animation",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "PlayAnimWithFlags"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "multiplier",
              "type": "float"
            }
          ],
          "id": "088B",
          "name": "SET_VEHICLE_AIR_RESISTANCE_MULTIPLIER",
          "num_params": 2,
          "short_desc": "Sets the air resistance for the vehicle",
          "class": "Car",
          "member": "SetAirResistanceMultiplier"
        },
        {
          "id": "088C",
          "name": "SET_CAR_COORDINATES_NO_OFFSET",
          "num_params": 4,
          "short_desc": "Sets the vehicle coordinates without applying offsets to account for the height of the vehicle",
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Car",
          "member": "SetCoordinatesNoOffset"
        },
        {
          "id": "088D",
          "name": "SET_USES_COLLISION_OF_CLOSEST_OBJECT_OF_TYPE",
          "num_params": 6,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            }
          ]
        },
        {
          "id": "088E",
          "name": "SET_TIME_ONE_DAY_FORWARD",
          "num_params": 0,
          "short_desc": "Progresses the game to the next day",
          "class": "Clock",
          "member": "SetTimeOneDayForward",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "088F",
          "name": "SET_TIME_ONE_DAY_BACK",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "timer",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "timeInSec",
              "type": "int"
            }
          ],
          "id": "0890",
          "name": "SET_TIMER_BEEP_COUNTDOWN_TIME",
          "num_params": 2,
          "short_desc": "Starts a sound when the countdown timer reaches the specified number of seconds",
          "class": "Hud",
          "member": "SetTimerBeepCountdownTime",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0891",
          "name": "TASK_SIT_IN_RESTAURANT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0892",
          "name": "GET_RANDOM_ATTRACTOR_ON_CLOSEST_OBJECT_OF_TYPE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Trailer"
            },
            {
              "name": "cab",
              "type": "Car"
            }
          ],
          "id": "0893",
          "name": "ATTACH_TRAILER_TO_CAB",
          "num_params": 2,
          "short_desc": "",
          "class": "Trailer",
          "member": "AttachToCab"
        },
        {
          "id": "0894",
          "name": "ADD_INTERESTING_ENTITY_FOR_CHAR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0895",
          "name": "CLEAR_INTERESTING_ENTITIES_FOR_CHAR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0896",
          "name": "GET_CLOSEST_ATTRACTOR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "handle",
              "type": "Object"
            }
          ],
          "id": "0897",
          "name": "IS_VEHICLE_TOUCHING_OBJECT",
          "num_params": 2,
          "short_desc": "Returns true if the vehicle is in contact with the object",
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "IsTouchingObject"
        },
        {
          "input": [
            {
              "name": "up",
              "type": "bool"
            },
            {
              "name": "down",
              "type": "bool"
            },
            {
              "name": "release",
              "type": "bool"
            }
          ],
          "id": "0898",
          "name": "ENABLE_CRANE_CONTROLS",
          "num_params": 3,
          "short_desc": "Enables/disables individual crane controls",
          "class": "Crane",
          "member": "EnableControls",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0899",
          "name": "ALLOCATE_SCRIPT_TO_ATTRACTOR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "089A",
          "name": "GET_CLOSEST_ATTRACTOR_WITH_THIS_SCRIPT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "089B",
          "name": "IS_PLAYER_IN_POSITION_FOR_CONVERSATION",
          "num_params": 1,
          "short_desc": "Returns true if there is a conversation going on between the character and the player and both the character and the player are able to communicate with one another",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Conversation",
          "member": "IsPlayerInPosition"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "089C",
          "name": "ENABLE_CONVERSATION",
          "num_params": 2,
          "short_desc": "Pauses the scripted conversation assigned to the specified character",
          "class": "Conversation",
          "member": "Enable",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "089D",
          "name": "GET_CONVERSATION_STATUS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "id": "089E",
          "name": "GET_RANDOM_CHAR_IN_SPHERE_ONLY_DRUGS_BUYERS",
          "num_params": 5,
          "short_desc": "Loops through the ped pool and returns the first character that is within the specified radius and has the \"buys drugs\" flag set in peds",
          "class": "World",
          "member": "GetRandomCharInSphereOnlyDrugsBuyers",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "pedType",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "089F",
          "name": "GET_PED_TYPE",
          "num_params": 2,
          "short_desc": "Gets the ped type of the character",
          "class": "Char",
          "member": "GetPedType"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_object"
            },
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "fromZ",
              "type": "float"
            },
            {
              "name": "name",
              "type": "string"
            }
          ],
          "id": "08A0",
          "name": "TASK_USE_CLOSEST_MAP_ATTRACTOR",
          "num_params": 7,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "UseClosestMapAttractor"
        },
        {
          "id": "08A1",
          "name": "GET_CHAR_MAP_ATTRACTOR_STATUS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Plane"
            },
            {
              "name": "player",
              "type": "Player"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "08A2",
          "name": "PLANE_ATTACK_PLAYER_USING_DOG_FIGHT",
          "num_params": 3,
          "short_desc": "",
          "class": "Plane",
          "member": "AttackPlayerUsingDogFight"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08A3",
          "name": "CAN_TRIGGER_GANG_WAR_WHEN_ON_A_MISSION",
          "num_params": 1,
          "short_desc": "Allows the player to provoke turf wars while a mission is active",
          "class": "Game",
          "member": "CanTriggerGangWarWhenOnAMission",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "range",
              "type": "float"
            }
          ],
          "id": "08A4",
          "name": "CONTROL_MOVABLE_VEHICLE_PART",
          "num_params": 2,
          "short_desc": "Sets the angle of a vehicle's extra",
          "class": "Car",
          "member": "ControlMovablePart"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08A5",
          "name": "WINCH_CAN_PICK_VEHICLE_UP",
          "num_params": 2,
          "short_desc": "Sets whether the vehicle can be picked up using the magnocrane",
          "class": "Car",
          "member": "WinchCanPickUp"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "door",
              "type": "CarDoor"
            },
            {
              "name": "value",
              "type": "float"
            }
          ],
          "id": "08A6",
          "name": "OPEN_CAR_DOOR_A_BIT",
          "num_params": 3,
          "short_desc": "Sets the angle of a car door",
          "class": "Car",
          "member": "OpenDoorABit"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "door",
              "type": "CarDoor"
            }
          ],
          "id": "08A7",
          "name": "IS_CAR_DOOR_FULLY_OPEN",
          "num_params": 2,
          "short_desc": "",
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "IsDoorFullyOpen"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08A8",
          "name": "SET_ALWAYS_DRAW_3D_MARKERS",
          "num_params": 1,
          "short_desc": "Enables an increase in the distance that markers hovering above entities can be seen from",
          "class": "World",
          "member": "SetAlwaysDraw3DMarkers",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "id",
              "type": "script_id"
            }
          ],
          "id": "08A9",
          "name": "STREAM_SCRIPT",
          "num_params": 1,
          "short_desc": "Loads the ambient script with the specified ID from the script.img file",
          "class": "StreamedScript",
          "member": "Stream",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "08AA",
          "name": "STREAM_SCRIPT_INTERNAL",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "id",
              "type": "script_id"
            }
          ],
          "id": "08AB",
          "name": "HAS_STREAMED_SCRIPT_LOADED",
          "num_params": 1,
          "short_desc": "Returns true if the ambient script has finished loading (08A9)",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "StreamedScript",
          "member": "HasLoaded"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08AC",
          "name": "SET_GANG_WARS_TRAINING_MISSION",
          "num_params": 1,
          "short_desc": "Disables highlighting of gang territory on the map and radar",
          "class": "Game",
          "member": "SetGangWarsTrainingMission",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "08AD",
          "name": "SET_CHAR_HAS_USED_ENTRY_EXIT",
          "num_params": 4,
          "short_desc": "Locates the entry/exit marker in the specified radius of the specified coordinates and links it to the character, also setting the appropriate interior ID for the character and setting the appropriate sky color if the character is player-controlled",
          "class": "Char",
          "member": "SetHasUsedEntryExit"
        },
        {
          "id": "08AE",
          "name": "DRAW_WINDOW_TEXT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "08AF",
          "name": "SET_CHAR_MAX_HEALTH",
          "num_params": 2,
          "short_desc": "Sets the characters max health",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "maxHealth",
              "type": "int"
            }
          ],
          "class": "Char",
          "member": "SetMaxHealth"
        },
        {
          "id": "08B0",
          "name": "SET_CAR_PITCH",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08B1",
          "name": "SET_NIGHT_VISION",
          "num_params": 1,
          "short_desc": "Enables night vision effects",
          "class": "Game",
          "member": "SetNightVision",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08B2",
          "name": "SET_INFRARED_VISION",
          "num_params": 1,
          "short_desc": "Enables thermal vision effects",
          "class": "Game",
          "member": "SetInfraredVision",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            }
          ],
          "id": "08B3",
          "name": "SET_ZONE_FOR_GANG_WARS_TRAINING",
          "num_params": 1,
          "short_desc": "Sets the zone as the only zone where a turf war can be provoked",
          "class": "Zone",
          "member": "SetForGangWarsTraining",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "08B4",
          "name": "IS_GLOBAL_VAR_BIT_SET_CONST",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "id": "08B5",
          "name": "IS_GLOBAL_VAR_BIT_SET_VAR",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "id": "08B6",
          "name": "IS_GLOBAL_VAR_BIT_SET_LVAR",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "id": "08B7",
          "name": "IS_LOCAL_VAR_BIT_SET_CONST",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "id": "08B8",
          "name": "IS_LOCAL_VAR_BIT_SET_VAR",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "id": "08B9",
          "name": "IS_LOCAL_VAR_BIT_SET_LVAR",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "id": "08BA",
          "name": "SET_GLOBAL_VAR_BIT_CONST",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "08BB",
          "name": "SET_GLOBAL_VAR_BIT_VAR",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "08BC",
          "name": "SET_GLOBAL_VAR_BIT_LVAR",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "08BD",
          "name": "SET_LOCAL_VAR_BIT_CONST",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "08BE",
          "name": "SET_LOCAL_VAR_BIT_VAR",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "08BF",
          "name": "SET_LOCAL_VAR_BIT_LVAR",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "08C0",
          "name": "CLEAR_GLOBAL_VAR_BIT_CONST",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "08C1",
          "name": "CLEAR_GLOBAL_VAR_BIT_VAR",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "08C2",
          "name": "CLEAR_GLOBAL_VAR_BIT_LVAR",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "08C3",
          "name": "CLEAR_LOCAL_VAR_BIT_CONST",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "08C4",
          "name": "CLEAR_LOCAL_VAR_BIT_VAR",
          "num_params": 2,
          "short_desc": "Sets the specified bit to 0",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "08C5",
          "name": "CLEAR_LOCAL_VAR_BIT_LVAR",
          "num_params": 2,
          "short_desc": "Sets the specified bit to 0",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "08C6",
          "name": "SET_CHAR_CAN_BE_KNOCKED_OFF_BIKE",
          "num_params": 2,
          "short_desc": "Sets whether the character can fall off their bike in collisions",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "member": "SetCanBeKnockedOffBike"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "08C7",
          "name": "SET_CHAR_COORDINATES_DONT_WARP_GANG",
          "num_params": 4,
          "short_desc": "Sets the character's coordinates without warping the rest of their group",
          "class": "Char",
          "member": "SetCoordinatesDontWarpGang"
        },
        {
          "input": [
            {
              "name": "itemId",
              "type": "int"
            },
            {
              "name": "modifier",
              "type": "int"
            }
          ],
          "id": "08C8",
          "name": "ADD_PRICE_MODIFIER",
          "num_params": 2,
          "short_desc": "",
          "class": "Shopping",
          "member": "AddPriceModifier",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "itemId",
              "type": "int"
            }
          ],
          "id": "08C9",
          "name": "REMOVE_PRICE_MODIFIER",
          "num_params": 1,
          "short_desc": "",
          "class": "Shopping",
          "member": "RemovePriceModifier",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "08CA",
          "name": "INIT_ZONE_POPULATION_SETTINGS",
          "num_params": 0,
          "short_desc": "Resets all changes made to the zone info",
          "class": "Zone",
          "member": "InitPopulationSettings",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "shake",
              "type": "bool"
            },
            {
              "name": "effect",
              "type": "bool"
            },
            {
              "name": "sound",
              "type": "bool"
            }
          ],
          "id": "08CB",
          "name": "EXPLODE_CAR_IN_CUTSCENE_SHAKE_AND_BITS",
          "num_params": 4,
          "short_desc": "Causes the vehicle to explode, without damage to surrounding entities",
          "class": "Car",
          "member": "ExplodeInCutsceneShakeAndBits"
        },
        {
          "id": "08CC",
          "name": "PICK_UP_OBJECT_WITH_WINCH",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "08CD",
          "name": "PICK_UP_VEHICLE_WITH_WINCH",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "08CE",
          "name": "PICK_UP_CHAR_WITH_WINCH",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "08CF",
          "name": "STORE_CAR_IN_NEAREST_IMPOUNDING_GARAGE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "08D0",
          "name": "IS_SKIP_CUTSCENE_BUTTON_PRESSED",
          "num_params": 0,
          "short_desc": "Returns true if the player is pressing a key used to skip cutscenes or the game has been minimised",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Pad",
          "member": "IsSkipCutsceneButtonPressed"
        },
        {
          "output": [
            {
              "name": "xOffset",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "yOffset",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "zOffset",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "08D1",
          "name": "GET_CUTSCENE_OFFSET",
          "num_params": 3,
          "short_desc": "Stores the offset of the currently loaded cutscene",
          "class": "Cutscene",
          "member": "GetOffset",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "scale",
              "type": "float"
            }
          ],
          "id": "08D2",
          "name": "SET_OBJECT_SCALE",
          "num_params": 2,
          "short_desc": "Sets the scale of the object",
          "class": "Object",
          "member": "SetScale"
        },
        {
          "output": [
            {
              "name": "type",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "08D3",
          "name": "GET_CURRENT_POPULATION_ZONE_TYPE",
          "num_params": 1,
          "short_desc": "",
          "class": "Zone",
          "member": "GetCurrentPopulationZoneType",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "header",
              "type": "gxt_key"
            },
            {
              "name": "topLeftX",
              "type": "float"
            },
            {
              "name": "topLeftY",
              "type": "float"
            },
            {
              "name": "width",
              "type": "float"
            },
            {
              "name": "numColumns",
              "type": "int"
            },
            {
              "name": "interactive",
              "type": "bool"
            },
            {
              "name": "background",
              "type": "bool"
            },
            {
              "name": "alignment",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Menu",
              "source": "var_any"
            }
          ],
          "id": "08D4",
          "name": "CREATE_MENU",
          "num_params": 9,
          "short_desc": "Creates the specified panel on the screen with basic settings",
          "class": "Menu",
          "member": "Create",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "id": "08D5",
          "name": "CONSTANT_INT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Menu"
            },
            {
              "name": "column",
              "type": "int"
            },
            {
              "name": "alignment",
              "type": "int"
            }
          ],
          "id": "08D6",
          "name": "SET_MENU_COLUMN_ORIENTATION",
          "num_params": 3,
          "short_desc": "",
          "class": "Menu",
          "member": "SetColumnOrientation"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Menu"
            }
          ],
          "output": [
            {
              "name": "row",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "08D7",
          "name": "GET_MENU_ITEM_SELECTED",
          "num_params": 2,
          "short_desc": "Returns the currently highlighted row in a panel",
          "class": "Menu",
          "member": "GetItemSelected"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Menu"
            }
          ],
          "output": [
            {
              "name": "row",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "08D8",
          "name": "GET_MENU_ITEM_ACCEPTED",
          "num_params": 2,
          "short_desc": "Returns the last row of a panel selected with the sprint key",
          "class": "Menu",
          "member": "GetItemAccepted"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Menu"
            },
            {
              "name": "row",
              "type": "int"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08D9",
          "name": "ACTIVATE_MENU_ITEM",
          "num_params": 3,
          "short_desc": "",
          "class": "Menu",
          "member": "ActivateItem"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Menu"
            }
          ],
          "id": "08DA",
          "name": "DELETE_MENU",
          "num_params": 1,
          "short_desc": "Removes the specified panel from the screen",
          "class": "Menu",
          "member": "Delete",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Menu"
            },
            {
              "name": "column",
              "type": "int"
            },
            {
              "name": "title",
              "type": "gxt_key"
            },
            {
              "name": "row0",
              "type": "gxt_key"
            },
            {
              "name": "row1",
              "type": "gxt_key"
            },
            {
              "name": "row2",
              "type": "gxt_key"
            },
            {
              "name": "row3",
              "type": "gxt_key"
            },
            {
              "name": "row4",
              "type": "gxt_key"
            },
            {
              "name": "row5",
              "type": "gxt_key"
            },
            {
              "name": "row6",
              "type": "gxt_key"
            },
            {
              "name": "row7",
              "type": "gxt_key"
            },
            {
              "name": "row8",
              "type": "gxt_key"
            },
            {
              "name": "row9",
              "type": "gxt_key"
            },
            {
              "name": "row10",
              "type": "gxt_key"
            },
            {
              "name": "row11",
              "type": "gxt_key"
            }
          ],
          "id": "08DB",
          "name": "SET_MENU_COLUMN",
          "num_params": 15,
          "short_desc": "",
          "class": "Menu",
          "member": "SetColumn"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Blip"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "08DC",
          "name": "SET_BLIP_ENTRY_EXIT",
          "num_params": 4,
          "short_desc": "Assigns the blip to the specified entrance/exit marker",
          "class": "Blip",
          "member": "SetEntryExit"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08DD",
          "name": "SWITCH_DEATH_PENALTIES",
          "num_params": 1,
          "short_desc": "Sets whether or not the player loses their weapons and inventory when taken to hospital",
          "class": "Game",
          "member": "SwitchDeathPenalties",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08DE",
          "name": "SWITCH_ARREST_PENALTIES",
          "num_params": 1,
          "short_desc": "Sets whether or not the player loses their weapons and inventory when busted",
          "class": "Game",
          "member": "SwitchArrestPenalties",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "id": "08DF",
          "name": "SET_EXTRA_HOSPITAL_RESTART_POINT",
          "num_params": 5,
          "short_desc": "",
          "class": "Restart",
          "member": "SetExtraHospitalRestartPoint",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "id": "08E0",
          "name": "SET_EXTRA_POLICE_STATION_RESTART_POINT",
          "num_params": 5,
          "short_desc": "",
          "class": "Restart",
          "member": "SetExtraPoliceStationRestartPoint",
          "attrs": {
            "is_static": true
          }
        },
        {
          "output": [
            {
              "name": "numTags",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "08E1",
          "name": "FIND_NUMBER_TAGS_TAGGED",
          "num_params": 1,
          "short_desc": "Gets the number of spraytags painted over",
          "class": "Stat",
          "member": "FindNumberTagsTagged",
          "attrs": {
            "is_static": true
          }
        },
        {
          "output": [
            {
              "name": "percentage",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "08E2",
          "name": "GET_TERRITORY_UNDER_CONTROL_PERCENTAGE",
          "num_params": 1,
          "short_desc": "",
          "class": "Stat",
          "member": "GetTerritoryUnderControlPercentage",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "08E3",
          "name": "IS_OBJECT_IN_ANGLED_AREA_2D",
          "num_params": 7,
          "short_desc": "",
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "member": "IsInAngledArea2D"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "id": "08E4",
          "name": "IS_OBJECT_IN_ANGLED_AREA_3D",
          "num_params": 9,
          "short_desc": "",
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "member": "IsInAngledArea3D"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "id": "08E5",
          "name": "GET_RANDOM_CHAR_IN_SPHERE_NO_BRAIN",
          "num_params": 5,
          "short_desc": "Finds the nearest character to the specified point, in the specified radius",
          "class": "World",
          "member": "GetRandomCharInSphereNoBrain",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Plane"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08E6",
          "name": "SET_PLANE_UNDERCARRIAGE_UP",
          "num_params": 2,
          "short_desc": "Sets whether the plane's landing wheels are up",
          "class": "Plane",
          "member": "SetUndercarriageUp"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08E7",
          "name": "DISABLE_ALL_ENTRY_EXITS",
          "num_params": 1,
          "short_desc": "Disables all entry/exit markers",
          "class": "World",
          "member": "DisableAllEntryExits",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "pedModelId",
              "type": "int"
            },
            {
              "name": "animationFile",
              "type": "string"
            }
          ],
          "id": "08E8",
          "name": "ATTACH_ANIMS_TO_MODEL",
          "num_params": 2,
          "short_desc": "Sets an animation pack to be loaded along with the specified model",
          "class": "Game",
          "member": "AttachAnimsToModel",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "08E9",
          "name": "SET_OBJECT_AS_STEALABLE",
          "num_params": 2,
          "short_desc": "Sets whether the object can be picked up and carried",
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Object",
          "member": "SetAsStealable"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08EA",
          "name": "SET_CREATE_RANDOM_GANG_MEMBERS",
          "num_params": 1,
          "short_desc": "Sets whether gang members will spawn",
          "class": "World",
          "member": "SetCreateRandomGangMembers",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "velocityX",
              "type": "float"
            },
            {
              "name": "velocityY",
              "type": "float"
            },
            {
              "name": "velocityZ",
              "type": "float"
            },
            {
              "name": "density",
              "type": "int"
            }
          ],
          "id": "08EB",
          "name": "ADD_SPARKS",
          "num_params": 7,
          "short_desc": "",
          "class": "Fx",
          "member": "AddSparks",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "class",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "08EC",
          "name": "GET_VEHICLE_CLASS",
          "num_params": 2,
          "short_desc": "Returns the vehicle's class as defined in vehicles",
          "class": "Car",
          "member": "GetClass"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "08ED",
          "name": "CLEAR_CONVERSATION_FOR_CHAR",
          "num_params": 1,
          "short_desc": "",
          "class": "Conversation",
          "member": "ClearForChar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Menu"
            },
            {
              "name": "column",
              "type": "int"
            },
            {
              "name": "row",
              "type": "int"
            },
            {
              "name": "gxt",
              "type": "gxt_key"
            },
            {
              "name": "number",
              "type": "int"
            }
          ],
          "id": "08EE",
          "name": "SET_MENU_ITEM_WITH_NUMBER",
          "num_params": 5,
          "short_desc": "Sets the numbered GXT of the specified panel row",
          "class": "Menu",
          "member": "SetItemWithNumber"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Menu"
            },
            {
              "name": "column",
              "type": "int"
            },
            {
              "name": "row",
              "type": "int"
            },
            {
              "name": "gxt",
              "type": "gxt_key"
            },
            {
              "name": "number1",
              "type": "int"
            },
            {
              "name": "number2",
              "type": "int"
            }
          ],
          "id": "08EF",
          "name": "SET_MENU_ITEM_WITH_2_NUMBERS",
          "num_params": 6,
          "short_desc": "",
          "class": "Menu",
          "member": "SetItemWith2Numbers"
        },
        {
          "input": [
            {
              "name": "_p1",
              "type": "string"
            },
            {
              "name": "_p2",
              "type": "string"
            }
          ],
          "id": "08F0",
          "name": "APPEND_TO_NEXT_CUTSCENE",
          "num_params": 2,
          "short_desc": "",
          "class": "Cutscene",
          "member": "AppendToNext",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "name",
              "type": "string",
              "source": "var_any"
            }
          ],
          "id": "08F1",
          "name": "GET_NAME_OF_INFO_ZONE",
          "num_params": 4,
          "short_desc": "Gets the name of the zone at the specified coordinates",
          "class": "Zone",
          "member": "GetName",
          "attrs": {
            "is_static": true,
            "is_overload": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08F2",
          "name": "VEHICLE_CAN_BE_TARGETED_BY_HS_MISSILE",
          "num_params": 2,
          "short_desc": "Sets whether the player can target this vehicle with a heatseeking rocket launcher",
          "class": "Car",
          "member": "CanBeTargetedByHsMissile"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08F3",
          "name": "SET_FREEBIES_IN_VEHICLE",
          "num_params": 2,
          "short_desc": "Sets whether the player can receive items from this vehicle, such as shotgun ammo from a police car and cash from a taxi",
          "class": "Car",
          "member": "SetFreebies"
        },
        {
          "input": [
            {
              "name": "maxSize",
              "type": "int"
            }
          ],
          "id": "08F4",
          "name": "SET_SCRIPT_LIMIT_TO_GANG_SIZE",
          "num_params": 1,
          "short_desc": "Sets the maximum number of members that the player can recruit",
          "class": "Game",
          "member": "SetScriptLimitToGangSize",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "08F5",
          "name": "MAKE_PLAYER_GANG_DISAPPEAR",
          "num_params": 0,
          "short_desc": "",
          "class": "Player",
          "member": "MakeGangDisappear",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "08F6",
          "name": "MAKE_PLAYER_GANG_REAPPEAR",
          "num_params": 0,
          "short_desc": "",
          "class": "Player",
          "member": "MakeGangReappear",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "bodyPart",
              "type": "BodyPart"
            }
          ],
          "output": [
            {
              "name": "textureHash",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "modelHash",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "08F7",
          "name": "GET_CLOTHES_ITEM",
          "num_params": 4,
          "short_desc": "",
          "class": "Player",
          "member": "GetClothesItem"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08F8",
          "name": "SHOW_UPDATE_STATS",
          "num_params": 1,
          "short_desc": "Displays help boxes indicating that the players stats have been updated",
          "class": "Stat",
          "member": "ShowUpdateStats",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "08F9",
          "name": "IS_VAR_TEXT_LABEL16_EQUAL_TO_TEXT_LABEL",
          "num_params": 2,
          "short_desc": "Returns true if the two strings are equivalent",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "id": "08FA",
          "name": "IS_LVAR_TEXT_LABEL16_EQUAL_TO_TEXT_LABEL",
          "num_params": 2,
          "short_desc": "Returns true if the two strings are equivalent",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Blip"
            },
            {
              "name": "color",
              "type": "int"
            }
          ],
          "id": "08FB",
          "name": "SET_COORD_BLIP_APPEARANCE",
          "num_params": 2,
          "short_desc": "Works similar to 0165, except this command does not work on tracking blips, has different colors and does not support direct RGBA setting",
          "class": "Blip",
          "member": "SetCoordAppearance"
        },
        {
          "id": "08FC",
          "name": "GET_MENU_POSITION",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "08FD",
          "name": "SET_HEATHAZE_EFFECT",
          "num_params": 1,
          "short_desc": "Specifies whether the heat haze effect should be enabled in sunny conditions",
          "class": "Weather",
          "member": "SetHeathazeEffect",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "08FE",
          "name": "IS_HELP_MESSAGE_BEING_DISPLAYED",
          "num_params": 0,
          "short_desc": "Returns true if any help message is being displayed",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Text",
          "member": "IsHelpMessageBeingDisplayed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "id": "08FF",
          "name": "HAS_OBJECT_BEEN_DAMAGED_BY_WEAPON",
          "num_params": 2,
          "short_desc": "Returns true if the object has been damaged by the specified weapon or damage type",
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "member": "HasBeenDamagedByWeapon"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "id": "0900",
          "name": "CLEAR_OBJECT_LAST_WEAPON_DAMAGE",
          "num_params": 1,
          "short_desc": "Clears the object's last damaging weapon ID",
          "class": "Object",
          "member": "ClearLastWeaponDamage"
        },
        {
          "input": [
            {
              "name": "playerId",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0901",
          "name": "SET_PLAYER_JUMP_BUTTON",
          "num_params": 2,
          "short_desc": "Sets whether the player can jump",
          "class": "Pad",
          "member": "SetPlayerJumpButton",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0902",
          "name": "SET_OBJECT_BEEN_PHOTOGRAPHED_FLAG",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0903",
          "name": "SET_CHAR_BEEN_PHOTOGRAPHED_FLAG",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "hudObject",
              "type": "HudObject"
            }
          ],
          "output": [
            {
              "name": "red",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "green",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "blue",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "alpha",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0904",
          "name": "GET_HUD_COLOUR",
          "num_params": 5,
          "short_desc": "Returns the RGBA of the specified HUD color",
          "class": "Hud",
          "member": "GetColor",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0905",
          "name": "LOCK_DOOR",
          "num_params": 2,
          "short_desc": "Sets whether the door object is locked at its current rotation and allows it to be pushed open by entities once",
          "class": "Object",
          "member": "LockDoor"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "mass",
              "type": "float"
            }
          ],
          "id": "0906",
          "name": "SET_OBJECT_MASS",
          "num_params": 2,
          "short_desc": "Sets the object's mass",
          "class": "Object",
          "member": "SetMass"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "mass",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "0907",
          "name": "GET_OBJECT_MASS",
          "num_params": 2,
          "short_desc": "Returns the object's mass",
          "class": "Object",
          "member": "GetMass"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "turnMass",
              "type": "float"
            }
          ],
          "id": "0908",
          "name": "SET_OBJECT_TURN_MASS",
          "num_params": 2,
          "short_desc": "Sets the object's turn mass",
          "class": "Object",
          "member": "SetTurnMass"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "turnMass",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "0909",
          "name": "GET_OBJECT_TURN_MASS",
          "num_params": 2,
          "short_desc": "Returns the object's turn mass",
          "class": "Object",
          "member": "GetTurnMass"
        },
        {
          "id": "090A",
          "name": "IS_PLAYBACK_FOR_CAR_PAUSED",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "090B",
          "name": "TRIGGER_PED_BOUNCE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            }
          ],
          "id": "090C",
          "name": "SET_SPECIFIC_ZONE_TO_TRIGGER_GANG_WAR",
          "num_params": 1,
          "short_desc": "",
          "class": "Zone",
          "member": "SetTriggerGangWar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "090D",
          "name": "CLEAR_SPECIFIC_ZONES_TO_TRIGGER_GANG_WAR",
          "num_params": 0,
          "short_desc": "Enables turf wars to be provoked in all zones",
          "class": "Game",
          "member": "ClearSpecificZonesToTriggerGangWar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Menu"
            },
            {
              "name": "row",
              "type": "int"
            }
          ],
          "id": "090E",
          "name": "SET_ACTIVE_MENU_ITEM",
          "num_params": 2,
          "short_desc": "",
          "class": "Menu",
          "member": "SetActiveItem"
        },
        {
          "input": [
            {
              "name": "id",
              "type": "script_id"
            }
          ],
          "id": "090F",
          "name": "MARK_STREAMED_SCRIPT_AS_NO_LONGER_NEEDED",
          "num_params": 1,
          "short_desc": "Ends the specified script brain",
          "class": "StreamedScript",
          "member": "MarkAsNoLongerNeeded",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "id",
              "type": "script_id"
            }
          ],
          "id": "0910",
          "name": "REMOVE_STREAMED_SCRIPT",
          "num_params": 1,
          "short_desc": "Releases the ambient script with the specified ID, freeing game memory",
          "class": "StreamedScript",
          "member": "Remove",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0911",
          "name": "REGISTER_STREAMED_SCRIPT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "_p1",
              "type": "bool"
            },
            {
              "name": "margin",
              "type": "int"
            },
            {
              "name": "width",
              "type": "int"
            }
          ],
          "id": "0912",
          "name": "SET_MESSAGE_FORMATTING",
          "num_params": 3,
          "short_desc": "Overrides the position of the text on screen",
          "class": "Text",
          "member": "SetMessageFormatting",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "id",
              "type": "script_id"
            },
            {
              "name": "args",
              "type": "arguments"
            }
          ],
          "id": "0913",
          "name": "START_NEW_STREAMED_SCRIPT",
          "num_params": 2,
          "short_desc": "Runs the ambient script with the specified ID",
          "class": "StreamedScript",
          "member": "StartNew",
          "attrs": {
            "is_static": true,
            "is_variadic": true
          }
        },
        {
          "id": "0914",
          "name": "REGISTER_STREAMED_SCRIPT_INTERNAL",
          "num_params": 1,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0915",
          "name": "SET_WEATHER_TO_APPROPRIATE_TYPE_NOW",
          "num_params": 0,
          "short_desc": "Sets the current weather ID according to the game clock and the players current town number",
          "class": "Weather",
          "member": "SetToAppropriateTypeNow",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0916",
          "name": "WINCH_CAN_PICK_OBJECT_UP",
          "num_params": 2,
          "short_desc": "Sets whether the object can be picked up with the magnocrane",
          "class": "Object",
          "member": "WinchCanPickUp"
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0917",
          "name": "SWITCH_AUDIO_ZONE",
          "num_params": 2,
          "short_desc": "Sets whether the IPL defined audio for the specified area should play",
          "class": "Zone",
          "member": "SwitchAudio",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0918",
          "name": "SET_CAR_ENGINE_ON",
          "num_params": 2,
          "short_desc": "Sets whether the vehicle's engine is turned on or off",
          "class": "Car",
          "member": "SetEngineOn"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0919",
          "name": "SET_CAR_LIGHTS_ON",
          "num_params": 2,
          "short_desc": "Sets whether the vehicle's lights are on",
          "class": "Car",
          "member": "SetLightsOn"
        },
        {
          "id": "091A",
          "name": "GET_LATEST_CONSOLE_COMMAND",
          "num_params": 1,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "091B",
          "name": "RESET_LATEST_CONSOLE_COMMAND",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_object"
            },
            {
              "name": "attractorName",
              "type": "string"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "id": "091C",
          "name": "GET_USER_OF_CLOSEST_MAP_ATTRACTOR",
          "num_params": 7,
          "short_desc": "Returns the character using a map attractor with the specified model in the specified area",
          "class": "World",
          "member": "GetUserOfClosestMapAttractor",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "id": "091D",
          "name": "SWITCH_ROADS_BACK_TO_ORIGINAL",
          "num_params": 6,
          "short_desc": "",
          "class": "Path",
          "member": "SwitchRoadsBackToOriginal",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "id": "091E",
          "name": "SWITCH_PED_ROADS_BACK_TO_ORIGINAL",
          "num_params": 6,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "member": "SwitchPedRoadsBackToOriginal"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Plane"
            }
          ],
          "output": [
            {
              "name": "position",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "091F",
          "name": "GET_PLANE_UNDERCARRIAGE_POSITION",
          "num_params": 2,
          "short_desc": "",
          "class": "Plane",
          "member": "GetUndercarriagePosition"
        },
        {
          "input": [
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "fromZ",
              "type": "float"
            },
            {
              "name": "toX",
              "type": "float"
            },
            {
              "name": "toY",
              "type": "float"
            },
            {
              "name": "toZ",
              "type": "float"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "ease",
              "type": "bool"
            }
          ],
          "id": "0920",
          "name": "CAMERA_SET_VECTOR_TRACK",
          "num_params": 8,
          "short_desc": "Makes the camera point at the first coordinates and then rotate to point at the second coordinates",
          "class": "Camera",
          "member": "SetVectorTrack",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0921",
          "name": "CAMERA_SET_SHAKE_SIMULATION",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "from",
              "type": "float"
            },
            {
              "name": "to",
              "type": "float"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "ease",
              "type": "bool"
            }
          ],
          "id": "0922",
          "name": "CAMERA_SET_LERP_FOV",
          "num_params": 4,
          "short_desc": "Sets the cameras zoom factors",
          "class": "Camera",
          "member": "SetLerpFov",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0923",
          "name": "SWITCH_AMBIENT_PLANES",
          "num_params": 1,
          "short_desc": "Enables or disables planes",
          "class": "Game",
          "member": "SwitchAmbientPlanes",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "enable",
              "type": "bool"
            },
            {
              "name": "pitchBlack",
              "type": "int"
            }
          ],
          "id": "0924",
          "name": "SET_DARKNESS_EFFECT",
          "num_params": 2,
          "short_desc": "Darkens the game",
          "class": "Camera",
          "member": "SetDarknessEffect",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0925",
          "name": "CAMERA_RESET_NEW_SCRIPTABLES",
          "num_params": 0,
          "short_desc": "Stops the camera propagating, interpolating, shaking and zooming",
          "class": "Camera",
          "member": "ResetNewScriptables",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "id",
              "type": "script_id"
            }
          ],
          "output": [
            {
              "name": "numScripts",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0926",
          "name": "GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT",
          "num_params": 2,
          "short_desc": "Gets the number of instances of a script",
          "class": "StreamedScript",
          "member": "GetNumberOfInstances",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0927",
          "name": "ALLOCATE_STREAMED_SCRIPT_TO_PED_GENERATOR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "id",
              "type": "script_id"
            },
            {
              "name": "modelId",
              "type": "model_char"
            },
            {
              "name": "priority",
              "type": "int"
            }
          ],
          "id": "0928",
          "name": "ALLOCATE_STREAMED_SCRIPT_TO_RANDOM_PED",
          "num_params": 3,
          "short_desc": "Makes the game start an ambient script when the player is nearby a character of the specified model",
          "class": "StreamedScript",
          "member": "AllocateToRandomPed",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "id",
              "type": "script_id"
            },
            {
              "name": "modelId",
              "type": "model_object"
            },
            {
              "name": "priority",
              "type": "int"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "type",
              "type": "int"
            }
          ],
          "id": "0929",
          "name": "ALLOCATE_STREAMED_SCRIPT_TO_OBJECT",
          "num_params": 5,
          "short_desc": "Makes the game start an ambient script when the player is nearby an object of the specified model",
          "class": "StreamedScript",
          "member": "AllocateToObject",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "092A",
          "name": "SET_PLAYER_CAN_BE_DAMAGED",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Group"
            },
            {
              "name": "slotId",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "id": "092B",
          "name": "GET_GROUP_MEMBER",
          "num_params": 3,
          "short_desc": "Returns the nth group member",
          "class": "Group",
          "member": "GetMember"
        },
        {
          "id": "092C",
          "name": "GET_PLAYERS_GANG_IN_CAR_ACTIVE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "092D",
          "name": "SET_PLAYERS_GANG_IN_CAR_ACTIVE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "ignoreWaves",
              "type": "bool"
            }
          ],
          "output": [
            {
              "name": "height",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "092E",
          "name": "GET_WATER_HEIGHT_AT_COORDS",
          "num_params": 4,
          "short_desc": "Gets the height of the water at the specified 2D coordinates",
          "class": "World",
          "member": "GetWaterHeightAtCoords",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "092F",
          "name": "CAMERA_PERSIST_TRACK",
          "num_params": 1,
          "short_desc": "Locks the camera target point in position after propagating",
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Camera",
          "member": "PersistTrack",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0930",
          "name": "CAMERA_PERSIST_POS",
          "num_params": 1,
          "short_desc": "Locks the cameras position",
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Camera",
          "member": "PersistPos",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0931",
          "name": "CAMERA_PERSIST_FOV",
          "num_params": 1,
          "short_desc": "Locks the zoom level after the camera has finished zooming",
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Camera",
          "member": "PersistFov",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0932",
          "name": "CAMERA_IS_FOV_RUNNING",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0933",
          "name": "CAMERA_IS_VECTOR_MOVE_RUNNING",
          "num_params": 0,
          "short_desc": "Returns true if the camera is moving in position",
          "class": "Camera",
          "member": "IsVectorMoveRunning",
          "attrs": {
            "is_condition": true,
            "is_static": true
          }
        },
        {
          "id": "0934",
          "name": "CAMERA_IS_VECTOR_TRACK_RUNNING",
          "num_params": 0,
          "short_desc": "Returns true if the camera is moving in angle",
          "class": "Camera",
          "member": "IsVectorTrackRunning",
          "attrs": {
            "is_condition": true,
            "is_static": true
          }
        },
        {
          "id": "0935",
          "name": "CAMERA_IS_SHAKE_RUNNING",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "fromZ",
              "type": "float"
            },
            {
              "name": "toX",
              "type": "float"
            },
            {
              "name": "toY",
              "type": "float"
            },
            {
              "name": "toZ",
              "type": "float"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "ease",
              "type": "bool"
            }
          ],
          "id": "0936",
          "name": "CAMERA_SET_VECTOR_MOVE",
          "num_params": 8,
          "short_desc": "Puts the camera at the position of the first passed coordinates and moves it to the second passed coordinates",
          "class": "Camera",
          "member": "SetVectorMove",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "leftTopX",
              "type": "float"
            },
            {
              "name": "leftTopY",
              "type": "float"
            },
            {
              "name": "rightBottomX",
              "type": "float"
            },
            {
              "name": "rightBottomY",
              "type": "float"
            },
            {
              "name": "header",
              "type": "gxt_key"
            },
            {
              "name": "zIndex",
              "type": "int"
            }
          ],
          "id": "0937",
          "name": "DRAW_WINDOW",
          "num_params": 6,
          "short_desc": "Draws a black box with styled text from corner A to corner B",
          "class": "Hud",
          "member": "DrawWindow",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0938",
          "name": "CLEAR_ALL_QUEUED_DIALOGUE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0939",
          "name": "ATTACH_CAR_TO_OBJECT",
          "num_params": 8,
          "short_desc": "Attaches the car to object with offset and rotation",
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "handle",
              "type": "Object"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "xRotation",
              "type": "float"
            },
            {
              "name": "yRotation",
              "type": "float"
            },
            {
              "name": "zRotation",
              "type": "float"
            }
          ],
          "class": "Car",
          "member": "AttachToObject"
        },
        {
          "input": [
            {
              "name": "garageId",
              "type": "string"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "093A",
          "name": "SET_GARAGE_RESPRAY_FREE",
          "num_params": 2,
          "short_desc": "",
          "class": "Garage",
          "member": "SetResprayFree",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "093B",
          "name": "SET_CHAR_BULLETPROOF_VEST",
          "num_params": 2,
          "short_desc": "Specifies that the character should only use upper-body damage animations, meaning they can still run if shot in the legs etc",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "member": "SetBulletproofVest"
        },
        {
          "id": "093C",
          "name": "SET_ONSCREEN_COUNTER_COLOUR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "093D",
          "name": "SET_CINEMA_CAMERA",
          "num_params": 1,
          "short_desc": "Locks the camera on cinematic vehicle mode",
          "class": "Camera",
          "member": "SetCinema",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "093E",
          "name": "SET_CHAR_FIRE_DAMAGE_MULTIPLIER",
          "num_params": 2,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "093F",
          "name": "IS_FIRE_BUTTON_PRESSED",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Group"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0940",
          "name": "SET_GROUP_FOLLOW_STATUS",
          "num_params": 2,
          "short_desc": "Sets whether the group members enter a car when the leader does",
          "class": "Group",
          "member": "SetFollowStatus"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Searchlight"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0941",
          "name": "SET_SEARCHLIGHT_CLIP_IF_COLLIDING",
          "num_params": 2,
          "short_desc": "",
          "class": "Searchlight",
          "member": "SetClipIfColliding"
        },
        {
          "input": [
            {
              "name": "itemId",
              "type": "int"
            }
          ],
          "id": "0942",
          "name": "HAS_PLAYER_BOUGHT_ITEM",
          "num_params": 1,
          "short_desc": "Returns true if the shopping item has been bought",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Shopping",
          "member": "HasPlayerBoughtItem"
        },
        {
          "id": "0943",
          "name": "SET_CAMERA_BEHIND_CHAR",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0944",
          "name": "SET_CAMERA_IN_FRONT_OF_CHAR",
          "num_params": 1,
          "short_desc": "Puts the camera in front of the specified character",
          "input": [
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "class": "Camera",
          "member": "SetInFrontOfChar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "maxArmour",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0945",
          "name": "GET_PLAYER_MAX_ARMOUR",
          "num_params": 2,
          "short_desc": "",
          "class": "Player",
          "member": "GetMaxArmor"
        },
        {
          "id": "0946",
          "name": "SET_CHAR_USES_UPPERBODY_DAMAGE_ANIMS_ONLY",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "member": "SetUsesUpperbodyDamageAnimsOnly"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "speech",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "_p3",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0947",
          "name": "SET_CHAR_SAY_CONTEXT",
          "num_params": 3,
          "short_desc": "Works similar to 05C1, but returns which phrase was spoken and is not run as a task",
          "class": "Char",
          "member": "SetSayContext"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "type",
              "type": "int"
            },
            {
              "name": "shake",
              "type": "float"
            }
          ],
          "id": "0948",
          "name": "ADD_EXPLOSION_VARIABLE_SHAKE",
          "num_params": 5,
          "short_desc": "Creates an explosion at the specified coordinates",
          "class": "Fx",
          "member": "AddExplosionVariableShake",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "slotId",
              "type": "MissionAudioSlot"
            },
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "0949",
          "name": "ATTACH_MISSION_AUDIO_TO_CHAR",
          "num_params": 2,
          "short_desc": "Sets the loaded audio to play at the char's location",
          "class": "Audio",
          "member": "AttachMissionAudioToChar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Pickup"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "id": "094A",
          "name": "UPDATE_PICKUP_MONEY_PER_DAY",
          "num_params": 2,
          "short_desc": "",
          "class": "Pickup",
          "member": "UpdateMoneyPerDay"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "interiorName",
              "type": "string",
              "source": "var_any"
            }
          ],
          "id": "094B",
          "name": "GET_NAME_OF_ENTRY_EXIT_CHAR_USED",
          "num_params": 2,
          "short_desc": "Gets the name of the characters interior",
          "class": "Char",
          "member": "GetNameOfEntryExitUsed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "heading",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "094C",
          "name": "GET_POSITION_OF_ENTRY_EXIT_CHAR_USED",
          "num_params": 5,
          "short_desc": "Returns the coordinates and heading of the entry (enex) marker the character used to get to the current interior",
          "class": "Char",
          "member": "GetPositionOfEntryExitCharUsed"
        },
        {
          "id": "094D",
          "name": "IS_CHAR_TALKING",
          "num_params": 1,
          "short_desc": "Returns true if the character is playing any speech",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsTalking"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "stopNow",
              "type": "bool"
            }
          ],
          "id": "094E",
          "name": "DISABLE_CHAR_SPEECH",
          "num_params": 2,
          "short_desc": "Prevents any character speech from playing",
          "class": "Char",
          "member": "DisableSpeech"
        },
        {
          "id": "094F",
          "name": "ENABLE_CHAR_SPEECH",
          "num_params": 1,
          "short_desc": "Enables pain audio if it was disabled using 094E",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "member": "EnableSpeech"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "id": "0950",
          "name": "SET_UP_SKIP",
          "num_params": 4,
          "short_desc": "Fades out the screen and teleports the player to the specified coordinates and angle",
          "class": "Skip",
          "member": "SetUp",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0951",
          "name": "CLEAR_SKIP",
          "num_params": 0,
          "short_desc": "",
          "class": "Skip",
          "member": "Clear",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "trackId",
              "type": "int"
            }
          ],
          "id": "0952",
          "name": "PRELOAD_BEAT_TRACK",
          "num_params": 1,
          "short_desc": "",
          "class": "Audio",
          "member": "PreloadBeatTrack",
          "attrs": {
            "is_static": true
          }
        },
        {
          "output": [
            {
              "name": "status",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0953",
          "name": "GET_BEAT_TRACK_STATUS",
          "num_params": 1,
          "short_desc": "",
          "class": "Audio",
          "member": "GetBeatTrackStatus",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0954",
          "name": "PLAY_BEAT_TRACK",
          "num_params": 0,
          "short_desc": "",
          "class": "Audio",
          "member": "PlayBeatTrack",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0955",
          "name": "STOP_BEAT_TRACK",
          "num_params": 0,
          "short_desc": "",
          "class": "Audio",
          "member": "StopBeatTrack",
          "attrs": {
            "is_static": true
          }
        },
        {
          "output": [
            {
              "name": "maxNum",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0956",
          "name": "FIND_MAX_NUMBER_OF_GROUP_MEMBERS",
          "num_params": 1,
          "short_desc": "",
          "class": "Game",
          "member": "FindMaxNumberOfGroupMembers",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0957",
          "name": "VEHICLE_DOES_PROVIDE_COVER",
          "num_params": 2,
          "short_desc": "Sets whether characters in combat will choose to use the vehicle as cover from gunfire",
          "class": "Car",
          "member": "DoesProvideCover"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "id": "0958",
          "name": "CREATE_SNAPSHOT_PICKUP",
          "num_params": 4,
          "short_desc": "",
          "class": "Pickup",
          "member": "CreateSnapshot",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "id": "0959",
          "name": "CREATE_HORSESHOE_PICKUP",
          "num_params": 4,
          "short_desc": "",
          "class": "Pickup",
          "member": "CreateHorseshoe",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "id": "095A",
          "name": "CREATE_OYSTER_PICKUP",
          "num_params": 4,
          "short_desc": "",
          "class": "Pickup",
          "member": "CreateOyster",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "id": "095B",
          "name": "HAS_OBJECT_BEEN_UPROOTED",
          "num_params": 1,
          "short_desc": "Returns true if the object has been made moveable by the 0392",
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "member": "HasBeenUprooted"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "velocityX",
              "type": "float"
            },
            {
              "name": "velocityY",
              "type": "float"
            },
            {
              "name": "velocityZ",
              "type": "float"
            },
            {
              "name": "red",
              "type": "int"
            },
            {
              "name": "green",
              "type": "int"
            },
            {
              "name": "blue",
              "type": "int"
            },
            {
              "name": "alpha",
              "type": "int"
            },
            {
              "name": "size",
              "type": "float"
            },
            {
              "name": "lastFactor",
              "type": "float"
            }
          ],
          "id": "095C",
          "name": "ADD_SMOKE_PARTICLE",
          "num_params": 12,
          "short_desc": "",
          "class": "Fx",
          "member": "AddSmokeParticle",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "095D",
          "name": "IS_CHAR_STUCK_UNDER_CAR",
          "num_params": 1,
          "short_desc": "Returns true if the actor is stuck under a car",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsStuckUnderCar"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "door",
              "type": "CarDoor"
            },
            {
              "name": "latch",
              "type": "int"
            },
            {
              "name": "angle",
              "type": "float"
            }
          ],
          "id": "095E",
          "name": "CONTROL_CAR_DOOR",
          "num_params": 4,
          "short_desc": "Sets the car's door angle and latch state",
          "class": "Car",
          "member": "ControlDoor"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "door",
              "type": "CarDoor"
            }
          ],
          "output": [
            {
              "name": "ratio",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "095F",
          "name": "GET_DOOR_ANGLE_RATIO",
          "num_params": 3,
          "short_desc": "Gets the specified car doors angle, relative to the hinge",
          "class": "Car",
          "member": "GetDoorAngleRatio"
        },
        {
          "input": [
            {
              "name": "playerId",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0960",
          "name": "SET_PLAYER_DISPLAY_VITAL_STATS_BUTTON",
          "num_params": 2,
          "short_desc": "Sets whether a player can use the ACTION key to display their stats",
          "class": "Pad",
          "member": "SetPlayerDisplayVitalStatsButton",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0961",
          "name": "SET_CHAR_KEEP_TASK",
          "num_params": 2,
          "short_desc": "Sets whether the character should keep their tasks after mission cleanup (basically cleanup will be skipped for this character)",
          "class": "Char",
          "member": "SetKeepTask"
        },
        {
          "id": "0962",
          "name": "DOES_CAR_HAVE_ROOF",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0963",
          "name": "SET_BLIP_FADE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "header",
              "type": "gxt_key"
            },
            {
              "name": "topLeftX",
              "type": "float"
            },
            {
              "name": "topLeftY",
              "type": "float"
            },
            {
              "name": "width",
              "type": "float"
            },
            {
              "name": "numColumns",
              "type": "int"
            },
            {
              "name": "interactive",
              "type": "bool"
            },
            {
              "name": "background",
              "type": "bool"
            },
            {
              "name": "alignment",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "MenuGrid",
              "source": "var_any"
            }
          ],
          "short_desc": "Creates the same color chart that you see in car modification shops",
          "id": "0964",
          "name": "CREATE_MENU_GRID",
          "num_params": 9,
          "class": "MenuGrid",
          "member": "Create",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "id": "0965",
          "name": "IS_CHAR_SWIMMING",
          "num_params": 1,
          "short_desc": "",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsSwimming"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "state",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0966",
          "name": "GET_CHAR_SWIM_STATE",
          "num_params": 2,
          "short_desc": "",
          "class": "Char",
          "member": "GetSwimState"
        },
        {
          "id": "0967",
          "name": "START_CHAR_FACIAL_TALK",
          "num_params": 2,
          "short_desc": "Makes a character move their mouth as if they were talking",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "duration",
              "type": "int"
            }
          ],
          "class": "Char",
          "member": "StartFacialTalk"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "id": "0968",
          "name": "STOP_CHAR_FACIAL_TALK",
          "num_params": 1,
          "short_desc": "Stops the character moving their mouth as if they were talking",
          "class": "Char",
          "member": "StopFacialTalk"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "0969",
          "name": "IS_BIG_VEHICLE",
          "num_params": 1,
          "short_desc": "Returns true if the specified vehicle has the 'is big' flag set in vehicles",
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "IsBig"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "096A",
          "name": "SWITCH_POLICE_HELIS",
          "num_params": 1,
          "short_desc": "Sets whether ghetto birds spawn",
          "class": "Game",
          "member": "SwitchPoliceHelis",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "096B",
          "name": "STORE_CAR_MOD_STATE",
          "num_params": 0,
          "short_desc": "",
          "class": "Car",
          "member": "StoreModState",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "096C",
          "name": "RESTORE_CAR_MOD_STATE",
          "num_params": 0,
          "short_desc": "",
          "class": "Car",
          "member": "RestoreModState",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "slot",
              "type": "ModSlot"
            }
          ],
          "output": [
            {
              "name": "modelId",
              "type": "model_object",
              "source": "var_any"
            }
          ],
          "id": "096D",
          "name": "GET_CURRENT_CAR_MOD",
          "num_params": 3,
          "short_desc": "Returns the model of the component installed on the specified slot of the vehicle, or -1 otherwise",
          "class": "Car",
          "member": "GetCurrentMod"
        },
        {
          "id": "096E",
          "name": "IS_CAR_LOW_RIDER",
          "num_params": 1,
          "short_desc": "Returns true if the vehicle is a low rider",
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "IsLowRider"
        },
        {
          "id": "096F",
          "name": "IS_CAR_STREET_RACER",
          "num_params": 1,
          "short_desc": "Returns true if the vehicle is a street racer",
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "IsStreetRacer"
        },
        {
          "id": "0970",
          "name": "FORCE_DEATH_RESTART",
          "num_params": 0,
          "short_desc": "",
          "class": "Game",
          "member": "ForceDeathRestart",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0971",
          "name": "SYNC_WATER",
          "num_params": 0,
          "short_desc": "Synchronizes the water with the current time",
          "class": "",
          "member": "",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "0972",
          "name": "SET_CHAR_COORDINATES_NO_OFFSET",
          "num_params": 4,
          "short_desc": "Puts the characters at the coordinates by the center of body instead of the feet",
          "class": "Char",
          "member": "SetCoordinatesNoOffset"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "id": "0973",
          "name": "DOES_SCRIPT_FIRE_EXIST",
          "num_params": 1,
          "short_desc": "Returns true if the handle is a valid script fire handle",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "ScriptFire",
          "member": "DoesExist"
        },
        {
          "id": "0974",
          "name": "RESET_STUFF_UPON_RESURRECTION",
          "num_params": 0,
          "short_desc": "Emulates the shared effects of being wasted or busted",
          "class": "Game",
          "member": "ResetStuffUponResurrection",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "0975",
          "name": "IS_EMERGENCY_SERVICES_VEHICLE",
          "num_params": 1,
          "short_desc": "",
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "IsEmergencyServices"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Particle"
            }
          ],
          "id": "0976",
          "name": "KILL_FX_SYSTEM_NOW",
          "num_params": 1,
          "short_desc": "Destroys the specified particle",
          "class": "Particle",
          "member": "KillNow",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "id": "0977",
          "name": "IS_OBJECT_WITHIN_BRAIN_ACTIVATION_RANGE",
          "num_params": 1,
          "short_desc": "Returns true if the object is within the external script trigger radius",
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "member": "IsWithinBrainActivationRange"
        },
        {
          "input": [
            {
              "name": "mask",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "DecisionMakerChar",
              "source": "var_any"
            }
          ],
          "id": "0978",
          "name": "COPY_SHARED_CHAR_DECISION_MAKER",
          "num_params": 2,
          "short_desc": "",
          "class": "DecisionMakerChar",
          "member": "CopyShared",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "id": "0979",
          "name": "LOAD_SHARED_CHAR_DECISION_MAKER",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "soundId",
              "type": "int"
            }
          ],
          "id": "097A",
          "name": "REPORT_MISSION_AUDIO_EVENT_AT_POSITION",
          "num_params": 4,
          "short_desc": "",
          "class": "Audio",
          "member": "ReportMissionAudioEventAtPosition",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Object"
            },
            {
              "name": "soundId",
              "type": "int"
            }
          ],
          "id": "097B",
          "name": "REPORT_MISSION_AUDIO_EVENT_AT_OBJECT",
          "num_params": 2,
          "short_desc": "",
          "class": "Audio",
          "member": "ReportMissionAudioEventAtObject",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "slotId",
              "type": "MissionAudioSlot"
            },
            {
              "name": "handle",
              "type": "Object"
            }
          ],
          "id": "097C",
          "name": "ATTACH_MISSION_AUDIO_TO_OBJECT",
          "num_params": 2,
          "short_desc": "Sets the loaded audio to play at the object's location",
          "class": "Audio",
          "member": "AttachMissionAudioToObject",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "count",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "097D",
          "name": "GET_NUM_CAR_COLOURS",
          "num_params": 2,
          "short_desc": "",
          "class": "Car",
          "member": "GetNumColors"
        },
        {
          "id": "097E",
          "name": "IS_POLICE_VEHICLE_IN_PURSUIT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "097F",
          "name": "GET_CAR_COLOUR_FROM_MENU_INDEX",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "0980",
          "name": "EXTINGUISH_FIRE_AT_POINT",
          "num_params": 4,
          "short_desc": "Removes all fires within the specified area",
          "class": "World",
          "attrs": {
            "is_static": true
          },
          "member": "ExtinguishFireAtPoint"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Train"
            }
          ],
          "id": "0981",
          "name": "HAS_TRAIN_DERAILED",
          "num_params": 1,
          "short_desc": "Returns true if the train has derailed (usually from going too fast)",
          "attrs": {
            "is_condition": true
          },
          "class": "Train",
          "member": "HasDerailed"
        },
        {
          "id": "0982",
          "name": "SET_CHAR_FORCE_DIE_IN_CAR",
          "num_params": 2,
          "short_desc": "Makes a character remain in the car upon death",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "member": "SetForceDieInCar"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0983",
          "name": "SET_ONLY_CREATE_GANG_MEMBERS",
          "num_params": 1,
          "short_desc": "Sets whether gangs appear everywhere, like when \"Gangs control the streets\" cheat is activated",
          "class": "World",
          "member": "SetOnlyCreateGangMembers",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "model",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0984",
          "name": "GET_OBJECT_MODEL",
          "num_params": 2,
          "short_desc": "Returns the object's model index",
          "class": "Object",
          "member": "GetModel"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_object"
            },
            {
              "name": "solid",
              "type": "bool"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "id": "0985",
          "name": "SET_CHAR_USES_COLLISION_CLOSEST_OBJECT_OF_TYPE",
          "num_params": 7,
          "short_desc": "",
          "class": "World",
          "member": "SetCharUsesCollisionClosestObjectOfType",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0986",
          "name": "CLEAR_ALL_SCRIPT_FIRE_FLAGS",
          "num_params": 0,
          "short_desc": "Marks all fires as no longer needed, allowing them to disappear",
          "class": "World",
          "member": "ClearAllScriptFireFlags",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "id": "0987",
          "name": "GET_CAR_BLOCKING_CAR",
          "num_params": 2,
          "short_desc": "Returns a handle of the vehicle preventing this car from getting to its destination",
          "class": "Car",
          "member": "GetBlockingCar"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "paintjobNumber",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0988",
          "name": "GET_CURRENT_VEHICLE_PAINTJOB",
          "num_params": 2,
          "short_desc": "Gets the car's paintjob",
          "class": "Car",
          "member": "GetCurrentPaintjob"
        },
        {
          "input": [
            {
              "name": "size",
              "type": "int"
            }
          ],
          "id": "0989",
          "name": "SET_HELP_MESSAGE_BOX_SIZE",
          "num_params": 1,
          "short_desc": "Sets the global width of text boxes displayed on screen",
          "class": "Text",
          "member": "SetHelpMessageBoxSize",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "range",
              "type": "float"
            }
          ],
          "id": "098A",
          "name": "SET_GUNSHOT_SENSE_RANGE_FOR_RIOT2",
          "num_params": 1,
          "short_desc": "",
          "class": "Game",
          "member": "SetGunshotSenseRangeForRiot2",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "098B",
          "name": "STRING_CAT16",
          "num_params": 3,
          "short_desc": "Combines two strings and stores the result to a string variable",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "098C",
          "name": "STRING_CAT8",
          "num_params": 3,
          "short_desc": "Combines two strings and stores the result to a string variable",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "offset",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "098D",
          "name": "GET_CAR_MOVING_COMPONENT_OFFSET",
          "num_params": 2,
          "short_desc": "Sets the angle of a vehicle's extra",
          "class": "Car",
          "member": "GetMovingComponentOffset"
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "entryexitsFlag",
              "type": "EntryexitsFlag"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "098E",
          "name": "SET_NAMED_ENTRY_EXIT_FLAG",
          "num_params": 3,
          "short_desc": "Sets the specified enex flag",
          "class": "Game",
          "member": "SetNamedEntryExitFlag",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "098F",
          "name": "RADIANS_TO_DEGREES",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0990",
          "name": "DEGREES_TO_RADIANS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0991",
          "name": "PAUSE_CURRENT_BEAT_TRACK",
          "num_params": 1,
          "short_desc": "Sets whether the loaded soundtrack is paused",
          "class": "Audio",
          "member": "PauseCurrentBeatTrack",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "playerId",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0992",
          "name": "SET_PLAYER_CYCLE_WEAPON_BUTTON",
          "num_params": 2,
          "short_desc": "",
          "class": "Pad",
          "member": "SetPlayerCycleWeaponButton",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0993",
          "name": "SET_CHAR_AIR_RESISTANCE_MULTIPLIER",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "0994",
          "name": "MARK_ROAD_NODE_AS_DONT_WANDER",
          "num_params": 3,
          "short_desc": "",
          "class": "Path",
          "member": "MarkRoadNodeAsDontWander",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0995",
          "name": "UNMARK_ALL_ROAD_NODES_AS_DONT_WANDER",
          "num_params": 0,
          "short_desc": "",
          "class": "Path",
          "member": "UnmarkAllRoadNodesAsDontWander",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Checkpoint"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "id": "0996",
          "name": "SET_CHECKPOINT_HEADING",
          "num_params": 2,
          "short_desc": "",
          "class": "Checkpoint",
          "member": "SetHeading"
        },
        {
          "input": [
            {
              "name": "totalRespect",
              "type": "int"
            }
          ],
          "id": "0997",
          "name": "SET_MISSION_RESPECT_TOTAL",
          "num_params": 1,
          "short_desc": "",
          "class": "Stat",
          "member": "SetMissionRespectTotal",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "value",
              "type": "int"
            }
          ],
          "id": "0998",
          "name": "AWARD_PLAYER_MISSION_RESPECT",
          "num_params": 1,
          "short_desc": "",
          "class": "Stat",
          "member": "AwardPlayerMissionRespect",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0999",
          "name": "SET_PLAYER_FIRE_WITH_SHOULDER_BUTTON",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "099A",
          "name": "SET_CAR_COLLISION",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "member": "SetCollision"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "099B",
          "name": "CHANGE_PLAYBACK_TO_USE_AI",
          "num_params": 1,
          "short_desc": "Changes vehicle control from playback to AI driven",
          "class": "Car",
          "member": "ChangePlaybackToUseAi"
        },
        {
          "input": [
            {
              "name": "type",
              "type": "int"
            },
            {
              "name": "timeInMs",
              "type": "float"
            },
            {
              "name": "intensity",
              "type": "float"
            }
          ],
          "id": "099C",
          "name": "CAMERA_SET_SHAKE_SIMULATION_SIMPLE",
          "num_params": 3,
          "short_desc": "Jiggles the camera in a variety of different ways",
          "class": "Camera",
          "member": "SetShakeSimulationSimple",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "099D",
          "name": "IS_NIGHT_VISION_ACTIVE",
          "num_params": 0,
          "short_desc": "Returns true if night vision is active",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "member": "IsNightVisionActive"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "099E",
          "name": "SET_CREATE_RANDOM_COPS",
          "num_params": 1,
          "short_desc": "",
          "class": "World",
          "member": "SetCreateRandomCops",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "099F",
          "name": "TASK_SET_IGNORE_WEAPON_RANGE_FLAG",
          "num_params": 2,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "SetIgnoreWeaponRangeFlag"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "boneId",
              "type": "int"
            },
            {
              "name": "_p7",
              "type": "int"
            },
            {
              "name": "animationName",
              "type": "string"
            },
            {
              "name": "animationFile",
              "type": "string"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "09A0",
          "name": "TASK_PICK_UP_SECOND_OBJECT",
          "num_params": 10,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "PickUpSecondObject"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09A1",
          "name": "DROP_SECOND_OBJECT",
          "num_params": 2,
          "short_desc": "",
          "class": "Char",
          "member": "DropSecondObject"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "id": "09A2",
          "name": "REMOVE_OBJECT_ELEGANTLY",
          "num_params": 1,
          "short_desc": "Fades the object out of existence, freeing game memory",
          "class": "Object",
          "member": "RemoveElegantly",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09A3",
          "name": "DRAW_CROSSHAIR",
          "num_params": 1,
          "short_desc": "Sets whether the HUD should always display weapon aiming crosshairs, used in the mission 'Catalyst' where the player must throw crates of ammo to Ryder",
          "class": "Hud",
          "member": "DrawCrosshair",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "question",
              "type": "gxt_key"
            },
            {
              "name": "positiveAnswer",
              "type": "gxt_key"
            },
            {
              "name": "negativeAnswer",
              "type": "gxt_key"
            },
            {
              "name": "questionSoundId",
              "type": "int"
            },
            {
              "name": "positiveAnswerSoundId",
              "type": "int"
            },
            {
              "name": "negativeAnswerSoundId",
              "type": "int"
            }
          ],
          "id": "09A4",
          "name": "SET_UP_CONVERSATION_NODE_WITH_SPEECH",
          "num_params": 6,
          "short_desc": "Specifies the dialogue GXT's and audio ID's",
          "attrs": {
            "is_static": true
          },
          "class": "Conversation",
          "member": "SetUpNodeWithSpeech"
        },
        {
          "id": "09A5",
          "name": "SET_CCTV_EFFECT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09A6",
          "name": "SHOW_BLIPS_ON_ALL_LEVELS",
          "num_params": 1,
          "short_desc": "Enables entity blips showing on the radar and map while in interiors",
          "class": "Game",
          "member": "ShowBlipsOnAllLevels",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "09A7",
          "name": "SET_CHAR_DRUGGED_UP",
          "num_params": 2,
          "short_desc": "",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "member": "SetDruggedUp"
        },
        {
          "id": "09A8",
          "name": "IS_CHAR_HEAD_MISSING",
          "num_params": 1,
          "short_desc": "Returns true if the character has had its head shot off",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsHeadMissing"
        },
        {
          "id": "09A9",
          "name": "GET_HASH_KEY",
          "num_params": 2,
          "short_desc": "Returns the CRC hash of the input string",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "speech",
              "type": "gxt_key"
            },
            {
              "name": "speechSoundId",
              "type": "int"
            }
          ],
          "id": "09AA",
          "name": "SET_UP_CONVERSATION_END_NODE_WITH_SPEECH",
          "num_params": 2,
          "short_desc": "Sets the speech ID for the specified conversation response node",
          "class": "Conversation",
          "member": "SetUpEndNodeWithSpeech",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "speechId",
              "type": "int"
            }
          ],
          "id": "09AB",
          "name": "RANDOM_PASSENGER_SAY",
          "num_params": 2,
          "short_desc": "Makes a passenger in the vehicle speak from an ambient speech ID, if one exists for the character",
          "class": "Car",
          "member": "RandomPassengerSay"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09AC",
          "name": "HIDE_ALL_FRONTEND_BLIPS",
          "num_params": 1,
          "short_desc": "",
          "class": "Game",
          "member": "HideAllFrontendBlips",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "mode",
              "type": "int"
            }
          ],
          "id": "09AD",
          "name": "SET_PLAYER_IN_CAR_CAMERA_MODE",
          "num_params": 1,
          "short_desc": "Changes the camera mode on the current vehicle, just like when the user presses the 'change view' key",
          "class": "Camera",
          "member": "SetPlayerInCarMode",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "09AE",
          "name": "IS_CHAR_IN_ANY_TRAIN",
          "num_params": 1,
          "short_desc": "Returns true if the specified character is in a train",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsInAnyTrain"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "id": "09AF",
          "name": "SET_UP_SKIP_AFTER_MISSION",
          "num_params": 4,
          "short_desc": "Fades the screen out and teleports the player to the specified coordinates and angle",
          "class": "Skip",
          "member": "SetUpAfterMission",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09B0",
          "name": "SET_VEHICLE_IS_CONSIDERED_BY_PLAYER",
          "num_params": 2,
          "short_desc": "",
          "class": "Car",
          "member": "SetIsConsideredByPlayer"
        },
        {
          "id": "09B1",
          "name": "GET_CPU_LEVEL",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "_p1",
              "type": "bool"
            }
          ],
          "output": [
            {
              "name": "modelId",
              "type": "model_vehicle",
              "source": "var_any"
            },
            {
              "name": "class",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "09B2",
          "name": "GET_RANDOM_CAR_MODEL_IN_MEMORY",
          "num_params": 3,
          "short_desc": "",
          "class": "Streaming",
          "member": "GetRandomCarModelInMemory",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "lockStatus",
              "type": "CarLock",
              "source": "var_any"
            }
          ],
          "id": "09B3",
          "name": "GET_CAR_DOOR_LOCK_STATUS",
          "num_params": 2,
          "short_desc": "Returns the door lock mode of the vehicle",
          "class": "Car",
          "member": "GetDoorLockStatus"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "entryexitsFlag",
              "type": "EntryexitsFlag"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09B4",
          "name": "SET_CLOSEST_ENTRY_EXIT_FLAG",
          "num_params": 5,
          "short_desc": "This command is like 098E, except it finds the appropriate enex marker via its position instead of its name",
          "class": "World",
          "member": "SetClosestEntryExitFlag",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "09B5",
          "name": "SET_CHAR_SIGNAL_AFTER_KILL",
          "num_params": 2,
          "short_desc": "Sets whether the character signals after killing",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "member": "SetSignalAfterKill"
        },
        {
          "id": "09B6",
          "name": "SET_CHAR_WANTED_BY_POLICE",
          "num_params": 2,
          "short_desc": "Sets whether police should chase the character",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "member": "SetWantedByPolice"
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09B7",
          "name": "SET_ZONE_NO_COPS",
          "num_params": 2,
          "short_desc": "Sets whether cops should be prevented from spawning in the specified area",
          "class": "Zone",
          "attrs": {
            "is_static": true
          },
          "member": "SetNoCops"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "offsetX",
              "type": "float"
            },
            {
              "name": "offsetY",
              "type": "float"
            },
            {
              "name": "offsetZ",
              "type": "float"
            },
            {
              "name": "density",
              "type": "int"
            },
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "09B8",
          "name": "ADD_BLOOD",
          "num_params": 8,
          "short_desc": "",
          "class": "Fx",
          "member": "AddBlood",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09B9",
          "name": "DISPLAY_CAR_NAMES",
          "num_params": 1,
          "short_desc": "Sets whether the name of the current vehicle should be displayed",
          "class": "Hud",
          "member": "DisplayCarNames",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09BA",
          "name": "DISPLAY_ZONE_NAMES",
          "num_params": 1,
          "short_desc": "Sets whether the area text for the current area should show",
          "class": "Hud",
          "member": "DisplayZoneNames",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "door",
              "type": "CarDoor"
            }
          ],
          "id": "09BB",
          "name": "IS_CAR_DOOR_DAMAGED",
          "num_params": 2,
          "short_desc": "Returns true if the specified vehicle part is visibly damaged",
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "IsDoorDamaged"
        },
        {
          "id": "09BC",
          "name": "SET_CHAR_COORDINATES_DONT_WARP_GANG_NO_OFFSET",
          "num_params": 4,
          "short_desc": "This command is a combination of 0972 and 08C7",
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Char",
          "member": "SetCoordinatesDontWarpGangNoOffset"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09BD",
          "name": "SET_MINIGAME_IN_PROGRESS",
          "num_params": 1,
          "short_desc": "Disables displaying help messages in other scripts",
          "class": "Game",
          "member": "SetMinigameInProgress",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "09BE",
          "name": "IS_MINIGAME_IN_PROGRESS",
          "num_params": 0,
          "short_desc": "Returns true if 09BD has been used in any script to disable help messages",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "member": "IsMinigameInProgress"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "id": "09BF",
          "name": "SET_FORCE_RANDOM_CAR_MODEL",
          "num_params": 1,
          "short_desc": "Forces all cars spawned to be of the specified model",
          "class": "Game",
          "member": "SetForceRandomCarModel",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "char",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "vehicle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "id": "09C0",
          "name": "GET_RANDOM_CAR_OF_TYPE_IN_ANGLED_AREA_NO_SAVE",
          "num_params": 7,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "member": "GetRandomCarOfTypeInAngledAreaNoSave"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09C1",
          "name": "ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS",
          "num_params": 1,
          "short_desc": "Sets whether the next text is added to the brief in the menu",
          "class": "Text",
          "member": "AddNextMessageToPreviousBriefs",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "09C2",
          "name": "FAIL_KILL_FRENZY",
          "num_params": 0,
          "short_desc": "Cancels current rampage, setting the rampage status to failed",
          "class": "KillFrenzy",
          "member": "Fail",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "id": "09C3",
          "name": "IS_COP_VEHICLE_IN_AREA_3D_NO_SAVE",
          "num_params": 6,
          "short_desc": "Returns true if there's any kind of police vehicle in the specified 3D area",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "member": "IsCopVehicleInArea3DNoSave"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09C4",
          "name": "SET_PETROL_TANK_WEAKPOINT",
          "num_params": 2,
          "short_desc": "Sets whether the car can be blown up by shooting at the petrol tank",
          "class": "Car",
          "member": "SetPetrolTankWeakpoint"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "id": "09C5",
          "name": "IS_CHAR_USING_MAP_ATTRACTOR",
          "num_params": 1,
          "short_desc": "Returns true if the character is using a map attractor",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsUsingMapAttractor"
        },
        {
          "id": "09C6",
          "name": "SET_ALL_CARS_IN_AREA_VISIBLE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "09C7",
          "name": "SET_PLAYER_MODEL",
          "num_params": 2,
          "short_desc": "Changes the player to use the specified model",
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "modelId",
              "type": "int"
            }
          ],
          "class": "Player",
          "member": "SetModel"
        },
        {
          "id": "09C8",
          "name": "ARE_SUBTITLES_SWITCHED_ON",
          "num_params": 0,
          "short_desc": "Returns true if subtitles are switched on in the settings menu",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "member": "AreSubtitlesSwitchedOn"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Car"
            }
          ],
          "id": "09C9",
          "name": "REMOVE_CHAR_FROM_CAR_MAINTAIN_POSITION",
          "num_params": 2,
          "short_desc": "Removes the character from the vehicle",
          "class": "Char",
          "member": "RemoveFromCarMaintainPosition"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "bulletProof",
              "type": "bool"
            },
            {
              "name": "fireProof",
              "type": "bool"
            },
            {
              "name": "explosionProof",
              "type": "bool"
            },
            {
              "name": "collisionProof",
              "type": "bool"
            },
            {
              "name": "meleeProof",
              "type": "bool"
            }
          ],
          "id": "09CA",
          "name": "SET_OBJECT_PROOFS",
          "num_params": 6,
          "short_desc": "Sets what immunities the object has",
          "class": "Object",
          "member": "SetProofs"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "handle",
              "type": "Car"
            }
          ],
          "id": "09CB",
          "name": "IS_CAR_TOUCHING_CAR",
          "num_params": 2,
          "short_desc": "Returns true if the car is touching the other car",
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "IsTouchingCar"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "id": "09CC",
          "name": "DOES_OBJECT_HAVE_THIS_MODEL",
          "num_params": 2,
          "short_desc": "Returns true if the object's model is the model specified",
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "member": "DoesHaveThisModel"
        },
        {
          "id": "09CD",
          "name": "IS_ITALIAN_GAME",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "09CE",
          "name": "IS_SPANISH_GAME",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Train"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09CF",
          "name": "SET_TRAIN_FORCED_TO_SLOW_DOWN",
          "num_params": 2,
          "short_desc": "Sets whether the train should stop at each station it encounters",
          "class": "Train",
          "member": "SetForcedToSlowDown"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "09D0",
          "name": "IS_VEHICLE_ON_ALL_WHEELS",
          "num_params": 1,
          "short_desc": "Returns true if all the vehicle's wheels are touching the ground",
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "IsOnAllWheels"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "id": "09D1",
          "name": "DOES_PICKUP_EXIST",
          "num_params": 1,
          "short_desc": "Returns true if the handle is a valid pickup handle",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Pickup",
          "member": "DoesExist"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09D2",
          "name": "ENABLE_AMBIENT_CRIME",
          "num_params": 1,
          "short_desc": "Sets whether cops will chase and kill criminals when their task is TASK_COMPLEX_KILL_CRIMINAL",
          "class": "World",
          "member": "EnableAmbientCrime",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "09D3",
          "name": "IS_AMBIENT_CRIME_ENABLED",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "09D4",
          "name": "CLEAR_WANTED_LEVEL_IN_GARAGE",
          "num_params": 0,
          "short_desc": "Suspends the current players wanted level",
          "class": "Game",
          "member": "ClearWantedLevelInGarage",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "_p2",
              "type": "int"
            },
            {
              "name": "_p3",
              "type": "bool"
            },
            {
              "name": "_p4",
              "type": "bool"
            },
            {
              "name": "_p5",
              "type": "bool"
            }
          ],
          "output": [
            {
              "name": "_p6",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "09D5",
          "name": "SET_CHAR_SAY_CONTEXT_IMPORTANT",
          "num_params": 6,
          "short_desc": "",
          "class": "Char",
          "member": "SetSayContextImportant"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "_p2",
              "type": "int"
            },
            {
              "name": "_p3",
              "type": "bool"
            },
            {
              "name": "_p4",
              "type": "bool"
            },
            {
              "name": "_p5",
              "type": "bool"
            }
          ],
          "id": "09D6",
          "name": "SET_CHAR_SAY_SCRIPT",
          "num_params": 5,
          "short_desc": "",
          "class": "Char",
          "member": "SetSayScript"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09D7",
          "name": "FORCE_INTERIOR_LIGHTING_FOR_PLAYER",
          "num_params": 2,
          "short_desc": "",
          "class": "Player",
          "member": "ForceInteriorLighting"
        },
        {
          "id": "09D8",
          "name": "DISABLE_2ND_PAD_FOR_DEBUG",
          "num_params": 1,
          "short_desc": "Does nothing",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            }
          ],
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "09D9",
          "name": "USE_DETONATOR",
          "num_params": 0,
          "short_desc": "Detonates all satchel charges and car bombs planted by the player",
          "class": "Player",
          "member": "UseDetonator",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "09DA",
          "name": "IS_MONEY_PICKUP_AT_COORDS",
          "num_params": 3,
          "short_desc": "Returns true if a money pickup exists near the specified coordinates",
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "member": "IsMoneyPickupAtCoords"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Menu"
            },
            {
              "name": "column",
              "type": "int"
            },
            {
              "name": "width",
              "type": "int"
            }
          ],
          "id": "09DB",
          "name": "SET_MENU_COLUMN_WIDTH",
          "num_params": 3,
          "short_desc": "Sets the width of the specified menu column",
          "class": "Menu",
          "member": "SetColumnWidth"
        },
        {
          "id": "09DC",
          "name": "SET_CHAR_CAN_CLIMB_OUT_WATER",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "_p1",
              "type": "int"
            }
          ],
          "id": "09DD",
          "name": "MAKE_ROOM_IN_PLAYER_GANG_FOR_MISSION_PEDS",
          "num_params": 1,
          "short_desc": "Ensures there is x amount of space for new members to be added to the players gang",
          "class": "Game",
          "member": "MakeRoomInPlayerGangForMissionPeds",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "09DE",
          "name": "IS_CHAR_GETTING_IN_TO_A_CAR",
          "num_params": 1,
          "short_desc": "Returns true if the character is entering a car, but is not in the car",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsGettingInToACar"
        },
        {
          "id": "09DF",
          "name": "RESTORE_PLAYER_AFTER_2P_GAME",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            },
            {
              "name": "handle",
              "type": "Car"
            }
          ],
          "id": "09E0",
          "name": "SET_UP_SKIP_FOR_SPECIFIC_VEHICLE",
          "num_params": 5,
          "short_desc": "Teleports the player to the specified coordinates and sets the specified angle when in the specified car",
          "class": "Skip",
          "member": "SetUpForSpecificVehicle",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "value",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "09E1",
          "name": "GET_CAR_MODEL_VALUE",
          "num_params": 2,
          "short_desc": "Returns the value of the specified car model",
          "class": "Car",
          "member": "GetModelValue"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "int"
            },
            {
              "name": "primaryColor",
              "type": "int"
            },
            {
              "name": "secondaryColor",
              "type": "int"
            },
            {
              "name": "forceSpawn",
              "type": "bool"
            },
            {
              "name": "alarmChance",
              "type": "int"
            },
            {
              "name": "doorLockChance",
              "type": "int"
            },
            {
              "name": "minDelay",
              "type": "int"
            },
            {
              "name": "maxDelay",
              "type": "int"
            },
            {
              "name": "plateName",
              "type": "string"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "CarGenerator",
              "source": "var_any"
            }
          ],
          "id": "09E2",
          "name": "CREATE_CAR_GENERATOR_WITH_PLATE",
          "num_params": 14,
          "short_desc": "Creates a parked car generator with a number plate",
          "class": "CarGenerator",
          "member": "CreateWithPlate",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Train"
            }
          ],
          "id": "09E3",
          "name": "FIND_TRAIN_DIRECTION",
          "num_params": 1,
          "short_desc": "Returns true if the train is travelling clockwise, around San Andreas",
          "attrs": {
            "is_condition": true
          },
          "class": "Train",
          "member": "FindDirection"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09E4",
          "name": "SET_AIRCRAFT_CARRIER_SAM_SITE",
          "num_params": 1,
          "short_desc": "Enables missiles to be fired from the aircraft carrier by Easter Bay Naval Station, San Fierro",
          "class": "Game",
          "member": "SetAircraftCarrierSamSite",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "red",
              "type": "int"
            },
            {
              "name": "green",
              "type": "int"
            },
            {
              "name": "blue",
              "type": "int"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "09E5",
          "name": "DRAW_LIGHT_WITH_RANGE",
          "num_params": 7,
          "short_desc": "Draws colored light in radius of the specified point",
          "class": "Fx",
          "member": "DrawLightWithRange",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09E6",
          "name": "ENABLE_BURGLARY_HOUSES",
          "num_params": 1,
          "short_desc": "Switches enex markers used for burglary missions on or off",
          "class": "World",
          "member": "EnableBurglaryHouses",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "id": "09E7",
          "name": "IS_PLAYER_CONTROL_ON",
          "num_params": 1,
          "short_desc": "Returns true if the player control hasn't been disabled using 01B4",
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "member": "IsControlOn"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "interiorId",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "09E8",
          "name": "GET_CHAR_AREA_VISIBLE",
          "num_params": 2,
          "short_desc": "Returns the interior ID that the character is in",
          "class": "Char",
          "member": "GetAreaVisible"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "09E9",
          "name": "GIVE_NON_PLAYER_CAR_NITRO",
          "num_params": 1,
          "short_desc": "Makes the car have one nitro",
          "class": "Car",
          "member": "GiveNonPlayerNitro"
        },
        {
          "id": "09EA",
          "name": "PLAYER_PUT_ON_GOGGLES",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "animate",
              "type": "bool"
            }
          ],
          "id": "09EB",
          "name": "PLAYER_TAKE_OFF_GOGGLES",
          "num_params": 2,
          "short_desc": "Removes the players Goggles and disables night/heat vision",
          "class": "Player",
          "member": "TakeOffGoggles"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09EC",
          "name": "ALLOW_FIXED_CAMERA_COLLISION",
          "num_params": 1,
          "short_desc": "Makes the camera remain behind the player when in any garage",
          "class": "Camera",
          "member": "AllowFixedCollision",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "09ED",
          "name": "HAS_CHAR_SPOTTED_CHAR_IN_FRONT",
          "num_params": 2,
          "short_desc": "Returns true if the character can see the other character in front of them",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "HasSpottedCharInFront"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09EE",
          "name": "FORCE_BIG_MESSAGE_AND_COUNTER",
          "num_params": 1,
          "short_desc": "Prevents timers and big texts from being hidden if there is another conflicting type of text on screen",
          "class": "Text",
          "member": "ForceBigMessageAndCounter",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_vehicle"
            },
            {
              "name": "distance",
              "type": "float"
            },
            {
              "name": "altitude",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            }
          ],
          "id": "09EF",
          "name": "SET_VEHICLE_CAMERA_TWEAK",
          "num_params": 4,
          "short_desc": "Sets the position the camera automatically moves to while driving a vehicle of the specified type",
          "class": "Camera",
          "member": "SetVehicleTweak",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "09F0",
          "name": "RESET_VEHICLE_CAMERA_TWEAK",
          "num_params": 0,
          "short_desc": "Resets any changes made with 09EF",
          "class": "Camera",
          "member": "ResetVehicleTweak",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "soundId",
              "type": "int"
            }
          ],
          "id": "09F1",
          "name": "REPORT_MISSION_AUDIO_EVENT_AT_CHAR",
          "num_params": 2,
          "short_desc": "",
          "class": "Audio",
          "member": "ReportMissionAudioEventAtChar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "id": "09F2",
          "name": "DOES_DECISION_MAKER_EXIST",
          "num_params": 1,
          "short_desc": "Returns true if the handle is a valid decision maker handle",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "DecisionMaker",
          "member": "DoesExist"
        },
        {
          "id": "09F3",
          "name": "GET_RANDOM_TRAIN_IN_SPHERE_NO_SAVE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09F4",
          "name": "IGNORE_HEIGHT_DIFFERENCE_FOLLOWING_NODES",
          "num_params": 2,
          "short_desc": "",
          "class": "Char",
          "member": "IgnoreHeightDifferenceFollowingNodes"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09F5",
          "name": "SHUT_ALL_CHARS_UP",
          "num_params": 1,
          "short_desc": "Prevents all peds from attempting to start conversations with the player",
          "class": "Game",
          "member": "ShutAllCharsUp",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "09F6",
          "name": "SET_CHAR_GET_OUT_UPSIDE_DOWN_CAR",
          "num_params": 2,
          "short_desc": "Controls whether the character will try to exit an upside-down car until it is on fire",
          "class": "Char",
          "member": "SetGetOutUpsideDownCar"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "soundId",
              "type": "int"
            }
          ],
          "id": "09F7",
          "name": "REPORT_MISSION_AUDIO_EVENT_AT_CAR",
          "num_params": 2,
          "short_desc": "Plays the audio event at the car's position",
          "class": "Audio",
          "member": "ReportMissionAudioEventAtCar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "09F8",
          "name": "DO_WEAPON_STUFF_AT_START_OF_2P_GAME",
          "num_params": 0,
          "short_desc": "Gives all the weapons of player 1 to player 2 during a cooperative mission"
        },
        {
          "id": "09F9",
          "name": "SET_MENU_HEADER_ORIENTATION",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "09FA",
          "name": "HAS_GAME_JUST_RETURNED_FROM_FRONTEND",
          "num_params": 0,
          "short_desc": "Returns true if the player just exited the menu on the last frame",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "member": "HasGameJustReturnedFromFrontend"
        },
        {
          "output": [
            {
              "name": "languageSlot",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "09FB",
          "name": "GET_CURRENT_LANGUAGE",
          "num_params": 1,
          "short_desc": "Returns the current language set in the menu language settings",
          "class": "Game",
          "member": "GetCurrentLanguage",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "id": "09FC",
          "name": "IS_OBJECT_INTERSECTING_WORLD",
          "num_params": 1,
          "short_desc": "Appears to return true if something had entered the object's position since it was created or its position was changed",
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "member": "IsIntersectingWorld"
        },
        {
          "id": "09FD",
          "name": "GET_STRING_WIDTH",
          "num_params": 2,
          "short_desc": "Gets the width of the GXT entry string",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "09FE",
          "name": "RESET_VEHICLE_HYDRAULICS",
          "num_params": 1,
          "short_desc": "This resets all the hydraulics on the car, making it \"sit\"",
          "class": "Car",
          "member": "ResetHydraulics"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "id": "09FF",
          "name": "SET_RESPAWN_POINT_FOR_DURATION_OF_MISSION",
          "num_params": 3,
          "short_desc": "Overrides the respawn point",
          "class": "Restart",
          "member": "SetRespawnPointForDurationOfMission",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0A00",
          "name": "IS_THIS_MODEL_A_BIKE",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "id": "0A01",
          "name": "IS_THIS_MODEL_A_CAR",
          "num_params": 1,
          "short_desc": "Returns true if a valid car model is passed",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "member": "IsThisModelACar"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Searchlight"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A02",
          "name": "SWITCH_ON_GROUND_SEARCHLIGHT",
          "num_params": 2,
          "short_desc": "Sets whether the searchlight shows a shadow effect on the surface it hits",
          "class": "Searchlight",
          "member": "SwitchOnGround"
        },
        {
          "id": "0A03",
          "name": "IS_GANG_WAR_FIGHTING_GOING_ON",
          "num_params": 0,
          "short_desc": "Returns true if the player provoked a gang war or is defending territory",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "member": "IsGangWarFightingGoingOn"
        },
        {
          "id": "0A04",
          "name": "SET_VEHICLE_FIRING_RATE_MULTIPLIER",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0A05",
          "name": "GET_VEHICLE_FIRING_RATE_MULTIPLIER",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Train"
            }
          ],
          "id": "0A06",
          "name": "IS_NEXT_STATION_ALLOWED",
          "num_params": 1,
          "short_desc": "Returns true if the next station is accessible (at the start of the game, railroad blocks prevent the player from travelling to stations whose area is not unlocked)",
          "attrs": {
            "is_condition": true
          },
          "class": "Train",
          "member": "IsNextStationAllowed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Train"
            }
          ],
          "id": "0A07",
          "name": "SKIP_TO_NEXT_ALLOWED_STATION",
          "num_params": 1,
          "short_desc": "Puts the script created train at the next allowed station",
          "class": "Train",
          "member": "SkipToNextAllowedStation"
        },
        {
          "id": "0A08",
          "name": "GET_STRING_WIDTH_WITH_NUMBER",
          "num_params": 3,
          "short_desc": "Gets the width of the GXT entry string with the specified number",
          "input": [
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A09",
          "name": "SHUT_CHAR_UP_FOR_SCRIPTED_SPEECH",
          "num_params": 2,
          "short_desc": "Works similar to 0489, but mutes more things, including ambient speeches (needs confirming)",
          "class": "Char",
          "member": "ShutUpForScriptedSpeech"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A0A",
          "name": "ENABLE_DISABLED_ATTRACTORS_ON_OBJECT",
          "num_params": 2,
          "short_desc": "Sets whether the object attracts spawned peds to interact with it",
          "class": "Object",
          "member": "EnableDisabledAttractors"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "id": "0A0B",
          "name": "LOAD_SCENE_IN_DIRECTION",
          "num_params": 4,
          "short_desc": "",
          "class": "Streaming",
          "member": "LoadSceneInDirection",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "id": "0A0C",
          "name": "IS_PLAYER_USING_JETPACK",
          "num_params": 1,
          "short_desc": "Returns true if player is using a jetpack",
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "member": "IsUsingJetpack"
        },
        {
          "id": "0A0D",
          "name": "BLOCK_VEHICLE_MODEL",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "textStyle",
              "type": "TextStyle"
            }
          ],
          "id": "0A0E",
          "name": "CLEAR_THIS_PRINT_BIG_NOW",
          "num_params": 1,
          "short_desc": "Removes the print big text with the specified style from the screen",
          "class": "Text",
          "member": "ClearThisPrintBigNow",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0A0F",
          "name": "HAS_LANGUAGE_CHANGED",
          "num_params": 0,
          "short_desc": "Returns true if the current language set is different from the previous language set",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "member": "HasLanguageChanged"
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "id": "0A10",
          "name": "INCREMENT_INT_STAT_NO_MESSAGE",
          "num_params": 2,
          "short_desc": "",
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "member": "IncrementIntNoMessage"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "colourId1",
              "type": "int"
            },
            {
              "name": "colourId2",
              "type": "int"
            }
          ],
          "id": "0A11",
          "name": "SET_EXTRA_CAR_COLOURS",
          "num_params": 3,
          "short_desc": "",
          "class": "Car",
          "member": "SetExtraColors"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "colourId1",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "colourId2",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0A12",
          "name": "GET_EXTRA_CAR_COLOURS",
          "num_params": 3,
          "short_desc": "",
          "class": "Car",
          "member": "GetExtraColors"
        },
        {
          "id": "0A13",
          "name": "MANAGE_ALL_POPULATION",
          "num_params": 0,
          "short_desc": "",
          "class": "Game",
          "member": "ManageAllPopulation",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A14",
          "name": "SET_NO_RESPRAYS",
          "num_params": 1,
          "short_desc": "Disables respray garages from opening for the player",
          "class": "Game",
          "member": "SetNoResprays",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0A15",
          "name": "HAS_CAR_BEEN_RESPRAYED",
          "num_params": 1,
          "short_desc": "Returns true if the vehicle was resprayed in the last frame",
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "HasBeenResprayed"
        },
        {
          "input": [
            {
              "name": "slotId",
              "type": "MissionAudioSlot"
            },
            {
              "name": "handle",
              "type": "Car"
            }
          ],
          "id": "0A16",
          "name": "ATTACH_MISSION_AUDIO_TO_CAR",
          "num_params": 2,
          "short_desc": "Sets the loaded audio to play at the vehicle's location",
          "class": "Audio",
          "member": "AttachMissionAudioToCar",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "CarGenerator"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A17",
          "name": "SET_HAS_BEEN_OWNED_FOR_CAR_GENERATOR",
          "num_params": 2,
          "short_desc": "Sets whether the player will not receive a wanted level when entering a vehicle from this generator when the police is around",
          "class": "CarGenerator",
          "member": "SetHasBeenOwned"
        },
        {
          "input": [
            {
              "name": "question",
              "type": "gxt_key"
            },
            {
              "name": "positiveAnswer",
              "type": "gxt_key"
            },
            {
              "name": "negativeAnswer",
              "type": "gxt_key"
            },
            {
              "name": "questionSoundId",
              "type": "int"
            },
            {
              "name": "positiveAnswerSoundId",
              "type": "int"
            },
            {
              "name": "negativeAnswerSoundId",
              "type": "int"
            }
          ],
          "id": "0A18",
          "name": "SET_UP_CONVERSATION_NODE_WITH_SCRIPTED_SPEECH",
          "num_params": 6,
          "short_desc": "Adds a new line to the scripted conversation",
          "class": "Conversation",
          "member": "SetUpNodeWithScriptedSpeech",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "id": "0A19",
          "name": "SET_AREA_NAME",
          "num_params": 1,
          "short_desc": "Displays the text of the specified GXT entry using San Andreas' area name text style",
          "class": "Text",
          "member": "SetAreaName",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "animationFile",
              "type": "string"
            },
            {
              "name": "animationName",
              "type": "string"
            },
            {
              "name": "frameDelta",
              "type": "float"
            },
            {
              "name": "loop",
              "type": "bool"
            },
            {
              "name": "lockX",
              "type": "bool"
            },
            {
              "name": "lockY",
              "type": "bool"
            },
            {
              "name": "lockF",
              "type": "bool"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "id": "0A1A",
          "name": "TASK_PLAY_ANIM_SECONDARY",
          "num_params": 9,
          "short_desc": "Makes a character play an animation that affects only the upper half of their body",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "PlayAnimSecondary"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "id": "0A1B",
          "name": "IS_CHAR_TOUCHING_CHAR",
          "num_params": 2,
          "short_desc": "Returns true if the character is touching the other character",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsTouchingChar"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A1C",
          "name": "DISABLE_HELI_AUDIO",
          "num_params": 2,
          "short_desc": "Sets whether the helicopter sound is muted",
          "class": "Heli",
          "member": "DisableAudio"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "id": "0A1D",
          "name": "TASK_HAND_GESTURE",
          "num_params": 2,
          "short_desc": "Makes a character face the other character and make a gesture",
          "attrs": {
            "is_static": true
          },
          "class": "Task",
          "member": "HandGesture"
        },
        {
          "input": [
            {
              "name": "_p1",
              "type": "bool"
            }
          ],
          "id": "0A1E",
          "name": "TAKE_PHOTO",
          "num_params": 1,
          "short_desc": "Takes a screenshot of the screen without any HUD elements and stores the file in the \"GTA San Andreas User FilesGallery\" folder",
          "class": "Game",
          "member": "TakePhoto",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            },
            {
              "name": "value",
              "type": "float"
            }
          ],
          "id": "0A1F",
          "name": "INCREMENT_FLOAT_STAT_NO_MESSAGE",
          "num_params": 2,
          "short_desc": "Adds the value to the specified stat",
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "member": "IncrementFloatNoMessage"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A20",
          "name": "SET_PLAYER_GROUP_TO_FOLLOW_ALWAYS",
          "num_params": 2,
          "short_desc": "Controls the players ability to tell their group to wait and automatically orders any group members to continue following",
          "class": "Player",
          "member": "SetGroupToFollowAlways"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A21",
          "name": "IMPROVE_CAR_BY_CHEATING",
          "num_params": 2,
          "short_desc": "Sets whether a ped driven vehicle's handling is affected by the 'perfect handling' cheat",
          "class": "Car",
          "member": "ImproveByCheating"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Menu"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "colorSlot",
              "type": "int"
            },
            {
              "name": "row",
              "type": "int"
            }
          ],
          "id": "0A22",
          "name": "CHANGE_CAR_COLOUR_FROM_MENU",
          "num_params": 4,
          "short_desc": "",
          "class": "Menu",
          "member": "ChangeCarColor"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Menu"
            },
            {
              "name": "row",
              "type": "int"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A23",
          "name": "HIGHLIGHT_MENU_ITEM",
          "num_params": 3,
          "short_desc": "Highlights the menu item - used to indicate an owned shopping item",
          "class": "Menu",
          "member": "HighlightItem"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A24",
          "name": "SET_DISABLE_MILITARY_ZONES",
          "num_params": 1,
          "short_desc": "Causes the players wanted level to be set at 4 when in restricted areas",
          "class": "Zone",
          "member": "SetDisableMilitaryZones",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            }
          ],
          "id": "0A25",
          "name": "SET_CAMERA_POSITION_UNFIXED",
          "num_params": 2,
          "short_desc": "Sets the position of the camera to an offset of the targeted entity",
          "class": "Camera",
          "member": "SetPositionUnfixed",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0A26",
          "name": "SET_RADIO_TO_PLAYERS_FAVOURITE_STATION",
          "num_params": 0,
          "short_desc": "Sets the radio station of the vehicle the player is currently in to the favourite station, retrieved from the stats (ID 326)",
          "class": "Audio",
          "member": "SetRadioToPlayersFavouriteStation",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A27",
          "name": "SET_DEATH_WEAPONS_PERSIST",
          "num_params": 2,
          "short_desc": "Prevents pickups, which are created when this character dies, from disappearing until picked up by the player",
          "class": "Char",
          "member": "SetDeathWeaponsPersist"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "speed",
              "type": "float"
            }
          ],
          "id": "0A28",
          "name": "SET_SWIM_SPEED",
          "num_params": 2,
          "short_desc": "Sets the speed that the character swims at, changing their swimming animation speed",
          "class": "Char",
          "member": "SetSwimSpeed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "id": "0A29",
          "name": "IS_PLAYER_CLIMBING",
          "num_params": 1,
          "short_desc": "Returns true if the player is climbing",
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "member": "IsClimbing"
        },
        {
          "input": [
            {
              "name": "gxt",
              "type": "gxt_key"
            }
          ],
          "id": "0A2A",
          "name": "IS_THIS_HELP_MESSAGE_BEING_DISPLAYED",
          "num_params": 1,
          "short_desc": "Returns true if a help message with the specified GXT entry is being displayed",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Text",
          "member": "IsThisHelpMessageBeingDisplayed"
        },
        {
          "id": "0A2B",
          "name": "IS_WIDESCREEN_ON_IN_OPTIONS",
          "num_params": 0,
          "short_desc": "Returns true if widescreen is switched on in the display settings",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "member": "IsWidescreenOnInOptions"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A2C",
          "name": "DRAW_SUBTITLES_BEFORE_FADE",
          "num_params": 1,
          "short_desc": "Sets whether the text stays on the screen when it fades out",
          "class": "Text",
          "member": "DrawSubtitlesBeforeFade",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A2D",
          "name": "DRAW_ODDJOB_TITLE_BEFORE_FADE",
          "num_params": 1,
          "short_desc": "Sets whether the styled text stays on the screen when it fades out",
          "class": "Text",
          "member": "DrawOddjobTitleBeforeFade",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "mode",
              "type": "int"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "id": "0A2E",
          "name": "TASK_FOLLOW_PATH_NODES_TO_COORD_WITH_RADIUS",
          "num_params": 7,
          "short_desc": "Makes the specified character run in panic to the specified position",
          "class": "Task",
          "member": "FollowPathNodesToCoordWithRadius",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A2F",
          "name": "SET_PHOTO_CAMERA_EFFECT",
          "num_params": 1,
          "short_desc": "Puts the camera in first-person mode if the player is holding a weapon with a first-person shooting mode (such as a sniper rifle or camera)",
          "class": "Camera",
          "member": "SetPhotoEffect",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0A30",
          "name": "FIX_CAR",
          "num_params": 1,
          "short_desc": "Restores the vehicle to full health and removes the damage",
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "member": "Fix"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A31",
          "name": "SET_PLAYER_GROUP_TO_FOLLOW_NEVER",
          "num_params": 2,
          "short_desc": "Sets whether the player's group stops following the player, even if the player uses the \"group follow\" button",
          "class": "Player",
          "member": "SetGroupToFollowNever"
        },
        {
          "id": "0A32",
          "name": "IS_CHAR_ATTACHED_TO_ANY_CAR",
          "num_params": 1,
          "short_desc": "Returns true if the actor is turreted on any vehicle",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsAttachedToAnyCar"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "id": "0A33",
          "name": "STORE_CAR_CHAR_IS_ATTACHED_TO_NO_SAVE",
          "num_params": 2,
          "short_desc": "Returns the vehicle the character is attached to",
          "class": "Char",
          "member": "StoreCarIsAttachedToNoSave"
        },
        {
          "id": "0A34",
          "name": "SET_UP_SKIP_TO_BE_FINISHED_BY_SCRIPT",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "id": "0A35",
          "name": "SET_UP_SKIP_FOR_VEHICLE_FINISHED_BY_SCRIPT",
          "num_params": 5,
          "short_desc": "Teleports the player to the specified coordinates and sets the specified angle with the screen fading in when in the specified car",
          "class": "Skip",
          "member": "SetUpForVehicleFinishedByScript",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0A36",
          "name": "IS_SKIP_WAITING_FOR_SCRIPT_TO_FADE_IN",
          "num_params": 0,
          "short_desc": "Returns true if the trip skip created with 0A35 has finished teleporting the vehicle and is ready to allow the script to fade in",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Skip",
          "member": "IsWaitingForScriptToFadeIn"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A37",
          "name": "FORCE_ALL_VEHICLE_LIGHTS_OFF",
          "num_params": 1,
          "short_desc": "Disables all vehicle lights from being rendered if enabled",
          "class": "Game",
          "member": "ForceAllVehicleLightsOff",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0A38",
          "name": "SET_RENDER_PLAYER_WEAPON",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "output": [
            {
              "name": "mode",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "0A39",
          "name": "GET_PLAYER_IN_CAR_CAMERA_MODE",
          "num_params": 1,
          "short_desc": "Gets the players chosen camera mode of the current vehicle",
          "class": "Camera",
          "member": "GetPlayerInCarMode",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "id": "0A3A",
          "name": "IS_LAST_BUILDING_MODEL_SHOT_BY_PLAYER",
          "num_params": 2,
          "short_desc": "Returns true if the player's last shot model is the model specified",
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "member": "IsLastBuildingModelShot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "id": "0A3B",
          "name": "CLEAR_LAST_BUILDING_MODEL_SHOT_BY_PLAYER",
          "num_params": 1,
          "short_desc": "Resets the status of the last model the player has shot",
          "class": "Player",
          "member": "ClearLastBuildingModelShot"
        },
        {
          "input": [
            {
              "name": "speech",
              "type": "gxt_key"
            },
            {
              "name": "speechSoundId",
              "type": "int"
            }
          ],
          "id": "0A3C",
          "name": "SET_UP_CONVERSATION_END_NODE_WITH_SCRIPTED_SPEECH",
          "num_params": 2,
          "short_desc": "Sets the script audio ID (see 03CF) for the specified conversation response node",
          "class": "Conversation",
          "member": "SetUpEndNodeWithScriptedSpeech",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A3D",
          "name": "ACTIVATE_PIMP_CHEAT",
          "num_params": 1,
          "short_desc": "Sets whether sleeping with a prostitute earns you money instead of taking it away from you",
          "class": "Game",
          "member": "ActivatePimpCheat",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radiusX",
              "type": "float"
            },
            {
              "name": "radiusY",
              "type": "float"
            },
            {
              "name": "radiusZ",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "id": "0A3E",
          "name": "GET_RANDOM_CHAR_IN_AREA_OFFSET_NO_SAVE",
          "num_params": 7,
          "short_desc": "Returns the first char in the ped pool within radius of the specified point",
          "class": "World",
          "member": "GetRandomCharInAreaOffsetNoSave",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A3F",
          "name": "SET_SCRIPT_COOP_GAME",
          "num_params": 1,
          "short_desc": "Sets an unused flag at address 0x96A8A8",
          "class": "Game",
          "member": "SetScriptCoopGame",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "color",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "User3DMarker",
              "source": "var_any"
            }
          ],
          "id": "0A40",
          "name": "CREATE_USER_3D_MARKER",
          "num_params": 5,
          "short_desc": "Creates a marker similar to the yellow enex markers",
          "class": "User3DMarker",
          "member": "Create",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "User3DMarker"
            }
          ],
          "id": "0A41",
          "name": "REMOVE_USER_3D_MARKER",
          "num_params": 1,
          "short_desc": "Destroys a marker created with 0A40",
          "class": "User3DMarker",
          "member": "Remove",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "id": "0A42",
          "name": "REMOVE_ALLUSER_3D_MARKERS",
          "num_params": 0,
          "short_desc": "Does nothing",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0A43",
          "name": "GET_RID_OF_PLAYER_PROSTITUTE",
          "num_params": 0,
          "short_desc": "Cancels any prostitute invitations received in-game and makes any current prostitutes quit",
          "class": "Game",
          "member": "GetRidOfPlayerProstitute",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A44",
          "name": "DISPLAY_NON_MINIGAME_HELP_MESSAGES",
          "num_params": 1,
          "short_desc": "Overrides the text block set by 09BD",
          "class": "Text",
          "member": "DisplayNonMinigameHelpMessages",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "mult",
              "type": "float"
            }
          ],
          "id": "0A45",
          "name": "SET_RAILTRACK_RESISTANCE_MULT",
          "num_params": 1,
          "short_desc": "Sets the friction/slowdown rate on all rail tracks",
          "class": "World",
          "member": "SetRailtrackResistanceMult",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "type",
              "type": "ScriptBrainAttachType"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A46",
          "name": "SWITCH_OBJECT_BRAINS",
          "num_params": 2,
          "short_desc": "Enables or disables all triggers of the specified type (0928 or 0929)",
          "class": "Game",
          "member": "SwitchObjectBrains",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0A47",
          "name": "FINISH_SETTING_UP_CONVERSATION_NO_SUBTITLES",
          "num_params": 0,
          "short_desc": "",
          "class": "Conversation",
          "member": "FinishSettingUpNoSubtitles",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0A48",
          "name": "ALLOW_PAUSE_IN_WIDESCREEN",
          "num_params": 1,
          "short_desc": "Enables the player to access the pause menu while widescreen is enabled",
          "class": "Game",
          "member": "AllowPauseInWidescreen",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0A49",
          "name": "IS_XBOX_VERSION",
          "num_params": 0,
          "short_desc": "Returns true for Xbox versions of the game",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "output": [
            {
              "name": "offsetX",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "offsetY",
              "type": "float",
              "source": "var_any"
            }
          ],
          "id": "0A4A",
          "name": "GET_PC_MOUSE_MOVEMENT",
          "num_params": 2,
          "short_desc": "Gives the offset of the mouse or right thumbstick movement",
          "class": "Mouse",
          "member": "GetMovement",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "0A4B",
          "name": "IS_PC_USING_JOYPAD",
          "num_params": 0,
          "short_desc": "Returns true if players controls are set to joystick and not mouse+keyboard",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "member": "IsPcUsingJoypad"
        },
        {
          "id": "0A4C",
          "name": "IS_MOUSE_USING_VERTICAL_INVERSION",
          "num_params": 0,
          "short_desc": "Returns true if the players settings are set to invert the mouse",
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Mouse",
          "member": "IsUsingVerticalInversion"
        },
        {
          "id": "0A4D",
          "name": "IS_JAPANESE_VERSION",
          "num_params": 0,
          "short_desc": "Returns true for Japanese versions of the game",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "id": "0A4E",
          "name": "IS_XBOX_PLAYER2_PRESSING_START",
          "num_params": 0,
          "short_desc": "Returns true on Xbox versions of the game if player 2 is pressing the start button",
          "attrs": {
            "is_condition": true
          }
        }
      ]
    }
  ]
}